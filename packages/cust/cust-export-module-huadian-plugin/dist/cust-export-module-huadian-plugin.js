(()=>{"use strict";var e={776:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(481),l=t.n(o),a=t(966),r=t.n(a)()(l());r.push([e.id,"\n.s-export-part-template-modal .el-dialog__body {\n    padding: 0;\n}\n.treetag .el-select-dropdown__item {\n    padding: 0 !important;\n}\n","",{version:3,sources:["webpack://./src/components/export-part-template-module-render.vue"],names:[],mappings:";AA0wCE;IACE,UAAU;AACZ;AACA;IACE,qBAAqB;AACvB",sourcesContent:['<template>\n  <el-dialog\n    v-model="visible"\n    class="s-export-part-template-modal"\n    width="800px"\n    align-center\n    destroy-on-close\n    append-to-body\n    :close-on-click-modal="false"\n    @close="close()">\n    <template #header>\n      <span style="margin-right: 8px">\n        发布为局部模板\n      </span>\n      <el-tooltip placement="top">\n        <s-others-icon\n          :class="$style.titleTipIcon"\n          name="help_line"></s-others-icon>\n        <template #content>\n          <div style="width: 300px">\n            应用中的部分内容（页面、逻辑、实体等）可导出为局部模板。局部模板可在其他应用中导入，用于快捷创建相同的页面、逻辑、实体等。\n          </div>\n        </template>\n      </el-tooltip>\n    </template>\n    <el-container>\n      <el-aside\n        :class="$style.left"\n        style="\n          width: 400px;\n          height: 478px;\n          overflow: scroll;\n        ">\n        <el-form\n          ref="formRef"\n          label-position="top"\n          :model="model"\n          require-asterisk-position="right"\n          @validate="formValid = $event.valid">\n          <div :class="$style.symbolbox">\n            <s-upload-icon\n              v-if="!isEditOldTemp"\n              @changeIcon="changeIcon"\n              :can-edit="canEditIcon"\n              :prop-icon="\n                model.icon\n              "></s-upload-icon>\n            <el-form-item\n              style="position: relative"\n              required\n              :rules="\n                isEditOldTemp\n                  ? {}\n                  : validateRules.symbol\n              "\n              prop="symbol"\n              for="none">\n              <template #label>\n                <span>\n                  {{\n                    isEditOldTemp\n                      ? "模板名称（标识）"\n                      : "模板标识"\n                  }}\n                </span>\n                <div\n                  :class="$style.histroy"\n                  v-if="\n                    historyList.length > 0 &&\n                    isEditOldTemp\n                  ">\n                  <el-link\n                    @click="canEditToNewTemp">\n                    发布为新模板\n                  </el-link>\n                </div>\n\n                <div\n                  :class="$style.histroy"\n                  style="left: 203px"\n                  v-else-if="\n                    historyList.length > 0 &&\n                    !isEditOldTemp\n                  ">\n                  <el-popover\n                    width="auto"\n                    trigger="click">\n                    <template #reference>\n                      <el-link>发布历史</el-link>\n                    </template>\n                    <div :class="$style.menu">\n                      <div\n                        :class="$style.menuItem"\n                        v-for="(\n                          history, index\n                        ) in historyList"\n                        :key="index">\n                        <div\n                          style="\n                            display: flex;\n                            justify-content: space-between;\n                          ">\n                          <span\n                            :class="\n                              $style.menuName\n                            ">\n                            {{ history.name }}\n                          </span>\n                          <el-link\n                            @click="\n                              toggleHistory(\n                                history\n                              )\n                            ">\n                            发布到该模板\n                          </el-link>\n                        </div>\n                        <div\n                          :class="\n                            $style.menuSymbol\n                          ">\n                          标识：{{\n                            history.symbol\n                          }}\n                        </div>\n                      </div>\n                    </div>\n                  </el-popover>\n                </div>\n                <el-tooltip\n                  v-if="!isEditOldTemp"\n                  type="help"\n                  placement="top"\n                  :class="$style.histroy"\n                  style="\n                    left: 64px;\n                    margin-top: 4px;\n                  "\n                  size="auto">\n                  <s-others-icon\n                    name="help_line"\n                    style="\n                      margin-left: 8px;\n                    "></s-others-icon>\n                  <template #content>\n                    <div style="width: 300px">\n                      若发布为已存在的局部模板的“新版本”，则请输入已存在的局部模板标识；若发布为新的局部模板发布，则请输入新的唯一模板标识。\n                    </div>\n                  </template>\n                </el-tooltip>\n              </template>\n              <el-input\n                v-if="!isEditOldTemp"\n                v-model="model.symbol"\n                maxlength="100"\n                :disabled="loading"\n                maxlength-message="标识最长100字符"\n                placeholder="请输入"\n                style="width: 252px"></el-input>\n              <el-select\n                v-else\n                style="width: 336px"\n                placeholder="请选择模板历史"\n                v-model="lastItem.symbol"\n                :data="historyEditList"\n                @change="\n                  onSelectSegmentTemp($event)\n                ">\n                <el-option\n                  v-for="option in historyEditList"\n                  :key="option.value"\n                  :label="option.label"\n                  :value="\n                    option.value\n                  "></el-option>\n              </el-select>\n            </el-form-item>\n          </div>\n          <el-form-item\n            v-if="!isEditOldTemp"\n            label="模板名称"\n            required\n            :rules="validateRules.name"\n            prop="name"\n            for="none">\n            <el-input\n              v-model="model.name"\n              :disabled="loading"\n              maxlength="50"\n              maxlength-message="模板名称最长50字符"\n              placeholder="请输入"></el-input>\n          </el-form-item>\n          <el-form-item\n            v-if="!isEditOldTemp"\n            style="position: relative"\n            label="模板分类（资产中心展示）"\n            required\n            :rules="validateRules.tags"\n            prop="tags"\n            for="none">\n            <div :class="$style.tagcategory">\n              <el-link\n                :disabled="!checkPermission"\n                @click="openAssetconfig">\n                分类管理\n                <s-others-icon\n                  name="check-detail"\n                  :class="\n                    $style.toDetail\n                  "></s-others-icon>\n              </el-link>\n              <u-tooltip\n                v-if="!checkPermission"\n                trigger="hover"\n                placement="top"\n                :hover-delay="500">\n                暂无操作权限\n              </u-tooltip>\n            </div>\n            <el-tree-select\n              class="treetag"\n              v-model="model.tags"\n              style="width: 336px"\n              :data="taglist"\n              multiple\n              :render-after-expand="false"\n              show-checkbox\n              node-key="id"\n              :default-expanded-keys="[\n                \'全部分类\'\n              ]"\n              @change="onSelectTags"\n              :props="{\n                children: \'child\',\n                label: \'tag\',\n                disabled: \'disable\'\n              }" />\n          </el-form-item>\n          \x3c!-- <div :class="$style.dashline"></div> --\x3e\n          <el-form-item\n            label="发布版本"\n            required\n            layout="block"\n            :rules="validateRules.checkVersion"\n            ref="version"\n            prop="version"\n            for="none">\n            <span\n              :class="$style.lastVersionTitle">\n              (上次导出的版本：{{\n                isEditOldTemp\n                  ? lastVersion || "暂无"\n                  : "暂无"\n              }}\n              )\n            </span>\n            <s-version\n              v-model:value="model.version"\n              :disabled="loading"\n              min-value="1.0.0"></s-version>\n          </el-form-item>\n          <el-form-item\n            label="版本描述"\n            :rules="validateRules.description"\n            prop="description"\n            for="none">\n            <el-input\n              type="textarea"\n              v-model="model.description"\n              :disabled="loading"\n              maxlength="500"\n              show-word-limit\n              placeholder="请输入"\n              :autosize="{\n                minRows: 5\n              }"></el-input>\n          </el-form-item>\n          <el-form-item\n            label="版本配图"\n            style="margin-bottom: 0"\n            for="none">\n            <s-uploader\n              v-model:file-list="model.picture"\n              multiple\n              list-type="picture"\n              drag\n              action="/api/v1/userIcon/upload"\n              max-size="50MB"\n              accept="image/png, image/jpg, image/jpeg, image/gif, image/bmp"\n              :limit="10"\n              :class="$style.upload">\n              <div :class="$style.uploadArea">\n                <s-others-icon\n                  name="upload"\n                  :class="\n                    $style.uploadIcon\n                  "></s-others-icon>\n                点击/拖拽/粘贴文件到这里\n              </div>\n            </s-uploader>\n          </el-form-item>\n        </el-form>\n      </el-aside>\n      <el-main\n        :class="$style.right"\n        style="width: 400px; height: 478px">\n        <div :class="$style.tipwrap">\n          <div>\n            <span :class="$style.tiptext">\n              请选择能力\n            </span>\n            <span :class="$style.required">\n              *\n            </span>\n            <span\n              :class="$style.errmsg"\n              v-if="isEmptyChecked">\n              <s-others-icon\n                name="solid-hint"\n                :class="\n                  $style.iconinfo\n                "></s-others-icon>\n              请至少选择一项能力\n            </span>\n          </div>\n          <div>\n            <el-checkbox\n              :class="$style.autoCheck"\n              v-model="autoCheckdepends">\n              自动勾选依赖项\n            </el-checkbox>\n            <el-tooltip placement="top">\n              <s-others-icon\n                name="hint"\n                :class="\n                  $style.hinticon\n                "></s-others-icon>\n              <template #content>\n                <div style="width: 300px">\n                  若开发者只想将前端页面导出为模板复用，后端逻辑相关希望让模板使用者自己定义，此时可选择不导出前端页面所依赖的后端逻辑。\n                </div>\n              </template>\n            </el-tooltip>\n          </div>\n        </div>\n        <div\n          v-if="loading"\n          :class="$style.loading">\n          <div v-loading="loading"></div>\n          <div :class="$style.text">\n            数据加载中，请稍后...\n          </div>\n        </div>\n        <div\n          v-else-if="empty"\n          :class="$style.loading">\n          <div :class="$style.text">\n            暂无可导出对象\n          </div>\n        </div>\n        <el-scrollbar\n          v-else\n          :class="$style.scrollview">\n          <el-tree-v2\n            ref="treeViewRef"\n            :data="treeData"\n            :props="treeProps"\n            :height="400"\n            :item-size="35"\n            show-checkbox\n            :default-expanded-keys="\n              defaultExpandedKeys\n            "\n            :default-checked-keys="checkedValues"\n            class="s-tree s-tree-export-template"\n            check-strictly\n            @check-change="onCheckChange"\n            @node-expand="setDirectoryExpandIcon"\n            @node-collapse="\n              setDirectoryCollapseIcon\n            ">\n            <template #default="{ data: node }">\n              <u-tooltip\n                trigger="hover"\n                placement="left"\n                :show-after="200"\n                reference="prev"\n                :disabled="!node.exportDisabled">\n                暂不支持导出\n              </u-tooltip>\n              <template\n                v-if="\n                  node.concept ===\n                  \'ConfigProperty\'\n                ">\n                <div :class="$style.configWrap">\n                  <div :class="$style.main">\n                    <s-concept-icon\n                      :name="\n                        node.icon || node.concept\n                      "\n                      :class="\n                        $style.conceptIcon\n                      "></s-concept-icon>\n                    <span>{{ node.name }}</span>\n                  </div>\n                  <div\n                    :class="$style.desc"\n                    v-if="node.description">\n                    {{ node.description }}\n                  </div>\n                </div>\n              </template>\n              <template v-else>\n                <template\n                  v-if="\n                    node.concept ===\n                    \'ConnectorModuleItem\'\n                  ">\n                  <s-upload-icon\n                    v-if="\n                      isImage(\n                        getConnectorSetting(node)\n                          .icon\n                      )\n                    "\n                    displayModeCustom\n                    width="14px"\n                    height="14px"\n                    :can-edit="false"\n                    :prop-icon="\n                      getConnectorSetting(node)\n                        .icon\n                    "\n                    :class="$style.uploadIcon" />\n                  <s-concept-icon\n                    v-else\n                    :name="\n                      getConnectorSetting(node)\n                        .icon\n                    "\n                    :class="\n                      $style.conceptIcon\n                    "></s-concept-icon>\n                </template>\n                <template\n                  v-else-if="\n                    node.concept === \'Connection\'\n                  ">\n                  <s-upload-icon\n                    v-if="\n                      isImage(\n                        node.connector.previewImg,\n                        node.connector\n                          .connectorKind\n                      )\n                    "\n                    displayModeCustom\n                    width="14px"\n                    height="14px"\n                    :can-edit="false"\n                    :prop-icon="\n                      getConnectorWrapperIcon(\n                        node\n                      )\n                    "\n                    :class="$style.uploadIcon" />\n                  <s-concept-icon\n                    v-else\n                    :name="\n                      node.connector.connectorKind\n                    "\n                    :class="\n                      $style.conceptIcon\n                    "></s-concept-icon>\n                </template>\n                <s-concept-icon\n                  v-else\n                  :name="getIcon(node)"\n                  :class="\n                    $style.conceptIcon\n                  "></s-concept-icon>\n                <div\n                  :class="$style.topTitle"\n                  v-if="\n                    node.concept &&\n                    node.concept.endsWith(\n                      \'Root\'\n                    ) &&\n                    node.concept !==\n                      \'DataSourceRoot\'\n                  ">\n                  <span\n                    class="titellipsis"\n                    :title="\n                      node.aliasName || node.name\n                    ">\n                    {{\n                      node.aliasName || node.name\n                    }}\n                  </span>\n                  <el-link\n                    v-show="\n                      node.childNodes.length > 0\n                    "\n                    @click="\n                      onCheckAll($event, node)\n                    ">\n                    {{ getCheckedState(node) }}\n                  </el-link>\n                </div>\n                <div\n                  :class="$style.topTitle"\n                  v-else-if="\n                    node.concept === \'DataSource\'\n                  ">\n                  <div>\n                    <span\n                      class="titellipsis"\n                      :title="\n                        node.aliasName ||\n                        node.name\n                      ">\n                      {{\n                        node.aliasName ||\n                        node.name\n                      }}\n                    </span>\n                    <s-others-icon\n                      name="info"\n                      :class="$style.dreficon">\n                      <u-tooltip\n                        trigger="hover"\n                        placement="top"\n                        :show-after="200">\n                        数据源不会带出数据库链接等信息，不支持数据共享\n                      </u-tooltip>\n                    </s-others-icon>\n                  </div>\n                  <el-link\n                    @click="\n                      onCheckAll($event, node)\n                    "\n                    v-if="!node.module">\n                    {{ getCheckedState(node) }}\n                  </el-link>\n                </div>\n                <span\n                  v-else\n                  class="titellipsis"\n                  :title="getTextName(node)">\n                  {{ getTextName(node) }}\n                </span>\n                <span\n                  v-if="\n                    [\n                      \'Module\',\n                      \'ConnectorModuleItem\'\n                    ].includes(node.concept)\n                  ">\n                  {{\n                    node.version\n                      ? `（${node.version}）`\n                      : ""\n                  }}\n                </span>\n              </template>\n              <s-others-icon\n                v-if="\n                  getNodeReferences(node).length\n                "\n                name="depend-reference"\n                :class="$style.dreficon">\n                <u-tooltip\n                  trigger="hover"\n                  placement="top"\n                  :show-after="200">\n                  <div :class="$style.refwrap">\n                    <span>依赖关系：</span>\n                    <span\n                      v-for="(\n                        nref, index\n                      ) in getNodeReferences(\n                        node\n                      )"\n                      :key="nref.name">\n                      <template\n                        v-if="\n                          nref.concept ===\n                          \'ConnectorModuleItem\'\n                        ">\n                        <s-upload-icon\n                          v-if="\n                            isImage(\n                              getConnectorSetting(\n                                nref.node\n                              ).icon\n                            )\n                          "\n                          displayModeCustom\n                          width="14px"\n                          height="14px"\n                          :can-edit="false"\n                          :prop-icon="\n                            getConnectorSetting(\n                              nref.node\n                            ).icon\n                          "\n                          :class="\n                            $style.reficon\n                          " />\n                        <s-concept-icon\n                          v-else\n                          :name="\n                            getConnectorSetting(\n                              nref.node\n                            ).icon\n                          "\n                          :class="\n                            $style.reficon\n                          "></s-concept-icon>\n                      </template>\n                      <template\n                        v-else-if="\n                          nref.concept ===\n                          \'Connection\'\n                        ">\n                        <s-upload-icon\n                          v-if="\n                            isImage(\n                              nref.node.connector\n                                .previewImg,\n                              nref.node.connector\n                                .connectorKind\n                            )\n                          "\n                          displayModeCustom\n                          width="14px"\n                          height="14px"\n                          :can-edit="false"\n                          :prop-icon="\n                            getConnectorWrapperIcon(\n                              nref.node\n                            )\n                          "\n                          :class="\n                            $style.reficon\n                          " />\n                        <s-concept-icon\n                          v-else\n                          :name="\n                            nref.node.connector\n                              .connectorKind\n                          "\n                          :class="\n                            $style.reficon\n                          "></s-concept-icon>\n                      </template>\n                      <s-concept-icon\n                        v-else\n                        :name="getIcon(nref)"\n                        :class="\n                          $style.reficon\n                        "></s-concept-icon>\n                      <span>{{ nref.name }}</span>\n                      <span\n                        v-if="\n                          index !==\n                          getNodeReferences(node)\n                            .length -\n                            1\n                        ">\n                        、\n                      </span>\n                    </span>\n                  </div>\n                </u-tooltip>\n              </s-others-icon>\n            </template>\n          </el-tree-v2>\n        </el-scrollbar>\n      </el-main>\n    </el-container>\n    <template #footer>\n      <div\n        style="\n          display: flex;\n          justify-content: space-between;\n        ">\n        <el-space v-if="hasPreCheckedNodes">\n          <span>发布的资产，可前往</span>\n          <el-link @click="goAssetCenterSeg">\n            「资产中心-局部模板」\n          </el-link>\n          <span>查看</span>\n        </el-space>\n        <el-space v-else>&nbsp</el-space>\n        <el-space justify="end">\n          <el-button @click="close()">\n            取 消\n          </el-button>\n          <el-button\n            type="primary"\n            @click="onSubmit"\n            :loading="submiting">\n            发 布\n          </el-button>\n        </el-space>\n      </div>\n    </template>\n  </el-dialog>\n</template>\n\n<script setup>\n  import { inject } from "vue"\n\n  const {\n    /**\n     * 表单节点\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    formRef,\n    /**\n     * 树形视图节点\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    treeViewRef,\n    /**\n     * 是否可见\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    visible,\n    /**\n     * 是否加载中\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    loading,\n    /**\n     * 是否为空\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    empty,\n    /**\n     * 是否提交中\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    submiting,\n    /**\n     * 是否编辑旧模板\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    isEditOldTemp,\n    /**\n     * 是否可以编辑图标\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    canEditIcon,\n    /**\n     * 是否自动勾选依赖\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    autoCheckdepends,\n    /**\n     * 是否为空选中\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    isEmptyChecked,\n    /**\n     * 是否有预选节点\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    hasPreCheckedNodes,\n    /**\n     * 是否有权限\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    checkPermission,\n    /**\n     * 表单数据\n     *\n     * @type {Vue.reactive<object>}\n     * @property {string} icon - 图标\n     * @property {array} picture - 图片列表\n     * @property {array} tags - 标签列表\n     * @property {string} symbol - 标识\n     * @property {string} name - 名称\n     * @property {string} version - 版本\n     * @property {string} description - 描述\n     */\n    model,\n    /**\n     * 验证规则\n     *\n     * @type {object}\n     */\n    validateRules,\n    /**\n     * 标签列表\n     *\n     * @type {Vue.ref<array>}\n     */\n    taglist,\n    /**\n     * 历史列表\n     *\n     * @type {Vue.ref<array>}\n     */\n    historyList,\n    /**\n     * 历史编辑列表\n     *\n     * @type {Vue.ref<array>}\n     */\n    historyEditList,\n    /**\n     * 最后一项\n     *\n     * @type {Vue.reactive<object>}\n     * @property {string} name - 名称\n     * @property {string} symbol - 标识\n     * @property {string} value - 值\n     * @property {string} text - 文本\n     */\n    lastItem,\n    /**\n     * 最后版本\n     *\n     * @type {Vue.ref<string>}\n     */\n    lastVersion,\n    /**\n     * 树形数据\n     *\n     * @type {Vue.ref<array>}\n     */\n    treeData,\n    /**\n     * 树形属性\n     *\n     * @type {object}\n     */\n    treeProps,\n    /**\n     * 默认展开的键\n     *\n     * @type {Vue.ref<array>}\n     */\n    defaultExpandedKeys,\n    /**\n     * 选中的值\n     *\n     * @type {Vue.ref<array>}\n     */\n    checkedValues,\n    /**\n     * 关闭对话框\n     *\n     * @function\n     */\n    close,\n    /**\n     * 改变图标\n     *\n     * @function\n     * @param {string} item - 图标值\n     */\n    changeIcon,\n    /**\n     * 编辑为新模板\n     *\n     * @function\n     * @param {Event} e - 事件对象\n     */\n    canEditToNewTemp,\n    /**\n     * 跳转到资产中心\n     *\n     * @function\n     */\n    goAssetCenterSeg,\n    /**\n     * 打开资产配置\n     *\n     * @function\n     */\n    openAssetconfig,\n    /**\n     * 选择模板\n     *\n     * @function\n     * @param {string} symbol - 标识\n     */\n    onSelectSegmentTemp,\n    /**\n     * 选择标签\n     *\n     * @function\n     * @param {array} item - 标签列表\n     */\n    onSelectTags,\n    /**\n     * 切换历史\n     *\n     * @function\n     * @param {object} item - 历史项\n     */\n    toggleHistory,\n    /**\n     * 提交表单\n     *\n     * @function\n     */\n    onSubmit,\n    /**\n     * 检查变更\n     *\n     * @function\n     * @param {object} node - 节点\n     * @param {boolean} checked - 是否选中\n     */\n    onCheckChange,\n    /**\n     * 设置目录展开图标\n     *\n     * @function\n     * @param {object} node - 节点\n     */\n    setDirectoryExpandIcon,\n    /**\n     * 设置目录折叠图标\n     *\n     * @function\n     * @param {object} node - 节点\n     */\n    setDirectoryCollapseIcon,\n    /**\n     * 获取节点引用\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {array} 引用列表\n     */\n    getNodeReferences,\n    /**\n     * 获取图标\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {string} 图标名称\n     */\n    getIcon,\n    /**\n     * 获取文本名称\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {string} 文本名称\n     */\n    getTextName,\n    /**\n     * 获取选中状态\n     *\n     * @function\n     * @param {object} node - 节点\n     * @param {array} allCheckedkeys - 所有选中的键\n     * @returns {string} 选中状态\n     */\n    getCheckedState,\n    /**\n     * 全选\n     *\n     * @function\n     * @param {Event} e - 事件对象\n     * @param {object} node - 节点\n     */\n    onCheckAll,\n    /**\n     * 是否为图片\n     *\n     * @function\n     * @param {string} icon - 图标\n     * @param {string} connectorKind - 连接器类型\n     * @returns {boolean} 是否为图片\n     */\n    isImage,\n    /**\n     * 获取连接器设置\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {object} 连接器设置\n     */\n    getConnectorSetting,\n    /**\n     * 获取连接器包装图标\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {string} 图标\n     */\n    getConnectorWrapperIcon\n  } = inject("$context")\n\n  if (!validateRules.tags) {\n    validateRules.tags = [\n      {\n        required: true,\n        message: "请选择模板分类",\n        trigger: ["blur", "change"]\n      }\n    ]\n  }\n<\/script>\n\n<style module>\n  .dashline {\n    border-top: 1px dashed\n      var(--line-color-primary);\n    margin: 8px 0 20px;\n  }\n  .left {\n    border-right: 1px solid\n      var(--depends-tree-view-border-color);\n  }\n  /* .left [class^=\'el-form-item\'] {\n  margin-bottom: 18px;\n} */\n  .left,\n  .right {\n    padding: 24px;\n  }\n  .right {\n    padding-bottom: 0;\n  }\n  .topTitle {\n    display: inline-flex;\n    justify-content: space-between;\n    width: 100%;\n    padding-right: 15px;\n  }\n\n  .conceptIcon {\n    vertical-align: -1px;\n  }\n  .nodeItem[disabled] .conceptIcon,\n  .nodeItem[disabled] .uploadIcon {\n    opacity: 0.6;\n  }\n  .scrollview {\n    height: calc(100% - 50px);\n    /* background: var(--depends-tree-view-background); */\n    border-radius: 4px;\n    background: var(--seg-tree-view-background);\n    /* border: 1px solid var(--seg-tree-view-border-color); */\n  }\n  /* 为了横向滚动hover tree node的时候能够覆盖整条 */\n  .scrollview\n    [class^="f-scroll-view_wrap__"]\n    > div {\n    display: inline-block;\n    min-width: 100%;\n  }\n  .tipwrap {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 6px;\n  }\n  .tipwrap .required {\n    color: var(--error-color);\n    margin-left: 4px;\n  }\n  .tipwrap .errmsg {\n    color: var(--error-color);\n    margin-left: 10px;\n  }\n  .tipwrap .iconinfo {\n    margin-right: 2px;\n  }\n  .icontip {\n    font-size: 12px;\n    margin-left: 8px;\n    vertical-align: 1px;\n  }\n  .icontip {\n    font-size: 12px;\n    margin-left: 8px;\n    vertical-align: 1px;\n    /* font-size: 16px; */\n    cursor: pointer;\n    color: var(--group-attr-panel-icon-color);\n    line-height: 0;\n  }\n  .icontip:hover {\n    color: var(\n      --group-attr-panel-icon-color-hover\n    );\n  }\n  .tip {\n    width: 310px;\n    font-size: 14px;\n  }\n  .loading {\n    height: calc(100% - 50px);\n    background: var(\n      --depends-tree-view-background\n    );\n    border-radius: 4px;\n    color: var(\n      --depends-dialog-manage-empty-font-color\n    );\n    text-align: center;\n    padding-top: 42px;\n  }\n  .loading .text {\n    margin-top: 18px;\n  }\n  .reficon {\n    font-size: 16px;\n    margin-right: 2px;\n    vertical-align: -1px;\n  }\n  .tooltip\n    [class^="u-tooltip_body__"]::-webkit-scrollbar {\n    width: 4px;\n  }\n  .tooltip [class^="u-tooltip_body__"] {\n    padding: 6px;\n  }\n  .dreficon {\n    /* composes: icontip; */\n    /* color: var(--depends-export-tooltip-icon-color);\n    font-size: 14px; */\n    cursor: pointer;\n    font-size: 12px;\n    margin-left: 8px;\n    vertical-align: 1px;\n    /* font-size: 16px; */\n    cursor: pointer;\n    color: var(--group-attr-panel-icon-color);\n    line-height: 0;\n  }\n  .dreficon:hover {\n    /* color: #337EFF; */\n    color: var(\n      --group-attr-panel-icon-color-hover\n    );\n  }\n  .submitbtn [class^="u-submit-button_error__"] {\n    left: auto;\n    right: 0;\n    width: 752px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  .version label,\n  .tiptext {\n    color: var(\n      --depends-dialog-manage-font-color\n    );\n  }\n  .symbolbox {\n    display: flex;\n    gap: 20px;\n  }\n  .histroy {\n    position: absolute;\n    top: 0;\n    left: 263px;\n    white-space: nowrap;\n  }\n  .tagcategory {\n    position: absolute;\n    top: -30px;\n    right: 0;\n    white-space: nowrap;\n    line-height: 20px;\n  }\n  .tagcategory .toDetail {\n    margin-left: 5px;\n  }\n  .modal [class^="u-popup_body__"] {\n    padding: 0 !important;\n  }\n  .menu {\n    padding: 8px 0;\n  }\n  .menuItem {\n    width: 300px;\n    height: 48px;\n    padding: 10px 12px;\n  }\n  .menuName {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 12px;\n    color: #222222;\n    max-width: 180px;\n    overflow: hidden;\n    word-wrap: normal;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n  .menuSymbol {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 12px;\n    color: #999999;\n  }\n  .menuItem:hover {\n    background: #ededed;\n  }\n  .toplevel\n    [class*="u-tree-view-node_checkbox_"] {\n    display: none;\n  }\n  .lowlevel\n    [class*="u-tree-view-node_checkbox_"] {\n    display: inline-block;\n  }\n  .upload {\n    width: 100%;\n  }\n  .upload [class^="el-upload-dragger"] {\n    background-color: var(\n      --uploader-draggable-background\n    );\n    padding: 19px;\n  }\n  .uploadArea {\n    color: var(--uploader-draggable-color);\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  }\n\n  .uploadIcon {\n    font-size: 24px;\n  }\n  .lastVersionTitle {\n    position: absolute;\n    top: -35px;\n    left: 70px;\n    color: #666;\n  }\n  .titleTipIcon {\n    color: var(--icon-color-regular);\n  }\n  .hinticon {\n    vertical-align: 4px;\n    margin-left: 8px;\n    color: var(--icon-color-regular);\n  }\n  .refwrap {\n    max-width: 300px;\n  }\n  .refwrap [class^="s-upload-icon_root_"] {\n    margin-right: 2px;\n    vertical-align: -2px;\n  }\n  .configWrap {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2px;\n  }\n  .configWrap .main {\n    display: flex;\n    align-items: center;\n  }\n  .configWrap .desc {\n    color: #999;\n    margin-top: -5px;\n  }\n</style>\n<style>\n  .s-export-part-template-modal .el-dialog__body {\n    padding: 0;\n  }\n  .treetag .el-select-dropdown__item {\n    padding: 0 !important;\n  }\n</style>\n'],sourceRoot:""}]);const i=r},489:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(481),l=t.n(o),a=t(966),r=t.n(a)()(l());r.push([e.id,'\n.export-app-template-module-render__form--M1K7m {\n    padding: 8px;\n}\n.export-app-template-module-render__tagcategory--VFIfa {\n    position: absolute;\n    top: -28px;\n    right: 0px;\n    white-space: nowrap;\n}\n.export-app-template-module-render__iconbox--XuaUI {\n    display: flex;\n    justify-content: space-between;\n    /*    margin-bottom:20px;*/\n}\n.export-app-template-module-render__upload--FAME1 {\n    width: 100%;\n}\n.export-app-template-module-render__upload--FAME1 [class^="el-upload-dragger"] {\n    background-color: var(\n      --uploader-draggable-background\n    );\n    padding: 19px;\n}\n.export-app-template-module-render__uploadArea--EKbB1 {\n    color: var(--uploader-draggable-color);\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n}\n.export-app-template-module-render__uploadIcon--RsCmc {\n    font-size: 24px;\n}\n.export-app-template-module-render__lastVersionTitle--vzhZg {\n    position: absolute;\n    top: -35px;\n    left: 70px;\n    color: #666;\n}\n.export-app-template-module-render__formlabelinline--nMbsg {\n    display: flex !important;\n    margin-bottom: 0;\n}\n.export-app-template-module-render__formlabelinline--nMbsg\n    > [class^="el-form-item__label"] {\n    display: flex !important;\n    align-items: center;\n    margin-bottom: 0 !important;\n}\n',"",{version:3,sources:["webpack://./src/components/export-app-template-module-render.vue"],names:[],mappings:";AAyZE;IACE,YAAY;AACd;AAEA;IACE,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,mBAAmB;AACrB;AAEA;IACE,aAAa;IACb,8BAA8B;IAC9B,0BAA0B;AAC5B;AACA;IACE,WAAW;AACb;AACA;IACE;;KAEC;IACD,aAAa;AACf;AACA;IACE,sCAAsC;IACtC,oBAAoB;IACpB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;AACxB;AAEA;IACE,eAAe;AACjB;AACA;IACE,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,WAAW;AACb;AACA;IACE,wBAAwB;IACxB,gBAAgB;AAClB;AACA;;IAEE,wBAAwB;IACxB,mBAAmB;IACnB,2BAA2B;AAC7B",sourcesContent:['<template>\n  <el-dialog\n    v-model="visible"\n    class="s-export-app-template-modal"\n    width="500px"\n    align-center\n    destroy-on-close\n    append-to-body\n    :close-on-click-modal="false"\n    @close="close()">\n    <template #header>\n      <span style="margin-right: 8px">\n        发布为应用模板\n      </span>\n    </template>\n    <el-form\n      ref="form"\n      :model="model"\n      @validate="setValid($event.valid)"\n      label-position="top"\n      require-asterisk-position="right"\n      :class="$style.form">\n      <div :class="$style.iconbox">\n        <s-upload-img\n          ref="uploadImgRef"\n          @changeIcon="changeIcon"\n          :can-edit="canEditIcon"\n          :prop-icon="model.icon"></s-upload-img>\n        <el-form-item\n          label="模板名称"\n          style="width: 100%; margin-left: 10px"\n          required\n          :rules="validateRules.name"\n          prop="name"\n          for="none">\n          <el-input\n            v-model="model.name"\n            placeholder="请输入模板名称"\n            :disabled="exported"\n            @compositionstart="onStart"\n            @compositionend="onEnd"></el-input>\n        </el-form-item>\n      </div>\n\n      <el-form-item\n        label="模板分类(资产中心展示)"\n        :class="$style.longlabel"\n        style="position: relative"\n        :rules="validateRules.tags"\n        required\n        layout="block"\n        prop="tags"\n        for="none">\n        <div :class="$style.tagcategory">\n          <el-tooltip\n            v-if="!checkPermission"\n            :content="\'暂无操作权限\'"\n            trigger="hover"\n            placement="top"\n            :hover-delay="500">\n            <el-link\n              :disabled="!checkPermission"\n              @click="openAssetconfig">\n              分类管理\n              <s-others-icon\n                name="check-detail"\n                :class="\n                  $style.toDetail\n                "></s-others-icon>\n            </el-link>\n          </el-tooltip>\n          <el-link\n            v-if="checkPermission"\n            @click="openAssetconfig">\n            分类管理\n            <s-others-icon\n              name="check-detail"\n              :class="\n                $style.toDetail\n              "></s-others-icon>\n          </el-link>\n        </div>\n        <el-tree-select\n          class="treetag"\n          placeholder="请选择模板分类"\n          v-model="model.tags"\n          style="width: 100%"\n          :data="taglist"\n          multiple\n          :render-after-expand="false"\n          show-checkbox\n          node-key="id"\n          :default-expanded-keys="[\'全部分类\']"\n          @change="onSelectTags"\n          :props="{\n            children: \'child\',\n            label: \'tag\',\n            disabled: \'disable\'\n          }" />\n      </el-form-item>\n      <el-form-item\n        label="发布版本"\n        required\n        :rules="validateRules.checkVersion"\n        layout="block"\n        prop="version">\n        <span :class="$style.lastVersionTitle">\n          (上次导出的版本：{{\n            lastVersion ? lastVersion : "暂无"\n          }}\n          )\n        </span>\n        <s-version\n          v-model:value="model.version"\n          min-value="1.0.0"></s-version>\n      </el-form-item>\n\n      <el-form-item\n        label="版本描述"\n        :rules="validateRules.description"\n        prop="description"\n        for="none">\n        <el-input\n          type="textarea"\n          v-model="model.description"\n          placeholder="请输入"></el-input>\n      </el-form-item>\n\n      <el-form-item\n        label="模板配图"\n        layout="block"\n        for="none">\n        <s-uploader\n          v-model:file-list="files"\n          multiple\n          list-type="picture"\n          drag\n          :on-success="onUploadSuccess"\n          action="/api/v1/userIcon/upload"\n          accept="image/png, image/jpg, image/jpeg, image/gif, image/bmp"\n          :limit="10"\n          :class="$style.upload">\n          <div :class="$style.uploadArea">\n            <s-others-icon\n              name="upload"\n              :class="\n                $style.uploadIcon\n              "></s-others-icon>\n            点击/拖拽/粘贴文件到这里\n          </div>\n        </s-uploader>\n      </el-form-item>\n      <el-form-item\n        label="下载选择："\n        :class="$style.formlabelinline"\n        for="none">\n        <el-radio-group\n          :model-value="needPreview"\n          @change="setNeedPreview($event)">\n          <el-radio :value="true">\n            下载模板+资产中心预览效果\n          </el-radio>\n          <el-radio :value="false">\n            仅下载模板\n          </el-radio>\n        </el-radio-group>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <el-space\n        style="\n          display: flex;\n          justify-content: space-between;\n        "\n        justify="end">\n        <el-space>\n          <el-button\n            @click="showMockModal()"\n            v-if="needPreview">\n            编辑预览数据\n          </el-button>\n        </el-space>\n\n        <el-space justify="end">\n          <el-button @click="close()">\n            取 消\n          </el-button>\n          <el-button\n            type="primary"\n            @click="onSubmit"\n            :loading="submiting">\n            导 出\n          </el-button>\n        </el-space>\n      </el-space>\n    </template>\n    <skeleton-render\n      name="views/modules/edit-mock-data-modal/index"\n      @currentRole="currentRole"\n      @getMockList="getMockList"\n      ref="mockDataModal" />\n  </el-dialog>\n</template>\n\n<script setup>\n  import { inject } from "vue"\n\n  const {\n    /**\n     * 表单节点引用\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    form,\n    /**\n     * 图片上传组件引用\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    uploadImgRef,\n    /**\n     * Mock数据模态框组件引用\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    mockDataModal,\n    /**\n     * 对话框是否可见\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    visible,\n    /**\n     * 关闭对话框方法\n     *\n     * @function\n     */\n    close,\n    /**\n     * 表单数据模型\n     *\n     * @type {object}\n     * @property {string} name - 模板名称\n     * @property {string} icon - 模板图标\n     * @property {Array} tags - 模板分类标签\n     * @property {string} version - 发布版本\n     * @property {string} description - 版本描述\n     */\n    model,\n    /**\n     * 表单验证状态\n     *\n     * @type {boolean}\n     */\n    valid,\n    /**\n     * 图标变更回调方法\n     *\n     * @function\n     * @param {string} icon - 新的图标值\n     */\n    changeIcon,\n    /**\n     * 是否可编辑图标\n     *\n     * @type {boolean}\n     */\n    canEditIcon,\n    /**\n     * 表单验证规则\n     *\n     * @type {object}\n     * @property {Array} name - 名称验证规则\n     * @property {Array} checkVersion - 版本验证规则\n     * @property {Array} description - 描述验证规则\n     */\n    validateRules,\n    /**\n     * 是否已导出\n     *\n     * @type {boolean}\n     */\n    exported,\n    /**\n     * 输入法开始事件处理\n     *\n     * @function\n     */\n    onStart,\n    /**\n     * 输入法结束事件处理\n     *\n     * @function\n     */\n    onEnd,\n    /**\n     * 是否有操作权限\n     *\n     * @type {boolean}\n     */\n    checkPermission,\n    /**\n     * 打开资产配置方法\n     *\n     * @function\n     */\n    openAssetconfig,\n    /**\n     * 标签列表数据\n     *\n     * @type {Array<object>}\n     * @property {string} id - 标签ID\n     * @property {string} tag - 标签名称\n     * @property {Array} child - 子标签列表\n     * @property {boolean} disable - 是否禁用\n     */\n    taglist,\n    /**\n     * 选择标签回调方法\n     *\n     * @function\n     * @param {Array} tags - 选中的标签值\n     */\n    onSelectTags,\n    /**\n     * 上次导出的版本号\n     *\n     * @type {string}\n     */\n    lastVersion,\n    /**\n     * 上传文件列表\n     *\n     * @type {Array<object>}\n     */\n    files,\n    /**\n     * 上传成功回调方法\n     *\n     * @function\n     * @param {object} response - 上传响应数据\n     */\n    onUploadSuccess,\n    /**\n     * 是否需要预览\n     *\n     * @type {boolean}\n     */\n    needPreview,\n    /**\n     * 显示Mock数据模态框方法\n     *\n     * @function\n     */\n    showMockModal,\n    /**\n     * 提交表单方法\n     *\n     * @function\n     */\n    onSubmit,\n    /**\n     * 是否正在提交中\n     *\n     * @type {boolean}\n     */\n    submiting,\n    /**\n     * 当前角色回调方法\n     *\n     * @function\n     * @param {string} role - 当前角色\n     */\n    currentRole,\n    /**\n     * 获取Mock数据列表方法\n     *\n     * @function\n     * @param {Array} list - Mock数据列表\n     */\n    getMockList,\n    /**\n     * 设置表单验证状态方法\n     *\n     * @function\n     * @param {boolean} valid - 验证状态\n     */\n    setValid,\n    /**\n     * 设置是否需要预览方法\n     *\n     * @function\n     * @param {boolean} value - 是否需要预览\n     */\n    setNeedPreview\n  } = inject("$context")\n\n  if (!validateRules.value.tags) {\n    validateRules.value.tags = [\n      {\n        required: true,\n        message: "请选择模板分类",\n        trigger: ["blur", "change"]\n      }\n    ]\n  }\n<\/script>\n\n<style module>\n  .form {\n    padding: 8px;\n  }\n\n  .tagcategory {\n    position: absolute;\n    top: -28px;\n    right: 0px;\n    white-space: nowrap;\n  }\n\n  .iconbox {\n    display: flex;\n    justify-content: space-between;\n    /*    margin-bottom:20px;*/\n  }\n  .upload {\n    width: 100%;\n  }\n  .upload [class^="el-upload-dragger"] {\n    background-color: var(\n      --uploader-draggable-background\n    );\n    padding: 19px;\n  }\n  .uploadArea {\n    color: var(--uploader-draggable-color);\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  }\n\n  .uploadIcon {\n    font-size: 24px;\n  }\n  .lastVersionTitle {\n    position: absolute;\n    top: -35px;\n    left: 70px;\n    color: #666;\n  }\n  .formlabelinline {\n    display: flex !important;\n    margin-bottom: 0;\n  }\n  .formlabelinline\n    > [class^="el-form-item__label"] {\n    display: flex !important;\n    align-items: center;\n    margin-bottom: 0 !important;\n  }\n</style>\n'],sourceRoot:""}]),r.locals={form:"export-app-template-module-render__form--M1K7m",tagcategory:"export-app-template-module-render__tagcategory--VFIfa",iconbox:"export-app-template-module-render__iconbox--XuaUI",upload:"export-app-template-module-render__upload--FAME1",uploadArea:"export-app-template-module-render__uploadArea--EKbB1",uploadIcon:"export-app-template-module-render__uploadIcon--RsCmc",lastVersionTitle:"export-app-template-module-render__lastVersionTitle--vzhZg",formlabelinline:"export-app-template-module-render__formlabelinline--nMbsg"};const i=r},306:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(481),l=t.n(o),a=t(966),r=t.n(a)()(l());r.push([e.id,'\n.export-part-template-module-render__dashline--tj8lY {\n    border-top: 1px dashed\n      var(--line-color-primary);\n    margin: 8px 0 20px;\n}\n.export-part-template-module-render__left--_KcxE {\n    border-right: 1px solid\n      var(--depends-tree-view-border-color);\n}\n  /* .left [class^=\'el-form-item\'] {\n  margin-bottom: 18px;\n} */\n.export-part-template-module-render__left--_KcxE,\n  .export-part-template-module-render__right--g82hF {\n    padding: 24px;\n}\n.export-part-template-module-render__right--g82hF {\n    padding-bottom: 0;\n}\n.export-part-template-module-render__topTitle--pkUZg {\n    display: inline-flex;\n    justify-content: space-between;\n    width: 100%;\n    padding-right: 15px;\n}\n.export-part-template-module-render__conceptIcon--JU4yd {\n    vertical-align: -1px;\n}\n.export-part-template-module-render__nodeItem--leuJH[disabled] .export-part-template-module-render__conceptIcon--JU4yd,\n  .export-part-template-module-render__nodeItem--leuJH[disabled] .export-part-template-module-render__uploadIcon--XiV7f {\n    opacity: 0.6;\n}\n.export-part-template-module-render__scrollview--P08cA {\n    height: calc(100% - 50px);\n    /* background: var(--depends-tree-view-background); */\n    border-radius: 4px;\n    background: var(--seg-tree-view-background);\n    /* border: 1px solid var(--seg-tree-view-border-color); */\n}\n  /* 为了横向滚动hover tree node的时候能够覆盖整条 */\n.export-part-template-module-render__scrollview--P08cA\n    [class^="f-scroll-view_wrap__"]\n    > div {\n    display: inline-block;\n    min-width: 100%;\n}\n.export-part-template-module-render__tipwrap--BMYip {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 6px;\n}\n.export-part-template-module-render__tipwrap--BMYip .export-part-template-module-render__required--Dt6On {\n    color: var(--error-color);\n    margin-left: 4px;\n}\n.export-part-template-module-render__tipwrap--BMYip .export-part-template-module-render__errmsg--wX_oU {\n    color: var(--error-color);\n    margin-left: 10px;\n}\n.export-part-template-module-render__tipwrap--BMYip .export-part-template-module-render__iconinfo--JqLQW {\n    margin-right: 2px;\n}\n.export-part-template-module-render__icontip--S_N7E {\n    font-size: 12px;\n    margin-left: 8px;\n    vertical-align: 1px;\n}\n.export-part-template-module-render__icontip--S_N7E {\n    font-size: 12px;\n    margin-left: 8px;\n    vertical-align: 1px;\n    /* font-size: 16px; */\n    cursor: pointer;\n    color: var(--group-attr-panel-icon-color);\n    line-height: 0;\n}\n.export-part-template-module-render__icontip--S_N7E:hover {\n    color: var(\n      --group-attr-panel-icon-color-hover\n    );\n}\n.export-part-template-module-render__tip--QprjF {\n    width: 310px;\n    font-size: 14px;\n}\n.export-part-template-module-render__loading--CdpH0 {\n    height: calc(100% - 50px);\n    background: var(\n      --depends-tree-view-background\n    );\n    border-radius: 4px;\n    color: var(\n      --depends-dialog-manage-empty-font-color\n    );\n    text-align: center;\n    padding-top: 42px;\n}\n.export-part-template-module-render__loading--CdpH0 .export-part-template-module-render__text--jp41P {\n    margin-top: 18px;\n}\n.export-part-template-module-render__reficon--iNAtE {\n    font-size: 16px;\n    margin-right: 2px;\n    vertical-align: -1px;\n}\n.export-part-template-module-render__tooltip--O7Alq\n    [class^="u-tooltip_body__"]::-webkit-scrollbar {\n    width: 4px;\n}\n.export-part-template-module-render__tooltip--O7Alq [class^="u-tooltip_body__"] {\n    padding: 6px;\n}\n.export-part-template-module-render__dreficon--NJQcn {\n    /* composes: icontip; */\n    /* color: var(--depends-export-tooltip-icon-color);\n    font-size: 14px; */\n    cursor: pointer;\n    font-size: 12px;\n    margin-left: 8px;\n    vertical-align: 1px;\n    /* font-size: 16px; */\n    cursor: pointer;\n    color: var(--group-attr-panel-icon-color);\n    line-height: 0;\n}\n.export-part-template-module-render__dreficon--NJQcn:hover {\n    /* color: #337EFF; */\n    color: var(\n      --group-attr-panel-icon-color-hover\n    );\n}\n.export-part-template-module-render__submitbtn--Xw0hY [class^="u-submit-button_error__"] {\n    left: auto;\n    right: 0;\n    width: 752px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n.export-part-template-module-render__version--Grwt7 label,\n  .export-part-template-module-render__tiptext--h_f7C {\n    color: var(\n      --depends-dialog-manage-font-color\n    );\n}\n.export-part-template-module-render__symbolbox--CB7Hq {\n    display: flex;\n    gap: 20px;\n}\n.export-part-template-module-render__histroy--Pg9JC {\n    position: absolute;\n    top: 0;\n    left: 263px;\n    white-space: nowrap;\n}\n.export-part-template-module-render__tagcategory--hsunC {\n    position: absolute;\n    top: -30px;\n    right: 0;\n    white-space: nowrap;\n    line-height: 20px;\n}\n.export-part-template-module-render__tagcategory--hsunC .export-part-template-module-render__toDetail--PpzoA {\n    margin-left: 5px;\n}\n.export-part-template-module-render__modal--kyXGh [class^="u-popup_body__"] {\n    padding: 0 !important;\n}\n.export-part-template-module-render__menu--ONbPu {\n    padding: 8px 0;\n}\n.export-part-template-module-render__menuItem--US_sI {\n    width: 300px;\n    height: 48px;\n    padding: 10px 12px;\n}\n.export-part-template-module-render__menuName--CFiqT {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 12px;\n    color: #222222;\n    max-width: 180px;\n    overflow: hidden;\n    word-wrap: normal;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n}\n.export-part-template-module-render__menuSymbol--yz0gC {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 12px;\n    color: #999999;\n}\n.export-part-template-module-render__menuItem--US_sI:hover {\n    background: #ededed;\n}\n.export-part-template-module-render__toplevel--Acv4R\n    [class*="u-tree-view-node_checkbox_"] {\n    display: none;\n}\n.export-part-template-module-render__lowlevel--Qobt4\n    [class*="u-tree-view-node_checkbox_"] {\n    display: inline-block;\n}\n.export-part-template-module-render__upload--UbliP {\n    width: 100%;\n}\n.export-part-template-module-render__upload--UbliP [class^="el-upload-dragger"] {\n    background-color: var(\n      --uploader-draggable-background\n    );\n    padding: 19px;\n}\n.export-part-template-module-render__uploadArea--I2sct {\n    color: var(--uploader-draggable-color);\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n}\n.export-part-template-module-render__uploadIcon--XiV7f {\n    font-size: 24px;\n}\n.export-part-template-module-render__lastVersionTitle--S6Vx0 {\n    position: absolute;\n    top: -35px;\n    left: 70px;\n    color: #666;\n}\n.export-part-template-module-render__titleTipIcon--_OWMu {\n    color: var(--icon-color-regular);\n}\n.export-part-template-module-render__hinticon--XSFGk {\n    vertical-align: 4px;\n    margin-left: 8px;\n    color: var(--icon-color-regular);\n}\n.export-part-template-module-render__refwrap--YOes8 {\n    max-width: 300px;\n}\n.export-part-template-module-render__refwrap--YOes8 [class^="s-upload-icon_root_"] {\n    margin-right: 2px;\n    vertical-align: -2px;\n}\n.export-part-template-module-render__configWrap--ADzg4 {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2px;\n}\n.export-part-template-module-render__configWrap--ADzg4 .export-part-template-module-render__main--HQTpU {\n    display: flex;\n    align-items: center;\n}\n.export-part-template-module-render__configWrap--ADzg4 .export-part-template-module-render__desc--KubFW {\n    color: #999;\n    margin-top: -5px;\n}\n',"",{version:3,sources:["webpack://./src/components/export-part-template-module-render.vue"],names:[],mappings:";AAmgCE;IACE;+BAC2B;IAC3B,kBAAkB;AACpB;AACA;IACE;2CACuC;AACzC;EACA;;GAEC;AACD;;IAEE,aAAa;AACf;AACA;IACE,iBAAiB;AACnB;AACA;IACE,oBAAoB;IACpB,8BAA8B;IAC9B,WAAW;IACX,mBAAmB;AACrB;AAEA;IACE,oBAAoB;AACtB;AACA;;IAEE,YAAY;AACd;AACA;IACE,yBAAyB;IACzB,qDAAqD;IACrD,kBAAkB;IAClB,2CAA2C;IAC3C,yDAAyD;AAC3D;EACA,mCAAmC;AACnC;;;IAGE,qBAAqB;IACrB,eAAe;AACjB;AACA;IACE,aAAa;IACb,8BAA8B;IAC9B,kBAAkB;AACpB;AACA;IACE,yBAAyB;IACzB,gBAAgB;AAClB;AACA;IACE,yBAAyB;IACzB,iBAAiB;AACnB;AACA;IACE,iBAAiB;AACnB;AACA;IACE,eAAe;IACf,gBAAgB;IAChB,mBAAmB;AACrB;AACA;IACE,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IACnB,qBAAqB;IACrB,eAAe;IACf,yCAAyC;IACzC,cAAc;AAChB;AACA;IACE;;KAEC;AACH;AACA;IACE,YAAY;IACZ,eAAe;AACjB;AACA;IACE,yBAAyB;IACzB;;KAEC;IACD,kBAAkB;IAClB;;KAEC;IACD,kBAAkB;IAClB,iBAAiB;AACnB;AACA;IACE,gBAAgB;AAClB;AACA;IACE,eAAe;IACf,iBAAiB;IACjB,oBAAoB;AACtB;AACA;;IAEE,UAAU;AACZ;AACA;IACE,YAAY;AACd;AACA;IACE,uBAAuB;IACvB;sBACkB;IAClB,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IACnB,qBAAqB;IACrB,eAAe;IACf,yCAAyC;IACzC,cAAc;AAChB;AACA;IACE,oBAAoB;IACpB;;KAEC;AACH;AACA;IACE,UAAU;IACV,QAAQ;IACR,YAAY;IACZ,gBAAgB;IAChB,uBAAuB;AACzB;AACA;;IAEE;;KAEC;AACH;AACA;IACE,aAAa;IACb,SAAS;AACX;AACA;IACE,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,mBAAmB;AACrB;AACA;IACE,kBAAkB;IAClB,UAAU;IACV,QAAQ;IACR,mBAAmB;IACnB,iBAAiB;AACnB;AACA;IACE,gBAAgB;AAClB;AACA;IACE,qBAAqB;AACvB;AACA;IACE,cAAc;AAChB;AACA;IACE,YAAY;IACZ,YAAY;IACZ,kBAAkB;AACpB;AACA;IACE,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,iBAAiB;IACjB,cAAc;IACd,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB,mBAAmB;IACnB,uBAAuB;AACzB;AACA;IACE,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,iBAAiB;IACjB,cAAc;AAChB;AACA;IACE,mBAAmB;AACrB;AACA;;IAEE,aAAa;AACf;AACA;;IAEE,qBAAqB;AACvB;AACA;IACE,WAAW;AACb;AACA;IACE;;KAEC;IACD,aAAa;AACf;AACA;IACE,sCAAsC;IACtC,oBAAoB;IACpB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;AACxB;AAEA;IACE,eAAe;AACjB;AACA;IACE,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,WAAW;AACb;AACA;IACE,gCAAgC;AAClC;AACA;IACE,mBAAmB;IACnB,gBAAgB;IAChB,gCAAgC;AAClC;AACA;IACE,gBAAgB;AAClB;AACA;IACE,iBAAiB;IACjB,oBAAoB;AACtB;AACA;IACE,aAAa;IACb,sBAAsB;IACtB,eAAe;AACjB;AACA;IACE,aAAa;IACb,mBAAmB;AACrB;AACA;IACE,WAAW;IACX,gBAAgB;AAClB",sourcesContent:['<template>\n  <el-dialog\n    v-model="visible"\n    class="s-export-part-template-modal"\n    width="800px"\n    align-center\n    destroy-on-close\n    append-to-body\n    :close-on-click-modal="false"\n    @close="close()">\n    <template #header>\n      <span style="margin-right: 8px">\n        发布为局部模板\n      </span>\n      <el-tooltip placement="top">\n        <s-others-icon\n          :class="$style.titleTipIcon"\n          name="help_line"></s-others-icon>\n        <template #content>\n          <div style="width: 300px">\n            应用中的部分内容（页面、逻辑、实体等）可导出为局部模板。局部模板可在其他应用中导入，用于快捷创建相同的页面、逻辑、实体等。\n          </div>\n        </template>\n      </el-tooltip>\n    </template>\n    <el-container>\n      <el-aside\n        :class="$style.left"\n        style="\n          width: 400px;\n          height: 478px;\n          overflow: scroll;\n        ">\n        <el-form\n          ref="formRef"\n          label-position="top"\n          :model="model"\n          require-asterisk-position="right"\n          @validate="formValid = $event.valid">\n          <div :class="$style.symbolbox">\n            <s-upload-icon\n              v-if="!isEditOldTemp"\n              @changeIcon="changeIcon"\n              :can-edit="canEditIcon"\n              :prop-icon="\n                model.icon\n              "></s-upload-icon>\n            <el-form-item\n              style="position: relative"\n              required\n              :rules="\n                isEditOldTemp\n                  ? {}\n                  : validateRules.symbol\n              "\n              prop="symbol"\n              for="none">\n              <template #label>\n                <span>\n                  {{\n                    isEditOldTemp\n                      ? "模板名称（标识）"\n                      : "模板标识"\n                  }}\n                </span>\n                <div\n                  :class="$style.histroy"\n                  v-if="\n                    historyList.length > 0 &&\n                    isEditOldTemp\n                  ">\n                  <el-link\n                    @click="canEditToNewTemp">\n                    发布为新模板\n                  </el-link>\n                </div>\n\n                <div\n                  :class="$style.histroy"\n                  style="left: 203px"\n                  v-else-if="\n                    historyList.length > 0 &&\n                    !isEditOldTemp\n                  ">\n                  <el-popover\n                    width="auto"\n                    trigger="click">\n                    <template #reference>\n                      <el-link>发布历史</el-link>\n                    </template>\n                    <div :class="$style.menu">\n                      <div\n                        :class="$style.menuItem"\n                        v-for="(\n                          history, index\n                        ) in historyList"\n                        :key="index">\n                        <div\n                          style="\n                            display: flex;\n                            justify-content: space-between;\n                          ">\n                          <span\n                            :class="\n                              $style.menuName\n                            ">\n                            {{ history.name }}\n                          </span>\n                          <el-link\n                            @click="\n                              toggleHistory(\n                                history\n                              )\n                            ">\n                            发布到该模板\n                          </el-link>\n                        </div>\n                        <div\n                          :class="\n                            $style.menuSymbol\n                          ">\n                          标识：{{\n                            history.symbol\n                          }}\n                        </div>\n                      </div>\n                    </div>\n                  </el-popover>\n                </div>\n                <el-tooltip\n                  v-if="!isEditOldTemp"\n                  type="help"\n                  placement="top"\n                  :class="$style.histroy"\n                  style="\n                    left: 64px;\n                    margin-top: 4px;\n                  "\n                  size="auto">\n                  <s-others-icon\n                    name="help_line"\n                    style="\n                      margin-left: 8px;\n                    "></s-others-icon>\n                  <template #content>\n                    <div style="width: 300px">\n                      若发布为已存在的局部模板的“新版本”，则请输入已存在的局部模板标识；若发布为新的局部模板发布，则请输入新的唯一模板标识。\n                    </div>\n                  </template>\n                </el-tooltip>\n              </template>\n              <el-input\n                v-if="!isEditOldTemp"\n                v-model="model.symbol"\n                maxlength="100"\n                :disabled="loading"\n                maxlength-message="标识最长100字符"\n                placeholder="请输入"\n                style="width: 252px"></el-input>\n              <el-select\n                v-else\n                style="width: 336px"\n                placeholder="请选择模板历史"\n                v-model="lastItem.symbol"\n                :data="historyEditList"\n                @change="\n                  onSelectSegmentTemp($event)\n                ">\n                <el-option\n                  v-for="option in historyEditList"\n                  :key="option.value"\n                  :label="option.label"\n                  :value="\n                    option.value\n                  "></el-option>\n              </el-select>\n            </el-form-item>\n          </div>\n          <el-form-item\n            v-if="!isEditOldTemp"\n            label="模板名称"\n            required\n            :rules="validateRules.name"\n            prop="name"\n            for="none">\n            <el-input\n              v-model="model.name"\n              :disabled="loading"\n              maxlength="50"\n              maxlength-message="模板名称最长50字符"\n              placeholder="请输入"></el-input>\n          </el-form-item>\n          <el-form-item\n            v-if="!isEditOldTemp"\n            style="position: relative"\n            label="模板分类（资产中心展示）"\n            required\n            :rules="validateRules.tags"\n            prop="tags"\n            for="none">\n            <div :class="$style.tagcategory">\n              <el-link\n                :disabled="!checkPermission"\n                @click="openAssetconfig">\n                分类管理\n                <s-others-icon\n                  name="check-detail"\n                  :class="\n                    $style.toDetail\n                  "></s-others-icon>\n              </el-link>\n              <u-tooltip\n                v-if="!checkPermission"\n                trigger="hover"\n                placement="top"\n                :hover-delay="500">\n                暂无操作权限\n              </u-tooltip>\n            </div>\n            <el-tree-select\n              class="treetag"\n              v-model="model.tags"\n              style="width: 336px"\n              :data="taglist"\n              multiple\n              :render-after-expand="false"\n              show-checkbox\n              node-key="id"\n              :default-expanded-keys="[\n                \'全部分类\'\n              ]"\n              @change="onSelectTags"\n              :props="{\n                children: \'child\',\n                label: \'tag\',\n                disabled: \'disable\'\n              }" />\n          </el-form-item>\n          \x3c!-- <div :class="$style.dashline"></div> --\x3e\n          <el-form-item\n            label="发布版本"\n            required\n            layout="block"\n            :rules="validateRules.checkVersion"\n            ref="version"\n            prop="version"\n            for="none">\n            <span\n              :class="$style.lastVersionTitle">\n              (上次导出的版本：{{\n                isEditOldTemp\n                  ? lastVersion || "暂无"\n                  : "暂无"\n              }}\n              )\n            </span>\n            <s-version\n              v-model:value="model.version"\n              :disabled="loading"\n              min-value="1.0.0"></s-version>\n          </el-form-item>\n          <el-form-item\n            label="版本描述"\n            :rules="validateRules.description"\n            prop="description"\n            for="none">\n            <el-input\n              type="textarea"\n              v-model="model.description"\n              :disabled="loading"\n              maxlength="500"\n              show-word-limit\n              placeholder="请输入"\n              :autosize="{\n                minRows: 5\n              }"></el-input>\n          </el-form-item>\n          <el-form-item\n            label="版本配图"\n            style="margin-bottom: 0"\n            for="none">\n            <s-uploader\n              v-model:file-list="model.picture"\n              multiple\n              list-type="picture"\n              drag\n              action="/api/v1/userIcon/upload"\n              max-size="50MB"\n              accept="image/png, image/jpg, image/jpeg, image/gif, image/bmp"\n              :limit="10"\n              :class="$style.upload">\n              <div :class="$style.uploadArea">\n                <s-others-icon\n                  name="upload"\n                  :class="\n                    $style.uploadIcon\n                  "></s-others-icon>\n                点击/拖拽/粘贴文件到这里\n              </div>\n            </s-uploader>\n          </el-form-item>\n        </el-form>\n      </el-aside>\n      <el-main\n        :class="$style.right"\n        style="width: 400px; height: 478px">\n        <div :class="$style.tipwrap">\n          <div>\n            <span :class="$style.tiptext">\n              请选择能力\n            </span>\n            <span :class="$style.required">\n              *\n            </span>\n            <span\n              :class="$style.errmsg"\n              v-if="isEmptyChecked">\n              <s-others-icon\n                name="solid-hint"\n                :class="\n                  $style.iconinfo\n                "></s-others-icon>\n              请至少选择一项能力\n            </span>\n          </div>\n          <div>\n            <el-checkbox\n              :class="$style.autoCheck"\n              v-model="autoCheckdepends">\n              自动勾选依赖项\n            </el-checkbox>\n            <el-tooltip placement="top">\n              <s-others-icon\n                name="hint"\n                :class="\n                  $style.hinticon\n                "></s-others-icon>\n              <template #content>\n                <div style="width: 300px">\n                  若开发者只想将前端页面导出为模板复用，后端逻辑相关希望让模板使用者自己定义，此时可选择不导出前端页面所依赖的后端逻辑。\n                </div>\n              </template>\n            </el-tooltip>\n          </div>\n        </div>\n        <div\n          v-if="loading"\n          :class="$style.loading">\n          <div v-loading="loading"></div>\n          <div :class="$style.text">\n            数据加载中，请稍后...\n          </div>\n        </div>\n        <div\n          v-else-if="empty"\n          :class="$style.loading">\n          <div :class="$style.text">\n            暂无可导出对象\n          </div>\n        </div>\n        <el-scrollbar\n          v-else\n          :class="$style.scrollview">\n          <el-tree-v2\n            ref="treeViewRef"\n            :data="treeData"\n            :props="treeProps"\n            :height="400"\n            :item-size="35"\n            show-checkbox\n            :default-expanded-keys="\n              defaultExpandedKeys\n            "\n            :default-checked-keys="checkedValues"\n            class="s-tree s-tree-export-template"\n            check-strictly\n            @check-change="onCheckChange"\n            @node-expand="setDirectoryExpandIcon"\n            @node-collapse="\n              setDirectoryCollapseIcon\n            ">\n            <template #default="{ data: node }">\n              <u-tooltip\n                trigger="hover"\n                placement="left"\n                :show-after="200"\n                reference="prev"\n                :disabled="!node.exportDisabled">\n                暂不支持导出\n              </u-tooltip>\n              <template\n                v-if="\n                  node.concept ===\n                  \'ConfigProperty\'\n                ">\n                <div :class="$style.configWrap">\n                  <div :class="$style.main">\n                    <s-concept-icon\n                      :name="\n                        node.icon || node.concept\n                      "\n                      :class="\n                        $style.conceptIcon\n                      "></s-concept-icon>\n                    <span>{{ node.name }}</span>\n                  </div>\n                  <div\n                    :class="$style.desc"\n                    v-if="node.description">\n                    {{ node.description }}\n                  </div>\n                </div>\n              </template>\n              <template v-else>\n                <template\n                  v-if="\n                    node.concept ===\n                    \'ConnectorModuleItem\'\n                  ">\n                  <s-upload-icon\n                    v-if="\n                      isImage(\n                        getConnectorSetting(node)\n                          .icon\n                      )\n                    "\n                    displayModeCustom\n                    width="14px"\n                    height="14px"\n                    :can-edit="false"\n                    :prop-icon="\n                      getConnectorSetting(node)\n                        .icon\n                    "\n                    :class="$style.uploadIcon" />\n                  <s-concept-icon\n                    v-else\n                    :name="\n                      getConnectorSetting(node)\n                        .icon\n                    "\n                    :class="\n                      $style.conceptIcon\n                    "></s-concept-icon>\n                </template>\n                <template\n                  v-else-if="\n                    node.concept === \'Connection\'\n                  ">\n                  <s-upload-icon\n                    v-if="\n                      isImage(\n                        node.connector.previewImg,\n                        node.connector\n                          .connectorKind\n                      )\n                    "\n                    displayModeCustom\n                    width="14px"\n                    height="14px"\n                    :can-edit="false"\n                    :prop-icon="\n                      getConnectorWrapperIcon(\n                        node\n                      )\n                    "\n                    :class="$style.uploadIcon" />\n                  <s-concept-icon\n                    v-else\n                    :name="\n                      node.connector.connectorKind\n                    "\n                    :class="\n                      $style.conceptIcon\n                    "></s-concept-icon>\n                </template>\n                <s-concept-icon\n                  v-else\n                  :name="getIcon(node)"\n                  :class="\n                    $style.conceptIcon\n                  "></s-concept-icon>\n                <div\n                  :class="$style.topTitle"\n                  v-if="\n                    node.concept &&\n                    node.concept.endsWith(\n                      \'Root\'\n                    ) &&\n                    node.concept !==\n                      \'DataSourceRoot\'\n                  ">\n                  <span\n                    class="titellipsis"\n                    :title="\n                      node.aliasName || node.name\n                    ">\n                    {{\n                      node.aliasName || node.name\n                    }}\n                  </span>\n                  <el-link\n                    v-show="\n                      node.childNodes.length > 0\n                    "\n                    @click="\n                      onCheckAll($event, node)\n                    ">\n                    {{ getCheckedState(node) }}\n                  </el-link>\n                </div>\n                <div\n                  :class="$style.topTitle"\n                  v-else-if="\n                    node.concept === \'DataSource\'\n                  ">\n                  <div>\n                    <span\n                      class="titellipsis"\n                      :title="\n                        node.aliasName ||\n                        node.name\n                      ">\n                      {{\n                        node.aliasName ||\n                        node.name\n                      }}\n                    </span>\n                    <s-others-icon\n                      name="info"\n                      :class="$style.dreficon">\n                      <u-tooltip\n                        trigger="hover"\n                        placement="top"\n                        :show-after="200">\n                        数据源不会带出数据库链接等信息，不支持数据共享\n                      </u-tooltip>\n                    </s-others-icon>\n                  </div>\n                  <el-link\n                    @click="\n                      onCheckAll($event, node)\n                    "\n                    v-if="!node.module">\n                    {{ getCheckedState(node) }}\n                  </el-link>\n                </div>\n                <span\n                  v-else\n                  class="titellipsis"\n                  :title="getTextName(node)">\n                  {{ getTextName(node) }}\n                </span>\n                <span\n                  v-if="\n                    [\n                      \'Module\',\n                      \'ConnectorModuleItem\'\n                    ].includes(node.concept)\n                  ">\n                  {{\n                    node.version\n                      ? `（${node.version}）`\n                      : ""\n                  }}\n                </span>\n              </template>\n              <s-others-icon\n                v-if="\n                  getNodeReferences(node).length\n                "\n                name="depend-reference"\n                :class="$style.dreficon">\n                <u-tooltip\n                  trigger="hover"\n                  placement="top"\n                  :show-after="200">\n                  <div :class="$style.refwrap">\n                    <span>依赖关系：</span>\n                    <span\n                      v-for="(\n                        nref, index\n                      ) in getNodeReferences(\n                        node\n                      )"\n                      :key="nref.name">\n                      <template\n                        v-if="\n                          nref.concept ===\n                          \'ConnectorModuleItem\'\n                        ">\n                        <s-upload-icon\n                          v-if="\n                            isImage(\n                              getConnectorSetting(\n                                nref.node\n                              ).icon\n                            )\n                          "\n                          displayModeCustom\n                          width="14px"\n                          height="14px"\n                          :can-edit="false"\n                          :prop-icon="\n                            getConnectorSetting(\n                              nref.node\n                            ).icon\n                          "\n                          :class="\n                            $style.reficon\n                          " />\n                        <s-concept-icon\n                          v-else\n                          :name="\n                            getConnectorSetting(\n                              nref.node\n                            ).icon\n                          "\n                          :class="\n                            $style.reficon\n                          "></s-concept-icon>\n                      </template>\n                      <template\n                        v-else-if="\n                          nref.concept ===\n                          \'Connection\'\n                        ">\n                        <s-upload-icon\n                          v-if="\n                            isImage(\n                              nref.node.connector\n                                .previewImg,\n                              nref.node.connector\n                                .connectorKind\n                            )\n                          "\n                          displayModeCustom\n                          width="14px"\n                          height="14px"\n                          :can-edit="false"\n                          :prop-icon="\n                            getConnectorWrapperIcon(\n                              nref.node\n                            )\n                          "\n                          :class="\n                            $style.reficon\n                          " />\n                        <s-concept-icon\n                          v-else\n                          :name="\n                            nref.node.connector\n                              .connectorKind\n                          "\n                          :class="\n                            $style.reficon\n                          "></s-concept-icon>\n                      </template>\n                      <s-concept-icon\n                        v-else\n                        :name="getIcon(nref)"\n                        :class="\n                          $style.reficon\n                        "></s-concept-icon>\n                      <span>{{ nref.name }}</span>\n                      <span\n                        v-if="\n                          index !==\n                          getNodeReferences(node)\n                            .length -\n                            1\n                        ">\n                        、\n                      </span>\n                    </span>\n                  </div>\n                </u-tooltip>\n              </s-others-icon>\n            </template>\n          </el-tree-v2>\n        </el-scrollbar>\n      </el-main>\n    </el-container>\n    <template #footer>\n      <div\n        style="\n          display: flex;\n          justify-content: space-between;\n        ">\n        <el-space v-if="hasPreCheckedNodes">\n          <span>发布的资产，可前往</span>\n          <el-link @click="goAssetCenterSeg">\n            「资产中心-局部模板」\n          </el-link>\n          <span>查看</span>\n        </el-space>\n        <el-space v-else>&nbsp</el-space>\n        <el-space justify="end">\n          <el-button @click="close()">\n            取 消\n          </el-button>\n          <el-button\n            type="primary"\n            @click="onSubmit"\n            :loading="submiting">\n            发 布\n          </el-button>\n        </el-space>\n      </div>\n    </template>\n  </el-dialog>\n</template>\n\n<script setup>\n  import { inject } from "vue"\n\n  const {\n    /**\n     * 表单节点\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    formRef,\n    /**\n     * 树形视图节点\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    treeViewRef,\n    /**\n     * 是否可见\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    visible,\n    /**\n     * 是否加载中\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    loading,\n    /**\n     * 是否为空\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    empty,\n    /**\n     * 是否提交中\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    submiting,\n    /**\n     * 是否编辑旧模板\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    isEditOldTemp,\n    /**\n     * 是否可以编辑图标\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    canEditIcon,\n    /**\n     * 是否自动勾选依赖\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    autoCheckdepends,\n    /**\n     * 是否为空选中\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    isEmptyChecked,\n    /**\n     * 是否有预选节点\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    hasPreCheckedNodes,\n    /**\n     * 是否有权限\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    checkPermission,\n    /**\n     * 表单数据\n     *\n     * @type {Vue.reactive<object>}\n     * @property {string} icon - 图标\n     * @property {array} picture - 图片列表\n     * @property {array} tags - 标签列表\n     * @property {string} symbol - 标识\n     * @property {string} name - 名称\n     * @property {string} version - 版本\n     * @property {string} description - 描述\n     */\n    model,\n    /**\n     * 验证规则\n     *\n     * @type {object}\n     */\n    validateRules,\n    /**\n     * 标签列表\n     *\n     * @type {Vue.ref<array>}\n     */\n    taglist,\n    /**\n     * 历史列表\n     *\n     * @type {Vue.ref<array>}\n     */\n    historyList,\n    /**\n     * 历史编辑列表\n     *\n     * @type {Vue.ref<array>}\n     */\n    historyEditList,\n    /**\n     * 最后一项\n     *\n     * @type {Vue.reactive<object>}\n     * @property {string} name - 名称\n     * @property {string} symbol - 标识\n     * @property {string} value - 值\n     * @property {string} text - 文本\n     */\n    lastItem,\n    /**\n     * 最后版本\n     *\n     * @type {Vue.ref<string>}\n     */\n    lastVersion,\n    /**\n     * 树形数据\n     *\n     * @type {Vue.ref<array>}\n     */\n    treeData,\n    /**\n     * 树形属性\n     *\n     * @type {object}\n     */\n    treeProps,\n    /**\n     * 默认展开的键\n     *\n     * @type {Vue.ref<array>}\n     */\n    defaultExpandedKeys,\n    /**\n     * 选中的值\n     *\n     * @type {Vue.ref<array>}\n     */\n    checkedValues,\n    /**\n     * 关闭对话框\n     *\n     * @function\n     */\n    close,\n    /**\n     * 改变图标\n     *\n     * @function\n     * @param {string} item - 图标值\n     */\n    changeIcon,\n    /**\n     * 编辑为新模板\n     *\n     * @function\n     * @param {Event} e - 事件对象\n     */\n    canEditToNewTemp,\n    /**\n     * 跳转到资产中心\n     *\n     * @function\n     */\n    goAssetCenterSeg,\n    /**\n     * 打开资产配置\n     *\n     * @function\n     */\n    openAssetconfig,\n    /**\n     * 选择模板\n     *\n     * @function\n     * @param {string} symbol - 标识\n     */\n    onSelectSegmentTemp,\n    /**\n     * 选择标签\n     *\n     * @function\n     * @param {array} item - 标签列表\n     */\n    onSelectTags,\n    /**\n     * 切换历史\n     *\n     * @function\n     * @param {object} item - 历史项\n     */\n    toggleHistory,\n    /**\n     * 提交表单\n     *\n     * @function\n     */\n    onSubmit,\n    /**\n     * 检查变更\n     *\n     * @function\n     * @param {object} node - 节点\n     * @param {boolean} checked - 是否选中\n     */\n    onCheckChange,\n    /**\n     * 设置目录展开图标\n     *\n     * @function\n     * @param {object} node - 节点\n     */\n    setDirectoryExpandIcon,\n    /**\n     * 设置目录折叠图标\n     *\n     * @function\n     * @param {object} node - 节点\n     */\n    setDirectoryCollapseIcon,\n    /**\n     * 获取节点引用\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {array} 引用列表\n     */\n    getNodeReferences,\n    /**\n     * 获取图标\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {string} 图标名称\n     */\n    getIcon,\n    /**\n     * 获取文本名称\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {string} 文本名称\n     */\n    getTextName,\n    /**\n     * 获取选中状态\n     *\n     * @function\n     * @param {object} node - 节点\n     * @param {array} allCheckedkeys - 所有选中的键\n     * @returns {string} 选中状态\n     */\n    getCheckedState,\n    /**\n     * 全选\n     *\n     * @function\n     * @param {Event} e - 事件对象\n     * @param {object} node - 节点\n     */\n    onCheckAll,\n    /**\n     * 是否为图片\n     *\n     * @function\n     * @param {string} icon - 图标\n     * @param {string} connectorKind - 连接器类型\n     * @returns {boolean} 是否为图片\n     */\n    isImage,\n    /**\n     * 获取连接器设置\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {object} 连接器设置\n     */\n    getConnectorSetting,\n    /**\n     * 获取连接器包装图标\n     *\n     * @function\n     * @param {object} node - 节点\n     * @returns {string} 图标\n     */\n    getConnectorWrapperIcon\n  } = inject("$context")\n\n  if (!validateRules.tags) {\n    validateRules.tags = [\n      {\n        required: true,\n        message: "请选择模板分类",\n        trigger: ["blur", "change"]\n      }\n    ]\n  }\n<\/script>\n\n<style module>\n  .dashline {\n    border-top: 1px dashed\n      var(--line-color-primary);\n    margin: 8px 0 20px;\n  }\n  .left {\n    border-right: 1px solid\n      var(--depends-tree-view-border-color);\n  }\n  /* .left [class^=\'el-form-item\'] {\n  margin-bottom: 18px;\n} */\n  .left,\n  .right {\n    padding: 24px;\n  }\n  .right {\n    padding-bottom: 0;\n  }\n  .topTitle {\n    display: inline-flex;\n    justify-content: space-between;\n    width: 100%;\n    padding-right: 15px;\n  }\n\n  .conceptIcon {\n    vertical-align: -1px;\n  }\n  .nodeItem[disabled] .conceptIcon,\n  .nodeItem[disabled] .uploadIcon {\n    opacity: 0.6;\n  }\n  .scrollview {\n    height: calc(100% - 50px);\n    /* background: var(--depends-tree-view-background); */\n    border-radius: 4px;\n    background: var(--seg-tree-view-background);\n    /* border: 1px solid var(--seg-tree-view-border-color); */\n  }\n  /* 为了横向滚动hover tree node的时候能够覆盖整条 */\n  .scrollview\n    [class^="f-scroll-view_wrap__"]\n    > div {\n    display: inline-block;\n    min-width: 100%;\n  }\n  .tipwrap {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 6px;\n  }\n  .tipwrap .required {\n    color: var(--error-color);\n    margin-left: 4px;\n  }\n  .tipwrap .errmsg {\n    color: var(--error-color);\n    margin-left: 10px;\n  }\n  .tipwrap .iconinfo {\n    margin-right: 2px;\n  }\n  .icontip {\n    font-size: 12px;\n    margin-left: 8px;\n    vertical-align: 1px;\n  }\n  .icontip {\n    font-size: 12px;\n    margin-left: 8px;\n    vertical-align: 1px;\n    /* font-size: 16px; */\n    cursor: pointer;\n    color: var(--group-attr-panel-icon-color);\n    line-height: 0;\n  }\n  .icontip:hover {\n    color: var(\n      --group-attr-panel-icon-color-hover\n    );\n  }\n  .tip {\n    width: 310px;\n    font-size: 14px;\n  }\n  .loading {\n    height: calc(100% - 50px);\n    background: var(\n      --depends-tree-view-background\n    );\n    border-radius: 4px;\n    color: var(\n      --depends-dialog-manage-empty-font-color\n    );\n    text-align: center;\n    padding-top: 42px;\n  }\n  .loading .text {\n    margin-top: 18px;\n  }\n  .reficon {\n    font-size: 16px;\n    margin-right: 2px;\n    vertical-align: -1px;\n  }\n  .tooltip\n    [class^="u-tooltip_body__"]::-webkit-scrollbar {\n    width: 4px;\n  }\n  .tooltip [class^="u-tooltip_body__"] {\n    padding: 6px;\n  }\n  .dreficon {\n    /* composes: icontip; */\n    /* color: var(--depends-export-tooltip-icon-color);\n    font-size: 14px; */\n    cursor: pointer;\n    font-size: 12px;\n    margin-left: 8px;\n    vertical-align: 1px;\n    /* font-size: 16px; */\n    cursor: pointer;\n    color: var(--group-attr-panel-icon-color);\n    line-height: 0;\n  }\n  .dreficon:hover {\n    /* color: #337EFF; */\n    color: var(\n      --group-attr-panel-icon-color-hover\n    );\n  }\n  .submitbtn [class^="u-submit-button_error__"] {\n    left: auto;\n    right: 0;\n    width: 752px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  .version label,\n  .tiptext {\n    color: var(\n      --depends-dialog-manage-font-color\n    );\n  }\n  .symbolbox {\n    display: flex;\n    gap: 20px;\n  }\n  .histroy {\n    position: absolute;\n    top: 0;\n    left: 263px;\n    white-space: nowrap;\n  }\n  .tagcategory {\n    position: absolute;\n    top: -30px;\n    right: 0;\n    white-space: nowrap;\n    line-height: 20px;\n  }\n  .tagcategory .toDetail {\n    margin-left: 5px;\n  }\n  .modal [class^="u-popup_body__"] {\n    padding: 0 !important;\n  }\n  .menu {\n    padding: 8px 0;\n  }\n  .menuItem {\n    width: 300px;\n    height: 48px;\n    padding: 10px 12px;\n  }\n  .menuName {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 12px;\n    color: #222222;\n    max-width: 180px;\n    overflow: hidden;\n    word-wrap: normal;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n  .menuSymbol {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 12px;\n    color: #999999;\n  }\n  .menuItem:hover {\n    background: #ededed;\n  }\n  .toplevel\n    [class*="u-tree-view-node_checkbox_"] {\n    display: none;\n  }\n  .lowlevel\n    [class*="u-tree-view-node_checkbox_"] {\n    display: inline-block;\n  }\n  .upload {\n    width: 100%;\n  }\n  .upload [class^="el-upload-dragger"] {\n    background-color: var(\n      --uploader-draggable-background\n    );\n    padding: 19px;\n  }\n  .uploadArea {\n    color: var(--uploader-draggable-color);\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n  }\n\n  .uploadIcon {\n    font-size: 24px;\n  }\n  .lastVersionTitle {\n    position: absolute;\n    top: -35px;\n    left: 70px;\n    color: #666;\n  }\n  .titleTipIcon {\n    color: var(--icon-color-regular);\n  }\n  .hinticon {\n    vertical-align: 4px;\n    margin-left: 8px;\n    color: var(--icon-color-regular);\n  }\n  .refwrap {\n    max-width: 300px;\n  }\n  .refwrap [class^="s-upload-icon_root_"] {\n    margin-right: 2px;\n    vertical-align: -2px;\n  }\n  .configWrap {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2px;\n  }\n  .configWrap .main {\n    display: flex;\n    align-items: center;\n  }\n  .configWrap .desc {\n    color: #999;\n    margin-top: -5px;\n  }\n</style>\n<style>\n  .s-export-part-template-modal .el-dialog__body {\n    padding: 0;\n  }\n  .treetag .el-select-dropdown__item {\n    padding: 0 !important;\n  }\n</style>\n'],sourceRoot:""}]),r.locals={dashline:"export-part-template-module-render__dashline--tj8lY",left:"export-part-template-module-render__left--_KcxE",right:"export-part-template-module-render__right--g82hF",topTitle:"export-part-template-module-render__topTitle--pkUZg",conceptIcon:"export-part-template-module-render__conceptIcon--JU4yd",nodeItem:"export-part-template-module-render__nodeItem--leuJH",uploadIcon:"export-part-template-module-render__uploadIcon--XiV7f",scrollview:"export-part-template-module-render__scrollview--P08cA",tipwrap:"export-part-template-module-render__tipwrap--BMYip",required:"export-part-template-module-render__required--Dt6On",errmsg:"export-part-template-module-render__errmsg--wX_oU",iconinfo:"export-part-template-module-render__iconinfo--JqLQW",icontip:"export-part-template-module-render__icontip--S_N7E",tip:"export-part-template-module-render__tip--QprjF",loading:"export-part-template-module-render__loading--CdpH0",text:"export-part-template-module-render__text--jp41P",reficon:"export-part-template-module-render__reficon--iNAtE",tooltip:"export-part-template-module-render__tooltip--O7Alq",dreficon:"export-part-template-module-render__dreficon--NJQcn",submitbtn:"export-part-template-module-render__submitbtn--Xw0hY",version:"export-part-template-module-render__version--Grwt7",tiptext:"export-part-template-module-render__tiptext--h_f7C",symbolbox:"export-part-template-module-render__symbolbox--CB7Hq",histroy:"export-part-template-module-render__histroy--Pg9JC",tagcategory:"export-part-template-module-render__tagcategory--hsunC",toDetail:"export-part-template-module-render__toDetail--PpzoA",modal:"export-part-template-module-render__modal--kyXGh",menu:"export-part-template-module-render__menu--ONbPu",menuItem:"export-part-template-module-render__menuItem--US_sI",menuName:"export-part-template-module-render__menuName--CFiqT",menuSymbol:"export-part-template-module-render__menuSymbol--yz0gC",toplevel:"export-part-template-module-render__toplevel--Acv4R",lowlevel:"export-part-template-module-render__lowlevel--Qobt4",upload:"export-part-template-module-render__upload--UbliP",uploadArea:"export-part-template-module-render__uploadArea--I2sct",lastVersionTitle:"export-part-template-module-render__lastVersionTitle--S6Vx0",titleTipIcon:"export-part-template-module-render__titleTipIcon--_OWMu",hinticon:"export-part-template-module-render__hinticon--XSFGk",refwrap:"export-part-template-module-render__refwrap--YOes8",configWrap:"export-part-template-module-render__configWrap--ADzg4",main:"export-part-template-module-render__main--HQTpU",desc:"export-part-template-module-render__desc--KubFW"};const i=r},52:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(481),l=t.n(o),a=t(966),r=t.n(a)()(l());r.push([e.id,"\n.index__button--UGVYE {\n    margin: 5px;\n}\n","",{version:3,sources:["webpack://./src/components/render/index.vue"],names:[],mappings:";AAmCE;IACE,WAAW;AACb",sourcesContent:['<template>\n  \x3c!-- 发布为应用模版 --\x3e\n  <skeleton-portal\n    name="views/modules/export-app-template-module/render"\n    method="insert">\n    <template v-slot="props">\n      <ExportAppTemplateModule v-bind="props" />\n    </template>\n  </skeleton-portal>\n  \x3c!-- 发布为局部模版 --\x3e\n  <skeleton-portal\n    name="views/modules/export-part-template-module/render"\n    method="insert">\n    <template v-slot="props">\n      <ExportPartTemplateModule v-bind="props" />\n    </template>\n  </skeleton-portal>\n</template>\n\n<script setup>\n  import ExportAppTemplateModule from "../export-app-template-module-render.vue"\n  import ExportPartTemplateModule from "../export-part-template-module-render.vue"\n  import { useAttrs } from "vue"\n\n  const attrs = useAttrs()\n\n  const onClick = () => {\n    const json = JSON.stringify(attrs, null, 2)\n    const text = `插件配置：\\n${json}`\n\n    alert(text)\n  }\n<\/script>\n\n<style module>\n  .button {\n    margin: 5px;\n  }\n</style>\n'],sourceRoot:""}]),r.locals={button:"index__button--UGVYE"};const i=r},966:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t}).join("")},n.i=function(e,t,o,l,a){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(r[s]=!0)}for(var p=0;p<e.length;p++){var c=[].concat(e[p]);o&&r[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),l&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=l):c[4]="".concat(l)),n.push(c))}},n}},481:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(l," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},650:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},r=[],i=0;i<e.length;i++){var s=e[i],p=o.base?s[0]+o.base:s[0],c=a[p]||0,d="".concat(p," ").concat(c);a[p]=c+1;var m=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)n[m].references++,n[m].updater(u);else{var f=l(u,o);o.byIndex=i,n.splice(i,0,{identifier:d,updater:f,references:1})}r.push(d)}return r}function l(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,l){var a=o(e=e||[],l=l||{});return function(e){e=e||[];for(var r=0;r<a.length;r++){var i=t(a[r]);n[i].references--}for(var s=o(e,l),p=0;p<a.length;p++){var c=t(a[p]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}a=s}}},953:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},88:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},174:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},968:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var l=void 0!==t.layer;l&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,l&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},971:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},25:(e,n)=>{n.Z=(e,n)=>{const t=e.__vccOpts||e;for(const[e,o]of n)t[e]=o;return t}}},n={};function t(o){var l=n[o];if(void 0!==l)return l.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.nc=void 0;var o={};(()=>{t.r(o),t.d(o,{default:()=>L});const e=window.oppTools,n=window.Vue,l={__name:"export-app-template-module-render",setup(e){const{form:t,uploadImgRef:o,mockDataModal:l,visible:a,close:r,model:i,valid:s,changeIcon:p,canEditIcon:c,validateRules:d,exported:m,onStart:u,onEnd:f,checkPermission:g,openAssetconfig:A,taglist:y,onSelectTags:v,lastVersion:h,files:x,onUploadSuccess:C,needPreview:b,showMockModal:k,onSubmit:_,submiting:w,currentRole:B,getMockList:I,setValid:V,setNeedPreview:E}=(0,n.inject)("$context");return d.value.tags||(d.value.tags=[{required:!0,message:"请选择模板分类",trigger:["blur","change"]}]),(e,s)=>{const N=(0,n.resolveComponent)("s-upload-img"),$=(0,n.resolveComponent)("el-input"),T=(0,n.resolveComponent)("el-form-item"),z=(0,n.resolveComponent)("s-others-icon"),S=(0,n.resolveComponent)("el-link"),j=(0,n.resolveComponent)("el-tooltip"),M=(0,n.resolveComponent)("el-tree-select"),R=(0,n.resolveComponent)("s-version"),D=(0,n.resolveComponent)("s-uploader"),P=(0,n.resolveComponent)("el-radio"),U=(0,n.resolveComponent)("el-radio-group"),q=(0,n.resolveComponent)("el-form"),W=(0,n.resolveComponent)("el-button"),O=(0,n.resolveComponent)("el-space"),L=(0,n.resolveComponent)("skeleton-render"),K=(0,n.resolveComponent)("el-dialog");return(0,n.openBlock)(),(0,n.createBlock)(K,{modelValue:(0,n.unref)(a),"onUpdate:modelValue":s[9]||(s[9]=e=>(0,n.isRef)(a)?a.value=e:null),class:"s-export-app-template-modal",width:"500px","align-center":"","destroy-on-close":"","append-to-body":"","close-on-click-modal":!1,onClose:s[10]||(s[10]=e=>(0,n.unref)(r)())},{header:(0,n.withCtx)(()=>s[11]||(s[11]=[(0,n.createElementVNode)("span",{style:{"margin-right":"8px"}}," 发布为应用模板 ",-1)])),footer:(0,n.withCtx)(()=>[(0,n.createVNode)(O,{style:{display:"flex","justify-content":"space-between"},justify:"end"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(O,null,{default:(0,n.withCtx)(()=>[(0,n.unref)(b)?((0,n.openBlock)(),(0,n.createBlock)(W,{key:0,onClick:s[7]||(s[7]=e=>(0,n.unref)(k)())},{default:(0,n.withCtx)(()=>s[17]||(s[17]=[(0,n.createTextVNode)(" 编辑预览数据 ",-1)])),_:1,__:[17]})):(0,n.createCommentVNode)("v-if",!0)]),_:1}),(0,n.createVNode)(O,{justify:"end"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(W,{onClick:s[8]||(s[8]=e=>(0,n.unref)(r)())},{default:(0,n.withCtx)(()=>s[18]||(s[18]=[(0,n.createTextVNode)(" 取 消 ",-1)])),_:1,__:[18]}),(0,n.createVNode)(W,{type:"primary",onClick:(0,n.unref)(_),loading:(0,n.unref)(w)},{default:(0,n.withCtx)(()=>s[19]||(s[19]=[(0,n.createTextVNode)(" 导 出 ",-1)])),_:1,__:[19]},8,["onClick","loading"])]),_:1})]),_:1})]),default:(0,n.withCtx)(()=>[(0,n.createVNode)(q,{ref_key:"form",ref:t,model:(0,n.unref)(i),onValidate:s[6]||(s[6]=e=>(0,n.unref)(V)(e.valid)),"label-position":"top","require-asterisk-position":"right",class:(0,n.normalizeClass)(e.$style.form)},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.iconbox)},[(0,n.createVNode)(N,{ref_key:"uploadImgRef",ref:o,onChangeIcon:(0,n.unref)(p),"can-edit":(0,n.unref)(c),"prop-icon":(0,n.unref)(i).icon},null,8,["onChangeIcon","can-edit","prop-icon"]),(0,n.createVNode)(T,{label:"模板名称",style:{width:"100%","margin-left":"10px"},required:"",rules:(0,n.unref)(d).name,prop:"name",for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)($,{modelValue:(0,n.unref)(i).name,"onUpdate:modelValue":s[0]||(s[0]=e=>(0,n.unref)(i).name=e),placeholder:"请输入模板名称",disabled:(0,n.unref)(m),onCompositionstart:(0,n.unref)(u),onCompositionend:(0,n.unref)(f)},null,8,["modelValue","disabled","onCompositionstart","onCompositionend"])]),_:1},8,["rules"])],2),(0,n.createVNode)(T,{label:"模板分类(资产中心展示)",class:(0,n.normalizeClass)(e.$style.longlabel),style:{position:"relative"},rules:(0,n.unref)(d).tags,required:"",layout:"block",prop:"tags",for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.tagcategory)},[(0,n.unref)(g)?(0,n.createCommentVNode)("v-if",!0):((0,n.openBlock)(),(0,n.createBlock)(j,{key:0,content:"暂无操作权限",trigger:"hover",placement:"top","hover-delay":500},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(S,{disabled:!(0,n.unref)(g),onClick:(0,n.unref)(A)},{default:(0,n.withCtx)(()=>[s[12]||(s[12]=(0,n.createTextVNode)(" 分类管理 ",-1)),(0,n.createVNode)(z,{name:"check-detail",class:(0,n.normalizeClass)(e.$style.toDetail)},null,8,["class"])]),_:1,__:[12]},8,["disabled","onClick"])]),_:1})),(0,n.unref)(g)?((0,n.openBlock)(),(0,n.createBlock)(S,{key:1,onClick:(0,n.unref)(A)},{default:(0,n.withCtx)(()=>[s[13]||(s[13]=(0,n.createTextVNode)(" 分类管理 ",-1)),(0,n.createVNode)(z,{name:"check-detail",class:(0,n.normalizeClass)(e.$style.toDetail)},null,8,["class"])]),_:1,__:[13]},8,["onClick"])):(0,n.createCommentVNode)("v-if",!0)],2),(0,n.createVNode)(M,{class:"treetag",placeholder:"请选择模板分类",modelValue:(0,n.unref)(i).tags,"onUpdate:modelValue":s[1]||(s[1]=e=>(0,n.unref)(i).tags=e),style:{width:"100%"},data:(0,n.unref)(y),multiple:"","render-after-expand":!1,"show-checkbox":"","node-key":"id","default-expanded-keys":["全部分类"],onChange:(0,n.unref)(v),props:{children:"child",label:"tag",disabled:"disable"}},null,8,["modelValue","data","onChange"])]),_:1},8,["class","rules"]),(0,n.createVNode)(T,{label:"发布版本",required:"",rules:(0,n.unref)(d).checkVersion,layout:"block",prop:"version"},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("span",{class:(0,n.normalizeClass)(e.$style.lastVersionTitle)}," (上次导出的版本："+(0,n.toDisplayString)((0,n.unref)(h)?(0,n.unref)(h):"暂无")+" ) ",3),(0,n.createVNode)(R,{value:(0,n.unref)(i).version,"onUpdate:value":s[2]||(s[2]=e=>(0,n.unref)(i).version=e),"min-value":"1.0.0"},null,8,["value"])]),_:1},8,["rules"]),(0,n.createVNode)(T,{label:"版本描述",rules:(0,n.unref)(d).description,prop:"description",for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)($,{type:"textarea",modelValue:(0,n.unref)(i).description,"onUpdate:modelValue":s[3]||(s[3]=e=>(0,n.unref)(i).description=e),placeholder:"请输入"},null,8,["modelValue"])]),_:1},8,["rules"]),(0,n.createVNode)(T,{label:"模板配图",layout:"block",for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(D,{"file-list":(0,n.unref)(x),"onUpdate:fileList":s[4]||(s[4]=e=>(0,n.isRef)(x)?x.value=e:null),multiple:"","list-type":"picture",drag:"","on-success":(0,n.unref)(C),action:"/api/v1/userIcon/upload",accept:"image/png, image/jpg, image/jpeg, image/gif, image/bmp",limit:10,class:(0,n.normalizeClass)(e.$style.upload)},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.uploadArea)},[(0,n.createVNode)(z,{name:"upload",class:(0,n.normalizeClass)(e.$style.uploadIcon)},null,8,["class"]),s[14]||(s[14]=(0,n.createTextVNode)(" 点击/拖拽/粘贴文件到这里 ",-1))],2)]),_:1},8,["file-list","on-success","class"])]),_:1}),(0,n.createVNode)(T,{label:"下载选择：",class:(0,n.normalizeClass)(e.$style.formlabelinline),for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(U,{"model-value":(0,n.unref)(b),onChange:s[5]||(s[5]=e=>(0,n.unref)(E)(e))},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(P,{value:!0},{default:(0,n.withCtx)(()=>s[15]||(s[15]=[(0,n.createTextVNode)(" 下载模板+资产中心预览效果 ",-1)])),_:1,__:[15]}),(0,n.createVNode)(P,{value:!1},{default:(0,n.withCtx)(()=>s[16]||(s[16]=[(0,n.createTextVNode)(" 仅下载模板 ",-1)])),_:1,__:[16]})]),_:1},8,["model-value"])]),_:1},8,["class"])]),_:1},8,["model","class"]),(0,n.createVNode)(L,{name:"views/modules/edit-mock-data-modal/index",onCurrentRole:(0,n.unref)(B),onGetMockList:(0,n.unref)(I),ref_key:"mockDataModal",ref:l},null,8,["onCurrentRole","onGetMockList"])]),_:1},8,["modelValue"])}}};var a=t(650),r=t.n(a),i=t(968),s=t.n(i),p=t(953),c=t.n(p),d=t(174),m=t.n(d),u=t(88),f=t.n(u),g=t(971),A=t.n(g),y=t(489),v={};v.styleTagTransform=A(),v.setAttributes=m(),v.insert=c().bind(null,"head"),v.domAPI=s(),v.insertStyleElement=f(),r()(y.Z,v);const h=y.Z&&y.Z.locals?y.Z.locals:void 0;var x=t(25);const C={};C.$style=h;const b=(0,x.Z)(l,[["__cssModules",C]]),k={style:{display:"flex","justify-content":"space-between"}},_=["title"],w=["title"],B=["title"],I={key:6},V={key:3},E={style:{display:"flex","justify-content":"space-between"}},N={__name:"export-part-template-module-render",setup(e){const{formRef:t,treeViewRef:o,visible:l,loading:a,empty:r,submiting:i,isEditOldTemp:s,canEditIcon:p,autoCheckdepends:c,isEmptyChecked:d,hasPreCheckedNodes:m,checkPermission:u,model:f,validateRules:g,taglist:A,historyList:y,historyEditList:v,lastItem:h,lastVersion:x,treeData:C,treeProps:b,defaultExpandedKeys:N,checkedValues:$,close:T,changeIcon:z,canEditToNewTemp:S,goAssetCenterSeg:j,openAssetconfig:M,onSelectSegmentTemp:R,onSelectTags:D,toggleHistory:P,onSubmit:U,onCheckChange:q,setDirectoryExpandIcon:W,setDirectoryCollapseIcon:O,getNodeReferences:L,getIcon:K,getTextName:Z,getCheckedState:F,onCheckAll:Y,isImage:H,getConnectorSetting:X,getConnectorWrapperIcon:J}=(0,n.inject)("$context");return g.tags||(g.tags=[{required:!0,message:"请选择模板分类",trigger:["blur","change"]}]),(e,Q)=>{const G=(0,n.resolveComponent)("s-others-icon"),ee=(0,n.resolveComponent)("el-tooltip"),ne=(0,n.resolveComponent)("s-upload-icon"),te=(0,n.resolveComponent)("el-link"),oe=(0,n.resolveComponent)("el-popover"),le=(0,n.resolveComponent)("el-input"),ae=(0,n.resolveComponent)("el-option"),re=(0,n.resolveComponent)("el-select"),ie=(0,n.resolveComponent)("el-form-item"),se=(0,n.resolveComponent)("u-tooltip"),pe=(0,n.resolveComponent)("el-tree-select"),ce=(0,n.resolveComponent)("s-version"),de=(0,n.resolveComponent)("s-uploader"),me=(0,n.resolveComponent)("el-form"),ue=(0,n.resolveComponent)("el-aside"),fe=(0,n.resolveComponent)("el-checkbox"),ge=(0,n.resolveComponent)("s-concept-icon"),Ae=(0,n.resolveComponent)("el-tree-v2"),ye=(0,n.resolveComponent)("el-scrollbar"),ve=(0,n.resolveComponent)("el-main"),he=(0,n.resolveComponent)("el-container"),xe=(0,n.resolveComponent)("el-space"),Ce=(0,n.resolveComponent)("el-button"),be=(0,n.resolveComponent)("el-dialog"),ke=(0,n.resolveDirective)("loading");return(0,n.openBlock)(),(0,n.createBlock)(be,{modelValue:(0,n.unref)(l),"onUpdate:modelValue":Q[11]||(Q[11]=e=>(0,n.isRef)(l)?l.value=e:null),class:"s-export-part-template-modal",width:"800px","align-center":"","destroy-on-close":"","append-to-body":"","close-on-click-modal":!1,onClose:Q[12]||(Q[12]=e=>(0,n.unref)(T)())},{header:(0,n.withCtx)(()=>[Q[14]||(Q[14]=(0,n.createElementVNode)("span",{style:{"margin-right":"8px"}}," 发布为局部模板 ",-1)),(0,n.createVNode)(ee,{placement:"top"},{content:(0,n.withCtx)(()=>Q[13]||(Q[13]=[(0,n.createElementVNode)("div",{style:{width:"300px"}}," 应用中的部分内容（页面、逻辑、实体等）可导出为局部模板。局部模板可在其他应用中导入，用于快捷创建相同的页面、逻辑、实体等。 ",-1)])),default:(0,n.withCtx)(()=>[(0,n.createVNode)(G,{class:(0,n.normalizeClass)(e.$style.titleTipIcon),name:"help_line"},null,8,["class"])]),_:1})]),footer:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",E,[(0,n.unref)(m)?((0,n.openBlock)(),(0,n.createBlock)(xe,{key:0},{default:(0,n.withCtx)(()=>[Q[29]||(Q[29]=(0,n.createElementVNode)("span",null,"发布的资产，可前往",-1)),(0,n.createVNode)(te,{onClick:(0,n.unref)(j)},{default:(0,n.withCtx)(()=>Q[28]||(Q[28]=[(0,n.createTextVNode)(" 「资产中心-局部模板」 ",-1)])),_:1,__:[28]},8,["onClick"]),Q[30]||(Q[30]=(0,n.createElementVNode)("span",null,"查看",-1))]),_:1,__:[29,30]})):((0,n.openBlock)(),(0,n.createBlock)(xe,{key:1},{default:(0,n.withCtx)(()=>Q[31]||(Q[31]=[(0,n.createTextVNode)(" ",-1)])),_:1,__:[31]})),(0,n.createVNode)(xe,{justify:"end"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(Ce,{onClick:Q[10]||(Q[10]=e=>(0,n.unref)(T)())},{default:(0,n.withCtx)(()=>Q[32]||(Q[32]=[(0,n.createTextVNode)(" 取 消 ",-1)])),_:1,__:[32]}),(0,n.createVNode)(Ce,{type:"primary",onClick:(0,n.unref)(U),loading:(0,n.unref)(i)},{default:(0,n.withCtx)(()=>Q[33]||(Q[33]=[(0,n.createTextVNode)(" 发 布 ",-1)])),_:1,__:[33]},8,["onClick","loading"])]),_:1})])]),default:(0,n.withCtx)(()=>[(0,n.createVNode)(he,null,{default:(0,n.withCtx)(()=>[(0,n.createVNode)(ue,{class:(0,n.normalizeClass)(e.$style.left),style:{width:"400px",height:"478px",overflow:"scroll"}},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(me,{ref_key:"formRef",ref:t,"label-position":"top",model:(0,n.unref)(f),"require-asterisk-position":"right",onValidate:Q[8]||(Q[8]=n=>e.formValid=n.valid)},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.symbolbox)},[(0,n.unref)(s)?(0,n.createCommentVNode)("v-if",!0):((0,n.openBlock)(),(0,n.createBlock)(ne,{key:0,onChangeIcon:(0,n.unref)(z),"can-edit":(0,n.unref)(p),"prop-icon":(0,n.unref)(f).icon},null,8,["onChangeIcon","can-edit","prop-icon"])),(0,n.createVNode)(ie,{style:{position:"relative"},required:"",rules:(0,n.unref)(s)?{}:(0,n.unref)(g).symbol,prop:"symbol",for:"none"},{label:(0,n.withCtx)(()=>[(0,n.createElementVNode)("span",null,(0,n.toDisplayString)((0,n.unref)(s)?"模板名称（标识）":"模板标识"),1),(0,n.unref)(y).length>0&&(0,n.unref)(s)?((0,n.openBlock)(),(0,n.createElementBlock)("div",{key:0,class:(0,n.normalizeClass)(e.$style.histroy)},[(0,n.createVNode)(te,{onClick:(0,n.unref)(S)},{default:(0,n.withCtx)(()=>Q[15]||(Q[15]=[(0,n.createTextVNode)(" 发布为新模板 ",-1)])),_:1,__:[15]},8,["onClick"])],2)):(0,n.unref)(y).length>0&&!(0,n.unref)(s)?((0,n.openBlock)(),(0,n.createElementBlock)("div",{key:1,class:(0,n.normalizeClass)(e.$style.histroy),style:{left:"203px"}},[(0,n.createVNode)(oe,{width:"auto",trigger:"click"},{reference:(0,n.withCtx)(()=>[(0,n.createVNode)(te,null,{default:(0,n.withCtx)(()=>Q[16]||(Q[16]=[(0,n.createTextVNode)("发布历史",-1)])),_:1,__:[16]})]),default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.menu)},[((0,n.openBlock)(!0),(0,n.createElementBlock)(n.Fragment,null,(0,n.renderList)((0,n.unref)(y),(t,o)=>((0,n.openBlock)(),(0,n.createElementBlock)("div",{class:(0,n.normalizeClass)(e.$style.menuItem),key:o},[(0,n.createElementVNode)("div",k,[(0,n.createElementVNode)("span",{class:(0,n.normalizeClass)(e.$style.menuName)},(0,n.toDisplayString)(t.name),3),(0,n.createVNode)(te,{onClick:e=>(0,n.unref)(P)(t)},{default:(0,n.withCtx)(()=>Q[17]||(Q[17]=[(0,n.createTextVNode)(" 发布到该模板 ",-1)])),_:2,__:[17]},1032,["onClick"])]),(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.menuSymbol)}," 标识："+(0,n.toDisplayString)(t.symbol),3)],2))),128))],2)]),_:1})],2)):(0,n.createCommentVNode)("v-if",!0),(0,n.unref)(s)?(0,n.createCommentVNode)("v-if",!0):((0,n.openBlock)(),(0,n.createBlock)(ee,{key:2,type:"help",placement:"top",class:(0,n.normalizeClass)(e.$style.histroy),style:{left:"64px","margin-top":"4px"},size:"auto"},{content:(0,n.withCtx)(()=>Q[18]||(Q[18]=[(0,n.createElementVNode)("div",{style:{width:"300px"}}," 若发布为已存在的局部模板的“新版本”，则请输入已存在的局部模板标识；若发布为新的局部模板发布，则请输入新的唯一模板标识。 ",-1)])),default:(0,n.withCtx)(()=>[(0,n.createVNode)(G,{name:"help_line",style:{"margin-left":"8px"}})]),_:1},8,["class"]))]),default:(0,n.withCtx)(()=>[(0,n.unref)(s)?((0,n.openBlock)(),(0,n.createBlock)(re,{key:1,style:{width:"336px"},placeholder:"请选择模板历史",modelValue:(0,n.unref)(h).symbol,"onUpdate:modelValue":Q[1]||(Q[1]=e=>(0,n.unref)(h).symbol=e),data:(0,n.unref)(v),onChange:Q[2]||(Q[2]=e=>(0,n.unref)(R)(e))},{default:(0,n.withCtx)(()=>[((0,n.openBlock)(!0),(0,n.createElementBlock)(n.Fragment,null,(0,n.renderList)((0,n.unref)(v),e=>((0,n.openBlock)(),(0,n.createBlock)(ae,{key:e.value,label:e.label,value:e.value},null,8,["label","value"]))),128))]),_:1},8,["modelValue","data"])):((0,n.openBlock)(),(0,n.createBlock)(le,{key:0,modelValue:(0,n.unref)(f).symbol,"onUpdate:modelValue":Q[0]||(Q[0]=e=>(0,n.unref)(f).symbol=e),maxlength:"100",disabled:(0,n.unref)(a),"maxlength-message":"标识最长100字符",placeholder:"请输入",style:{width:"252px"}},null,8,["modelValue","disabled"]))]),_:1},8,["rules"])],2),(0,n.unref)(s)?(0,n.createCommentVNode)("v-if",!0):((0,n.openBlock)(),(0,n.createBlock)(ie,{key:0,label:"模板名称",required:"",rules:(0,n.unref)(g).name,prop:"name",for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(le,{modelValue:(0,n.unref)(f).name,"onUpdate:modelValue":Q[3]||(Q[3]=e=>(0,n.unref)(f).name=e),disabled:(0,n.unref)(a),maxlength:"50","maxlength-message":"模板名称最长50字符",placeholder:"请输入"},null,8,["modelValue","disabled"])]),_:1},8,["rules"])),(0,n.unref)(s)?(0,n.createCommentVNode)("v-if",!0):((0,n.openBlock)(),(0,n.createBlock)(ie,{key:1,style:{position:"relative"},label:"模板分类（资产中心展示）",required:"",rules:(0,n.unref)(g).tags,prop:"tags",for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.tagcategory)},[(0,n.createVNode)(te,{disabled:!(0,n.unref)(u),onClick:(0,n.unref)(M)},{default:(0,n.withCtx)(()=>[Q[19]||(Q[19]=(0,n.createTextVNode)(" 分类管理 ",-1)),(0,n.createVNode)(G,{name:"check-detail",class:(0,n.normalizeClass)(e.$style.toDetail)},null,8,["class"])]),_:1,__:[19]},8,["disabled","onClick"]),(0,n.unref)(u)?(0,n.createCommentVNode)("v-if",!0):((0,n.openBlock)(),(0,n.createBlock)(se,{key:0,trigger:"hover",placement:"top","hover-delay":500},{default:(0,n.withCtx)(()=>Q[20]||(Q[20]=[(0,n.createTextVNode)(" 暂无操作权限 ",-1)])),_:1,__:[20]}))],2),(0,n.createVNode)(pe,{class:"treetag",modelValue:(0,n.unref)(f).tags,"onUpdate:modelValue":Q[4]||(Q[4]=e=>(0,n.unref)(f).tags=e),style:{width:"336px"},data:(0,n.unref)(A),multiple:"","render-after-expand":!1,"show-checkbox":"","node-key":"id","default-expanded-keys":["全部分类"],onChange:(0,n.unref)(D),props:{children:"child",label:"tag",disabled:"disable"}},null,8,["modelValue","data","onChange"])]),_:1},8,["rules"])),(0,n.createCommentVNode)(' <div :class="$style.dashline"></div> '),(0,n.createVNode)(ie,{label:"发布版本",required:"",layout:"block",rules:(0,n.unref)(g).checkVersion,ref:"version",prop:"version",for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("span",{class:(0,n.normalizeClass)(e.$style.lastVersionTitle)}," (上次导出的版本："+(0,n.toDisplayString)((0,n.unref)(s)&&(0,n.unref)(x)||"暂无")+" ) ",3),(0,n.createVNode)(ce,{value:(0,n.unref)(f).version,"onUpdate:value":Q[5]||(Q[5]=e=>(0,n.unref)(f).version=e),disabled:(0,n.unref)(a),"min-value":"1.0.0"},null,8,["value","disabled"])]),_:1},8,["rules"]),(0,n.createVNode)(ie,{label:"版本描述",rules:(0,n.unref)(g).description,prop:"description",for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(le,{type:"textarea",modelValue:(0,n.unref)(f).description,"onUpdate:modelValue":Q[6]||(Q[6]=e=>(0,n.unref)(f).description=e),disabled:(0,n.unref)(a),maxlength:"500","show-word-limit":"",placeholder:"请输入",autosize:{minRows:5}},null,8,["modelValue","disabled"])]),_:1},8,["rules"]),(0,n.createVNode)(ie,{label:"版本配图",style:{"margin-bottom":"0"},for:"none"},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(de,{"file-list":(0,n.unref)(f).picture,"onUpdate:fileList":Q[7]||(Q[7]=e=>(0,n.unref)(f).picture=e),multiple:"","list-type":"picture",drag:"",action:"/api/v1/userIcon/upload","max-size":"50MB",accept:"image/png, image/jpg, image/jpeg, image/gif, image/bmp",limit:10,class:(0,n.normalizeClass)(e.$style.upload)},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.uploadArea)},[(0,n.createVNode)(G,{name:"upload",class:(0,n.normalizeClass)(e.$style.uploadIcon)},null,8,["class"]),Q[21]||(Q[21]=(0,n.createTextVNode)(" 点击/拖拽/粘贴文件到这里 ",-1))],2)]),_:1},8,["file-list","class"])]),_:1})]),_:1},8,["model"])]),_:1},8,["class"]),(0,n.createVNode)(ve,{class:(0,n.normalizeClass)(e.$style.right),style:{width:"400px",height:"478px"}},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.tipwrap)},[(0,n.createElementVNode)("div",null,[(0,n.createElementVNode)("span",{class:(0,n.normalizeClass)(e.$style.tiptext)}," 请选择能力 ",2),(0,n.createElementVNode)("span",{class:(0,n.normalizeClass)(e.$style.required)}," * ",2),(0,n.unref)(d)?((0,n.openBlock)(),(0,n.createElementBlock)("span",{key:0,class:(0,n.normalizeClass)(e.$style.errmsg)},[(0,n.createVNode)(G,{name:"solid-hint",class:(0,n.normalizeClass)(e.$style.iconinfo)},null,8,["class"]),Q[22]||(Q[22]=(0,n.createTextVNode)(" 请至少选择一项能力 ",-1))],2)):(0,n.createCommentVNode)("v-if",!0)]),(0,n.createElementVNode)("div",null,[(0,n.createVNode)(fe,{class:(0,n.normalizeClass)(e.$style.autoCheck),modelValue:(0,n.unref)(c),"onUpdate:modelValue":Q[9]||(Q[9]=e=>(0,n.isRef)(c)?c.value=e:null)},{default:(0,n.withCtx)(()=>Q[23]||(Q[23]=[(0,n.createTextVNode)(" 自动勾选依赖项 ",-1)])),_:1,__:[23]},8,["class","modelValue"]),(0,n.createVNode)(ee,{placement:"top"},{content:(0,n.withCtx)(()=>Q[24]||(Q[24]=[(0,n.createElementVNode)("div",{style:{width:"300px"}}," 若开发者只想将前端页面导出为模板复用，后端逻辑相关希望让模板使用者自己定义，此时可选择不导出前端页面所依赖的后端逻辑。 ",-1)])),default:(0,n.withCtx)(()=>[(0,n.createVNode)(G,{name:"hint",class:(0,n.normalizeClass)(e.$style.hinticon)},null,8,["class"])]),_:1})])],2),(0,n.unref)(a)?((0,n.openBlock)(),(0,n.createElementBlock)("div",{key:0,class:(0,n.normalizeClass)(e.$style.loading)},[(0,n.withDirectives)((0,n.createElementVNode)("div",null,null,512),[[ke,(0,n.unref)(a)]]),(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.text)}," 数据加载中，请稍后... ",2)],2)):(0,n.unref)(r)?((0,n.openBlock)(),(0,n.createElementBlock)("div",{key:1,class:(0,n.normalizeClass)(e.$style.loading)},[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.text)}," 暂无可导出对象 ",2)],2)):((0,n.openBlock)(),(0,n.createBlock)(ye,{key:2,class:(0,n.normalizeClass)(e.$style.scrollview)},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(Ae,{ref_key:"treeViewRef",ref:o,data:(0,n.unref)(C),props:(0,n.unref)(b),height:400,"item-size":35,"show-checkbox":"","default-expanded-keys":(0,n.unref)(N),"default-checked-keys":(0,n.unref)($),class:"s-tree s-tree-export-template","check-strictly":"",onCheckChange:(0,n.unref)(q),onNodeExpand:(0,n.unref)(W),onNodeCollapse:(0,n.unref)(O)},{default:(0,n.withCtx)(({data:t})=>[(0,n.createVNode)(se,{trigger:"hover",placement:"left","show-after":200,reference:"prev",disabled:!t.exportDisabled},{default:(0,n.withCtx)(()=>Q[25]||(Q[25]=[(0,n.createTextVNode)(" 暂不支持导出 ",-1)])),_:2,__:[25]},1032,["disabled"]),"ConfigProperty"===t.concept?((0,n.openBlock)(),(0,n.createElementBlock)("div",{key:0,class:(0,n.normalizeClass)(e.$style.configWrap)},[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.main)},[(0,n.createVNode)(ge,{name:t.icon||t.concept,class:(0,n.normalizeClass)(e.$style.conceptIcon)},null,8,["name","class"]),(0,n.createElementVNode)("span",null,(0,n.toDisplayString)(t.name),1)],2),t.description?((0,n.openBlock)(),(0,n.createElementBlock)("div",{key:0,class:(0,n.normalizeClass)(e.$style.desc)},(0,n.toDisplayString)(t.description),3)):(0,n.createCommentVNode)("v-if",!0)],2)):((0,n.openBlock)(),(0,n.createElementBlock)(n.Fragment,{key:1},["ConnectorModuleItem"===t.concept?((0,n.openBlock)(),(0,n.createElementBlock)(n.Fragment,{key:0},[(0,n.unref)(H)((0,n.unref)(X)(t).icon)?((0,n.openBlock)(),(0,n.createBlock)(ne,{key:0,displayModeCustom:"",width:"14px",height:"14px","can-edit":!1,"prop-icon":(0,n.unref)(X)(t).icon,class:(0,n.normalizeClass)(e.$style.uploadIcon)},null,8,["prop-icon","class"])):((0,n.openBlock)(),(0,n.createBlock)(ge,{key:1,name:(0,n.unref)(X)(t).icon,class:(0,n.normalizeClass)(e.$style.conceptIcon)},null,8,["name","class"]))],64)):"Connection"===t.concept?((0,n.openBlock)(),(0,n.createElementBlock)(n.Fragment,{key:1},[(0,n.unref)(H)(t.connector.previewImg,t.connector.connectorKind)?((0,n.openBlock)(),(0,n.createBlock)(ne,{key:0,displayModeCustom:"",width:"14px",height:"14px","can-edit":!1,"prop-icon":(0,n.unref)(J)(t),class:(0,n.normalizeClass)(e.$style.uploadIcon)},null,8,["prop-icon","class"])):((0,n.openBlock)(),(0,n.createBlock)(ge,{key:1,name:t.connector.connectorKind,class:(0,n.normalizeClass)(e.$style.conceptIcon)},null,8,["name","class"]))],64)):((0,n.openBlock)(),(0,n.createBlock)(ge,{key:2,name:(0,n.unref)(K)(t),class:(0,n.normalizeClass)(e.$style.conceptIcon)},null,8,["name","class"])),t.concept&&t.concept.endsWith("Root")&&"DataSourceRoot"!==t.concept?((0,n.openBlock)(),(0,n.createElementBlock)("div",{key:3,class:(0,n.normalizeClass)(e.$style.topTitle)},[(0,n.createElementVNode)("span",{class:"titellipsis",title:t.aliasName||t.name},(0,n.toDisplayString)(t.aliasName||t.name),9,_),(0,n.withDirectives)((0,n.createVNode)(te,{onClick:e=>(0,n.unref)(Y)(e,t)},{default:(0,n.withCtx)(()=>[(0,n.createTextVNode)((0,n.toDisplayString)((0,n.unref)(F)(t)),1)]),_:2},1032,["onClick"]),[[n.vShow,t.childNodes.length>0]])],2)):"DataSource"===t.concept?((0,n.openBlock)(),(0,n.createElementBlock)("div",{key:4,class:(0,n.normalizeClass)(e.$style.topTitle)},[(0,n.createElementVNode)("div",null,[(0,n.createElementVNode)("span",{class:"titellipsis",title:t.aliasName||t.name},(0,n.toDisplayString)(t.aliasName||t.name),9,w),(0,n.createVNode)(G,{name:"info",class:(0,n.normalizeClass)(e.$style.dreficon)},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(se,{trigger:"hover",placement:"top","show-after":200},{default:(0,n.withCtx)(()=>Q[26]||(Q[26]=[(0,n.createTextVNode)(" 数据源不会带出数据库链接等信息，不支持数据共享 ",-1)])),_:1,__:[26]})]),_:1},8,["class"])]),t.module?(0,n.createCommentVNode)("v-if",!0):((0,n.openBlock)(),(0,n.createBlock)(te,{key:0,onClick:e=>(0,n.unref)(Y)(e,t)},{default:(0,n.withCtx)(()=>[(0,n.createTextVNode)((0,n.toDisplayString)((0,n.unref)(F)(t)),1)]),_:2},1032,["onClick"]))],2)):((0,n.openBlock)(),(0,n.createElementBlock)("span",{key:5,class:"titellipsis",title:(0,n.unref)(Z)(t)},(0,n.toDisplayString)((0,n.unref)(Z)(t)),9,B)),["Module","ConnectorModuleItem"].includes(t.concept)?((0,n.openBlock)(),(0,n.createElementBlock)("span",I,(0,n.toDisplayString)(t.version?`（${t.version}）`:""),1)):(0,n.createCommentVNode)("v-if",!0)],64)),(0,n.unref)(L)(t).length?((0,n.openBlock)(),(0,n.createBlock)(G,{key:2,name:"depend-reference",class:(0,n.normalizeClass)(e.$style.dreficon)},{default:(0,n.withCtx)(()=>[(0,n.createVNode)(se,{trigger:"hover",placement:"top","show-after":200},{default:(0,n.withCtx)(()=>[(0,n.createElementVNode)("div",{class:(0,n.normalizeClass)(e.$style.refwrap)},[Q[27]||(Q[27]=(0,n.createElementVNode)("span",null,"依赖关系：",-1)),((0,n.openBlock)(!0),(0,n.createElementBlock)(n.Fragment,null,(0,n.renderList)((0,n.unref)(L)(t),(o,l)=>((0,n.openBlock)(),(0,n.createElementBlock)("span",{key:o.name},["ConnectorModuleItem"===o.concept?((0,n.openBlock)(),(0,n.createElementBlock)(n.Fragment,{key:0},[(0,n.unref)(H)((0,n.unref)(X)(o.node).icon)?((0,n.openBlock)(),(0,n.createBlock)(ne,{key:0,displayModeCustom:"",width:"14px",height:"14px","can-edit":!1,"prop-icon":(0,n.unref)(X)(o.node).icon,class:(0,n.normalizeClass)(e.$style.reficon)},null,8,["prop-icon","class"])):((0,n.openBlock)(),(0,n.createBlock)(ge,{key:1,name:(0,n.unref)(X)(o.node).icon,class:(0,n.normalizeClass)(e.$style.reficon)},null,8,["name","class"]))],64)):"Connection"===o.concept?((0,n.openBlock)(),(0,n.createElementBlock)(n.Fragment,{key:1},[(0,n.unref)(H)(o.node.connector.previewImg,o.node.connector.connectorKind)?((0,n.openBlock)(),(0,n.createBlock)(ne,{key:0,displayModeCustom:"",width:"14px",height:"14px","can-edit":!1,"prop-icon":(0,n.unref)(J)(o.node),class:(0,n.normalizeClass)(e.$style.reficon)},null,8,["prop-icon","class"])):((0,n.openBlock)(),(0,n.createBlock)(ge,{key:1,name:o.node.connector.connectorKind,class:(0,n.normalizeClass)(e.$style.reficon)},null,8,["name","class"]))],64)):((0,n.openBlock)(),(0,n.createBlock)(ge,{key:2,name:(0,n.unref)(K)(o),class:(0,n.normalizeClass)(e.$style.reficon)},null,8,["name","class"])),(0,n.createElementVNode)("span",null,(0,n.toDisplayString)(o.name),1),l!==(0,n.unref)(L)(t).length-1?((0,n.openBlock)(),(0,n.createElementBlock)("span",V," 、 ")):(0,n.createCommentVNode)("v-if",!0)]))),128))],2)]),_:2},1024)]),_:2},1032,["class"])):(0,n.createCommentVNode)("v-if",!0)]),_:1},8,["data","props","default-expanded-keys","default-checked-keys","onCheckChange","onNodeExpand","onNodeCollapse"])]),_:1},8,["class"]))]),_:1},8,["class"])]),_:1})]),_:1},8,["modelValue"])}}};var $=t(306),T={};T.styleTagTransform=A(),T.setAttributes=m(),T.insert=c().bind(null,"head"),T.domAPI=s(),T.insertStyleElement=f(),r()($.Z,T);const z=$.Z&&$.Z.locals?$.Z.locals:void 0;var S=t(776),j={};j.styleTagTransform=A(),j.setAttributes=m(),j.insert=c().bind(null,"head"),j.domAPI=s(),j.insertStyleElement=f(),r()(S.Z,j),S.Z&&S.Z.locals&&S.Z.locals;const M={};M.$style=z;const R=(0,x.Z)(N,[["__cssModules",M]]),D={__name:"index",setup:e=>((0,n.useAttrs)(),(e,t)=>{const o=(0,n.resolveComponent)("skeleton-portal");return(0,n.openBlock)(),(0,n.createElementBlock)(n.Fragment,null,[(0,n.createCommentVNode)(" 发布为应用模版 "),(0,n.createVNode)(o,{name:"views/modules/export-app-template-module/render",method:"insert"},{default:(0,n.withCtx)(e=>[(0,n.createVNode)(b,(0,n.normalizeProps)((0,n.guardReactiveProps)(e)),null,16)]),_:1}),(0,n.createCommentVNode)(" 发布为局部模版 "),(0,n.createVNode)(o,{name:"views/modules/export-part-template-module/render",method:"insert"},{default:(0,n.withCtx)(e=>[(0,n.createVNode)(R,(0,n.normalizeProps)((0,n.guardReactiveProps)(e)),null,16)]),_:1})],64)})};var P=t(52),U={};U.styleTagTransform=A(),U.setAttributes=m(),U.insert=c().bind(null,"head"),U.domAPI=s(),U.insertStyleElement=f(),r()(P.Z,U);const q=P.Z&&P.Z.locals?P.Z.locals:void 0,W={};W.$style=q;const O=(0,x.Z)(D,[["__cssModules",W]]),L=(0,e.createPlugin)(O)({name:"cust-export-module-huadian-plugin",method:"insert",container:"left-side-nav/main/test",dependencies:["store-ide","store-app","skeleton"]})})(),window["cust-export-module-huadian-plugin"]=o})();
//# sourceMappingURL=cust-export-module-huadian-plugin.js.map