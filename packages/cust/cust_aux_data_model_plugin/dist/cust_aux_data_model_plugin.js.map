{"version":3,"file":"cust_aux_data_model_plugin.js","mappings":"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","sources":["webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?a7d3","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?a96f","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?c3ba","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?98fc","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?479a","webpack://cust_aux_data_model_plugin/./src/components/render/index.vue?e9c5","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/api.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/exportHelper.js","webpack://cust_aux_data_model_plugin/webpack/bootstrap","webpack://cust_aux_data_model_plugin/webpack/runtime/compat get default export","webpack://cust_aux_data_model_plugin/webpack/runtime/define property getters","webpack://cust_aux_data_model_plugin/webpack/runtime/hasOwnProperty shorthand","webpack://cust_aux_data_model_plugin/webpack/runtime/make namespace object","webpack://cust_aux_data_model_plugin/webpack/runtime/nonce","webpack://cust_aux_data_model_plugin/external window \"oppTools\"","webpack://cust_aux_data_model_plugin/external window \"Vue\"","webpack://cust_aux_data_model_plugin/external window \"ElementPlus\"","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/bind.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/utils.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/core/AxiosError.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/toFormData.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/buildURL.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/core/InterceptorManager.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/defaults/transitional.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/platform/browser/index.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/platform/common/utils.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/platform/index.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/formDataToJSON.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/defaults/index.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/parseHeaders.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/core/AxiosHeaders.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/core/transformData.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/cancel/isCancel.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/cancel/CanceledError.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/core/settle.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/speedometer.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/progressEventReducer.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/throttle.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/cookies.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/core/buildFullPath.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/combineURLs.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/core/mergeConfig.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/resolveConfig.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/adapters/xhr.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/parseProtocol.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/composeSignals.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/trackStream.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/adapters/fetch.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/adapters/adapters.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/null.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/core/dispatchRequest.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/env/data.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/validator.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/core/Axios.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/cancel/CancelToken.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/axios.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/spread.js","webpack://cust_aux_data_model_plugin/./node_modules/.pnpm/axios@1.11.0/node_modules/axios/lib/helpers/isAxiosError.js","webpack://cust_aux_data_model_plugin/./src/utils/http.js","webpack://cust_aux_data_model_plugin/./src/utils/methods.js","webpack://cust_aux_data_model_plugin/./src/config/index.js","webpack://cust_aux_data_model_plugin/./src/apis/index.js","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue","webpack://cust_aux_data_model_plugin/./src/utils/index.js","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?5c67","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?b4ca","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?4172","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?cb9a","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?0c7d","webpack://cust_aux_data_model_plugin/./src/components/EntityPropertyDesigner.vue?5394","webpack://cust_aux_data_model_plugin/./src/components/render/index.vue","webpack://cust_aux_data_model_plugin/./src/components/render/index.vue?fed9","webpack://cust_aux_data_model_plugin/./src/components/render/index.vue?e351","webpack://cust_aux_data_model_plugin/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.tableCell[data-v-4dd96507] .cell {\n    padding: 0;\n    line-height: 20px;\n    padding-left: 6px;\n}\n.theadLable[data-v-4dd96507] {\n    overflow: visible;\n    width: 100%;\n    padding-left: 6px;\n    border-right: 1px solid var(--entity-designer-property-dragger-border-color);\n}\n.topIconGroup[data-v-4dd96507] {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 8px;\n    background-color: var(--entity-designer-icon-group-background-color);\n    padding: 5px 24px;\n    border-bottom: 1px solid var(--entity-designer-icon-group-border-color);\n    position: sticky;\n    z-index: 9;\n    top: 64px;\n}\n.icon[data-v-4dd96507] {\n    margin-right: 8px;\n}\n.extraForm[data-v-4dd96507] .el-form-item__label {\n    font-size: 12px;\n}\n[data-v-4dd96507] .row-style {\n    border: 1px solid #4d87fe;\n}\n[data-v-4dd96507] .cell-style {\n    border-bottom: 1px solid #409eff;\n}\n.elFormFlex[data-v-4dd96507] {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-wrap: wrap;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/EntityPropertyDesigner.vue\"],\"names\":[],\"mappings\":\";AAs4DE;IACE,UAAU;IACV,iBAAiB;IACjB,iBAAiB;AACnB;AACA;IACE,iBAAiB;IACjB,WAAW;IACX,iBAAiB;IACjB,4EAA4E;AAC9E;AACA;IACE,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,QAAQ;IACR,oEAAoE;IACpE,iBAAiB;IACjB,uEAAuE;IACvE,gBAAgB;IAChB,UAAU;IACV,SAAS;AACX;AAEA;IACE,iBAAiB;AACnB;AAEA;IACE,eAAe;AACjB;AAEA;IACE,yBAAyB;AAC3B;AAEA;IACE,gCAAgC;AAClC;AAEA;IACE,aAAa;IACb,2BAA2B;IAC3B,mBAAmB;IACnB,eAAe;AACjB\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div\\n      v-if=\\\"!isViewEntity\\\"\\n      class=\\\"topIconGroup\\\"\\n      :class=\\\"$style.body\\\"\\n      style=\\\"margin-top: 0px; margin-bottom: 0px; border-bottom: 0px; height: 40px\\\"\\n    >\\n      <!-- 添加实体属性 -->\\n      <s-others-icon name=\\\"add\\\" tooltip=\\\"添加属性\\\" button @click=\\\"handleAddItem\\\"></s-others-icon>\\n      <!-- 删除实体属性 -->\\n      <s-others-icon\\n        name=\\\"remove\\\"\\n        button\\n        :tooltip=\\\"getRemoveTooltip()\\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          selectedItem.naslNode.primaryKey ||\\n          isOfficalEntityProperty(selectedItem)\\n        \\\"\\n        @click=\\\"removeItem(selectedItem)\\\"\\n      ></s-others-icon>\\n      <div :class=\\\"$style.icondivider\\\">|</div>\\n      <!-- 上移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-up\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置顶'\\n            : '上移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveUpItem\\\"\\n      ></s-others-icon>\\n      <!-- 下移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-down\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置底'\\n            : '下移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveDownItem\\\"\\n      ></s-others-icon>\\n      <!-- 一键添加到备选字段库 -->\\n      <el-button v-if=\\\"showReflowBtn\\\" :loading=\\\"reflowLoading\\\" @click=\\\"addReflowField\\\">一键添加到备选字段库</el-button>\\n    </div>\\n    <div :class=\\\"$style.body\\\" style=\\\"margin-top: 0px\\\">\\n      <div :class=\\\"$style.bodywrap\\\" class=\\\"tableCell\\\">\\n        <el-table\\n          ref=\\\"tableviewRef\\\"\\n          :data=\\\"renderList\\\"\\n          highlight-current-row\\n          :style=\\\"`min-width:950px;${tableHeight}`\\\"\\n          style=\\\"width: 100%\\\"\\n          :class=\\\"\\n            renderList.length > 8\\n              ? [$style.table, $style.tablescroll, 's-data-table-edit']\\n              : [$style.table, 's-data-table-edit']\\n          \\\"\\n          :value=\\\"selectedItem && selectedItem.naslNode.name\\\"\\n          value-field=\\\"name\\\"\\n          :header-row-style=\\\"{ height: '40px' }\\\"\\n          :cell-style=\\\"{ padding: '0px' }\\\"\\n          :row-style=\\\"{ height: '42px' }\\\"\\n          :row-class-name=\\\"setRowClassName\\\"\\n          empty-text=\\\"暂无数据\\\"\\n          @row-contextmenu=\\\"onContextMenuRow\\\"\\n          @row-click=\\\"onSelectRowWithDataType\\\"\\n          @header-dragend=\\\"handleDragend\\\"\\n          @click.right.prevent\\n          :border=\\\"true\\\"\\n        >\\n          <!-- 主键/关联属性的icon -->\\n          <el-table-column width=\\\"38\\\" prop=\\\"primaryKey\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.primaryKey\\\"\\n                  name=\\\"key\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconKey]\\\"\\n                ></s-others-icon>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.relationProperty\\\"\\n                  name=\\\"link\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconLink]\\\"\\n                ></s-others-icon>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 标题 -->\\n          <el-table-column prop=\\\"label\\\" min-width=\\\"107\\\" label=\\\"字段注释\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段注释</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!item.loading && !item.naslNode.parentNode.loading && !isViewEntity\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'label'\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                  tabindex=\\\"0\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'label')\\\"\\n                  :title=\\\"item.naslNode.label\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.label }}</span>\\n                    <s-others-icon\\n                      v-show=\\\"!isOfficalEntityProperty(item)\\\"\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    ref=\\\"labelValidatorRef\\\"\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.label\\\"\\n                    rules=\\\"maxLength(63)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurLabel(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <s-input\\n                      placeholder=\\\"请输入标题\\\"\\n                      :model-value=\\\"item.naslNode.label\\\"\\n                      ref=\\\"labelEditor\\\"\\n                      :class=\\\"$style.input\\\"\\n                      @focus=\\\"handleLabelFocus(item.naslNode.label)\\\"\\n                      @blur:value=\\\"handleLabelBlur($event, slotProps, item)\\\"\\n                      @input=\\\"handleLabelInput($event, slotProps)\\\"\\n                      @keyup.enter=\\\"$event.target.blur()\\\"\\n                    ></s-input>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <!-- 之前仅仅为 item.label 但是实际上在item 对象中没有label属性，恐在特殊情况下存在，故范围限制为 区分 viewEntity -->\\n                <span>{{ isViewEntity ? item.naslNode.label : item.label }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 名称 -->\\n          <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" min-width=\\\"87\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段名</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!getDisable(item)\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'name'\\\"\\n                  tabindex=\\\"0\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  :title=\\\"item.naslNode.name\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'name')\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.name }}</span>\\n                    <s-others-icon\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.name\\\"\\n                    :rules=\\\"getEntityPropertyRules(item.naslNode)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurName(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <!-- “属性名”为空是显示提示信息 -->\\n                    <el-tooltip\\n                      :visible=\\\"tooltipOpened === 'entityAttribute' && !itemNameValue\\\"\\n                      placement=\\\"top-start\\\"\\n                      content=\\\"属性为英文字母、数字和下划线，且首字母小写\\\"\\n                    >\\n                      <s-input\\n                        :placeholder=\\\"entityPropertyPlaceholder\\\"\\n                        :model-value=\\\"item.naslNode.name\\\"\\n                        ref=\\\"nameEditor\\\"\\n                        :class=\\\"$style.input\\\"\\n                        @focus=\\\"onFocusName(item)\\\"\\n                        @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                        @input=\\\"slotProps.inputChange($event)\\\"\\n                        @keyup.enter=\\\"$event.target.blur()\\\"\\n                        @update:modelValue=\\\"itemNameValue = $event\\\"\\n                      ></s-input>\\n                    </el-tooltip>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <span>{{ item.naslNode.name }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 数据类型 -->\\n          <el-table-column label=\\\"数据类型\\\" min-width=\\\"247\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">数据类型</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <el-tooltip v-if=\\\"isAppDeploying\\\" content=\\\"应用发布中，暂不能修改\\\" placement=\\\"bottom-start\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </el-tooltip>\\n                <!-- 禁用状态 / 已经发布过的复合类型 -->\\n                <template v-else-if=\\\"getDisable(item) || isPublishedComplexType(item)\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </template>\\n                <!-- 非禁用状态 -->\\n                <template v-else>\\n                  <!-- 展示态 -->\\n                  <div\\n                    v-if=\\\"item.edit !== 'datatype'\\\"\\n                    tabindex=\\\"0\\\"\\n                    :class=\\\"$style.edit\\\"\\n                    :ref=\\\"`datatype${item.naslNode.id}`\\\"\\n                    :title=\\\"showDatatype(item)\\\"\\n                    @dblclick=\\\"onDblClickDatatype(item, $event)\\\"\\n                    @keyup=\\\"onKeyUp($event, item, 'datatype')\\\"\\n                  >\\n                    <div :class=\\\"$style.text\\\">\\n                      <span :class=\\\"$style.textContent\\\">{{ showDatatype(item) }}</span>\\n                      <s-others-icon\\n                        name=\\\"edit\\\"\\n                        :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                        @click=\\\"(getDataTypeList(), onSetItemEdit(item, 'datatype', false))\\\"\\n                      ></s-others-icon>\\n                    </div>\\n                  </div>\\n                  <!-- 编辑态 -->\\n                  <div v-else :class=\\\"$style.editwrap\\\">\\n                    <el-tooltip :content=\\\"`${isAppDeploying ? '应用发布中，暂不能修改' : ''}`\\\" placement=\\\"bottom-start\\\">\\n                      <s-datatype-select\\n                        :unionable=\\\"false\\\"\\n                        :no-union-subtype=\\\"true\\\"\\n                        :data-type-list=\\\"item.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                        :last-version=\\\"item.naslNode.lastVersion\\\"\\n                        :type-annotation=\\\"item.naslNode.typeAnnotation\\\"\\n                        :concept=\\\"item.naslNode.entity.concept\\\"\\n                        :show-system-types=\\\"false\\\"\\n                        :show-generic-types=\\\"true\\\"\\n                        :show-entity=\\\"true\\\"\\n                        :show-structures=\\\"true\\\"\\n                        :emptyable=\\\"false\\\"\\n                        :hasAnonymousStructure=\\\"true\\\"\\n                        :disabled=\\\"item.naslNode.readonly || isAppDeploying || isPublishedComplexType(item)\\\"\\n                        @blur=\\\"handleBlur(item)\\\"\\n                        @change=\\\"onChangeDatatype\\\"\\n                      ></s-datatype-select>\\n                    </el-tooltip>\\n                  </div>\\n                </template>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 是否必填 -->\\n          <el-table-column label=\\\"是否必填\\\" width=\\\"70\\\" prop=\\\"required\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else style=\\\"margin-left: 16px\\\">\\n                <el-checkbox\\n                  v-model=\\\"item.naslNode.required\\\"\\n                  :disabled=\\\"getDisable(item) || isComplexType(item) || isOfficalEntity(item)\\\"\\n                  :tabindex=\\\"item.editable === false || item.loading || item.naslNode.parentNode.loading ? -1 : 0\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"requireInput(item, $event)\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 默认值 -->\\n          <el-table-column label=\\\"默认值\\\" prop=\\\"defaultValue\\\" width=\\\"120\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item }\\\">\\n              <div v-if=\\\"['createdTime', 'updatedTime'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>自动生成</span>\\n              </div>\\n              <div v-else-if=\\\"['createdBy', 'updatedBy'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>（无）</span>\\n              </div>\\n              <template v-else-if=\\\"!canSetDefaultValue(item)\\\">\\n                <div :class=\\\"$style.text\\\">\\n                  <span>（无）</span>\\n                </div>\\n              </template>\\n              <template\\n                v-else-if=\\\"\\n                  item.loading || item.naslNode.parentNode.loading || item.naslNode.generationRule !== 'manual'\\n                \\\"\\n              >\\n                <div :class=\\\"$style.text\\\">\\n                  <div :class=\\\"$style.text\\\" v-if=\\\"item.naslNode.generationRule === 'auto'\\\">\\n                    <span>自动生成</span>\\n                  </div>\\n                  <span v-else>{{ item.naslNode.defaultValue }}</span>\\n                </div>\\n              </template>\\n              <template v-else>\\n                <s-attr-input\\n                  title=\\\"默认值绑定\\\"\\n                  node-concept=\\\"defaultValue\\\"\\n                  :name=\\\"item.naslNode.name\\\"\\n                  :parent-node=\\\"item.naslNode\\\"\\n                  :node=\\\"item.naslNode.defaultValue\\\"\\n                  :class=\\\"{\\n                    [$style.typeError]: IsError(item.naslNode),\\n                  }\\\"\\n                ></s-attr-input>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表格 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inTable\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表格\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inTable\\\"\\n                @change=\\\"toggleSelectAll($event, 'inTable')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inTable\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inTable')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在筛选 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inFilter\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在筛选\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inFilter\\\"\\n                @change=\\\"toggleSelectAll($event, 'inFilter')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inFilter\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inFilter')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表单 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inForm\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表单\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inForm\\\"\\n                @change=\\\"toggleSelectAll($event, 'inForm')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inForm\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inForm')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在详情 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inDetail\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在详情\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inDetail\\\"\\n                @change=\\\"toggleSelectAll($event, 'inDetail')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inDetail\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inDetail')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n        </el-table>\\n        <!-- 右键点击 -->\\n        <el-popover\\n          :disabled-scroll=\\\"true\\\"\\n          trigger=\\\"click\\\"\\n          ref=\\\"menuPopper\\\"\\n          :popper-options=\\\"popperOptions\\\"\\n          v-if=\\\"menuSelectedItem && popperExistMap[menuSelectedItem.id]\\\"\\n          v-model:visible=\\\"popperVisibleMap[menuSelectedItem && menuSelectedItem.id]\\\"\\n          :virtual-ref=\\\"triggerRef\\\"\\n          :placement=\\\"placement\\\"\\n          :show-arrow=\\\"false\\\"\\n          @hide=\\\"onMenuPopperHide\\\"\\n        >\\n          <el-menu :class=\\\"$contextmenu.menu\\\" @click=\\\"onMenuClick\\\">\\n            <el-menu-item-group :class=\\\"$contextmenu.group\\\" title=\\\"属性\\\">\\n              <el-menu-item :class=\\\"$contextmenu.item\\\" @click=\\\"onMenuFindUsage\\\">查找引用</el-menu-item>\\n              <el-menu-item\\n                :class=\\\"$contextmenu.item\\\"\\n                @click=\\\"onMenuDelete(removeItem)\\\"\\n                :disabled=\\\"\\n                  (menuSelectedItem && menuSelectedItem.primaryKey) ||\\n                  isOfficalEntityProperty({\\n                    naslNode: menuSelectedItem,\\n                  }) ||\\n                  isViewEntity\\n                \\\"\\n              >\\n                删除\\n              </el-menu-item>\\n            </el-menu-item-group>\\n          </el-menu>\\n        </el-popover>\\n      </div>\\n      <template v-if=\\\"selectedItem\\\">\\n        <div :class=\\\"[$style.flexgrid, $style.bodywrap1]\\\">\\n          <div :class=\\\"$style.gridcolumn\\\" class=\\\"extraForm\\\">\\n            <el-form\\n              ref=\\\"selectedItemForm\\\"\\n              :model=\\\"selectedItem\\\"\\n              :class=\\\"[$style.reffrom, $style.blockFromLayout, 's-data-attr-designer-form']\\\"\\n              label-width=\\\"85px\\\"\\n              label-position=\\\"right\\\"\\n              :inline=\\\"true\\\"\\n            >\\n              <!-- 最 大/小 值/长度 -->\\n              <skeleton-render\\n                name=\\\"views/data/components/entity-field-rules/index\\\"\\n                :property=\\\"selectedItem.naslNode\\\"\\n                :key=\\\"'rules_' + selectedItem.naslNode.name\\\"\\n                :disabled=\\\"\\n                  selectedItem.loading ||\\n                  selectedItem.naslNode.parentNode.loading ||\\n                  selectedItem.naslNode.editable === false ||\\n                  isViewEntity\\n                \\\"\\n                :is-view-entity=\\\"isViewEntity\\\"\\n                direction=\\\"horizontal\\\"\\n                :class=\\\"$style.rules\\\"\\n              />\\n              <!-- 小数位数 -->\\n              <el-form-item v-if=\\\"typeName === 'Decimal'\\\" label=\\\"小数位数\\\">\\n                <el-input-number\\n                  placeholder=\\\"请输入小数位数\\\"\\n                  :color=\\\"scaleErrorMsg ? 'error' : ''\\\"\\n                  v-model=\\\"model.scale\\\"\\n                  :min=\\\"scaleOption.min\\\"\\n                  :max=\\\"scaleOption.max\\\"\\n                  controls-position=\\\"right\\\"\\n                  :disabled=\\\"decimalDisabled(selectedItem) || isViewEntity\\\"\\n                  :value-on-clear=\\\"0\\\"\\n                  @keyup.enter=\\\"$event.target.blur()\\\"\\n                  @change=\\\"setScale\\\"\\n                ></el-input-number>\\n                <div v-if=\\\"scaleErrorMsg\\\" :class=\\\"$style.scaleErrorMsg\\\">\\n                  <s-others-icon name=\\\"solid-hint\\\"></s-others-icon>\\n                  {{ scaleErrorMsg }}\\n                </div>\\n              </el-form-item>\\n              <!-- 关联属性 -->\\n              <el-form-item :key=\\\"selectedItem.naslNode.name\\\">\\n                <template #label>\\n                  <div style=\\\"display: flex; align-items: center\\\">\\n                    关联属性\\n                    <s-others-icon name=\\\"link2\\\" :class=\\\"$style.iconLink2\\\"></s-others-icon>\\n                  </div>\\n                </template>\\n                <skeleton-render\\n                  name=\\\"views/data/entity-reference/index\\\"\\n                  :entity=\\\"entity\\\"\\n                  :property=\\\"selectedItem.naslNode\\\"\\n                  :value=\\\"entityReference\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  :data-type-list=\\\"selectedItem.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                  :error=\\\"isReleationEntityError(selectedItem.naslNode)\\\"\\n                  @save=\\\"onSaveReference\\\"\\n                  @clear=\\\"onClearReference\\\"\\n                />\\n              </el-form-item>\\n              <!-- 属性记录 -->\\n              <el-form-item\\n                label=\\\"关联属性实体记录删除规则\\\"\\n                v-if=\\\"selectedItem.naslNode.relationProperty\\\"\\n                layout=\\\"block\\\"\\n                class=\\\"relationDelRule\\\"\\n              >\\n                <el-select\\n                  style=\\\"width: 240px\\\"\\n                  v-model=\\\"selectedItem.naslNode.deleteRule\\\"\\n                  placeholder=\\\"请选择\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  @change=\\\"setDeleteRule\\\"\\n                >\\n                  <el-option label=\\\"不允许删除\\\" value=\\\"protect\\\"></el-option>\\n                  <el-option label=\\\"允许删除且同时删除本实体记录\\\" value=\\\"cascade\\\"></el-option>\\n                </el-select>\\n              </el-form-item>\\n              <!-- 主键生成规则 -->\\n              <el-form-item v-if=\\\"selectedItem.naslNode.primaryKey\\\" label=\\\"主键生成规则\\\" placement=\\\"bottom\\\">\\n                <skeleton-render\\n                  name=\\\"views/data/components/entity-primarykey-rules/index\\\"\\n                  :disabled=\\\"isViewEntity\\\"\\n                  :entity=\\\"entity\\\"\\n                  :selected-item=\\\"selectedItem.naslNode\\\"\\n                  @changeErrorMsgs=\\\"changeErrorMsgs\\\"\\n                />\\n              </el-form-item>\\n              <!-- 数据库列名 -->\\n              <el-form-item label=\\\"数据库列名\\\" placement=\\\"bottom\\\">\\n                <u-validator\\n                  ref=\\\"columnNameValidatorRef\\\"\\n                  style=\\\"width: 100%\\\"\\n                  :rules=\\\"entityPropertyColumnNameRules\\\"\\n                  :value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                  @blur-dirty-valid=\\\"selectedItem.naslNode.setColumnName($event.value)\\\"\\n                  v-slot=\\\"slotProps\\\"\\n                >\\n                  <s-input\\n                    :placeholder=\\\"entityPropertyColumnNamePlaceholder\\\"\\n                    :model-value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                    :disabled=\\\"isTableOrExcelOrigin || isViewEntity\\\"\\n                    @change=\\\"slotProps.blurChange\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                    @keyup.enter.stop=\\\"$event.target.blur()\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n              <!-- 描述 -->\\n              <el-form-item label=\\\"描述\\\" prop=\\\"description\\\">\\n                <u-validator\\n                  v-slot=\\\"slotProps\\\"\\n                  :value=\\\"selectedItem.naslNode.description\\\"\\n                  rules=\\\"maxLength(63)\\\"\\n                  :class=\\\"$style.validator\\\"\\n                  @blur-valid=\\\"onBlurDescription(selectedItem, $event.value)\\\"\\n                  @blur-invalid=\\\"errorScrollIntoView\\\"\\n                  @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                >\\n                  <s-input\\n                    type=\\\"textarea\\\"\\n                    ref=\\\"descriptionEditor\\\"\\n                    placeholder=\\\"请输入描述\\\"\\n                    :model-value=\\\"selectedItem.naslNode.description\\\"\\n                    :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                    @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                    @keyup.enter=\\\"slotProps.blurFn()\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n            </el-form>\\n          </div>\\n        </div>\\n        <div :class=\\\"$style.advancedWrap\\\" v-if=\\\"showDatabasetype\\\">\\n          <el-form :disabled=\\\"isViewEntity\\\" label-width=\\\"80px\\\" gap=\\\"small\\\" class=\\\"s-data-attr-designer-form\\\">\\n            <skeleton-render\\n              name=\\\"views/data/components/entity-property-databasetype/index\\\"\\n              :property=\\\"selectedItem.naslNode\\\"\\n            />\\n          </el-form>\\n        </div>\\n      </template>\\n      <div :class=\\\"$style.bodywrap1\\\" v-show=\\\"errorMsgs.length || sourceSyncErrMsgs.length\\\">\\n        <div v-for=\\\"errorMsg in errorMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n        <!-- 实体在同步数据源时产生的错误信息 -->\\n        <div v-for=\\\"errorMsg in sourceSyncErrMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- 查询弹出框 -->\\n    <el-popover\\n      :visible=\\\"reflowPopoverVisible\\\"\\n      :virtual-ref=\\\"labelEditor\\\"\\n      :show-arrow=\\\"false\\\"\\n      placement=\\\"bottom-start\\\"\\n      :width=\\\"340\\\"\\n      virtual-triggering\\n    >\\n      <div class=\\\"reflowPopover\\\" v-loading=\\\"reflowPopoverLoading\\\">\\n        <div class=\\\"reflowPopoverEmpty\\\" v-if=\\\"fieldList.length === 0\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"centerFlex\\\" style=\\\"font-size: 28px; margin-bottom: 20px\\\"></s-others-icon>\\n          <span class=\\\"centerFlex\\\">暂无推荐字段</span>\\n        </div>\\n        <div v-else>\\n          <el-scrollbar height=\\\"250px\\\">\\n            <div\\n              class=\\\"reflowPopoverItem\\\"\\n              v-for=\\\"item in fieldList\\\"\\n              :key=\\\"item.id\\\"\\n              @mouseenter=\\\"activeItem = item\\\"\\n              @mouseleave=\\\"activeItem = null\\\"\\n            >\\n              <el-row :gutter=\\\"10\\\">\\n                <el-col :span=\\\"9\\\" class=\\\"sle\\\">\\n                  <el-tooltip :content=\\\"item.name\\\" placement=\\\"top\\\" :show-after=\\\"500\\\" :disabled=\\\"!isTextOverflow\\\">\\n                    <div\\n                      class=\\\"tooltip-trigger\\\"\\n                      v-html=\\\"getFieldName(item.name, item.matchedNames)\\\"\\n                      @mouseenter=\\\"checkOverflow\\\"\\n                    ></div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col class=\\\"sle\\\" :span=\\\"8\\\">\\n                  <el-tooltip\\n                    :content=\\\"getFieldTypeTitle(item)\\\"\\n                    placement=\\\"top\\\"\\n                    :show-after=\\\"500\\\"\\n                    :disabled=\\\"!isTextOverflow\\\"\\n                  >\\n                    <div class=\\\"tooltip-trigger\\\" @mouseenter=\\\"checkOverflow\\\">{{ getFieldTypeTitle(item) }}</div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col :span=\\\"4\\\">\\n                  {{ item.required ? '必填' : '非必填' }}\\n                </el-col>\\n                <el-col :span=\\\"3\\\" v-show=\\\"activeItem?.id === item.id\\\" style=\\\"color: #2383ff\\\">使用</el-col>\\n              </el-row>\\n            </div>\\n          </el-scrollbar>\\n        </div>\\n        <div style=\\\"height: 18px; margin-top: 10px\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"warningIcon\\\"></s-others-icon>\\n          <span>输入_，可进行词根匹配</span>\\n        </div>\\n      </div>\\n    </el-popover>\\n    <!-- 添加至备选数据库字段库弹窗 -->\\n    <el-dialog v-model=\\\"reflowDialogVisible\\\" title=\\\"一键添加到备选字段库\\\" width=\\\"50%\\\">\\n      <el-table\\n        ref=\\\"reflowTableRef\\\"\\n        :data=\\\"reflowFieldList\\\"\\n        @select=\\\"handleSelectReflowField\\\"\\n        @select-all=\\\"handleSelectReflowField\\\"\\n      >\\n        <el-table-column type=\\\"selection\\\" width=\\\"40\\\" />\\n        <el-table-column label=\\\"字段注释\\\" prop=\\\"label\\\" />\\n        <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" />\\n        <el-table-column label=\\\"数据类型\\\" prop=\\\"type\\\" />\\n        <el-table-column label=\\\"是否必填\\\" prop=\\\"required\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ scope.row.required ? '是' : '否' }}</span>\\n          </template>\\n        </el-table-column>\\n        <el-table-column label=\\\"字段长度\\\" prop=\\\"length\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ getReflowFieldLength(scope.row) }}</span>\\n          </template>\\n        </el-table-column>\\n      </el-table>\\n      <template #footer>\\n        <div class=\\\"reflowDialogFooter\\\">\\n          <el-button\\n            type=\\\"primary\\\"\\n            :disabled=\\\"reflowConfirmBtnDisabled\\\"\\n            :loading=\\\"confirmLoading\\\"\\n            @click=\\\"handleUploadReflowField\\\"\\n          >\\n            确 定\\n          </el-button>\\n          <el-button @click=\\\"reflowDialogVisible = false\\\">取 消</el-button>\\n        </div>\\n      </template>\\n    </el-dialog>\\n  </div>\\n</template>\\n\\n<script setup>\\n  import { inject, onMounted, ref, nextTick } from 'vue';\\n  import { ElMessage, ClickOutside as vClickOutside } from 'element-plus';\\n  import { requestApi, getIsReflowField, getFieldList, getReflowFieldList, uploadReflowField } from '../apis';\\n  import { debounce } from '../utils';\\n\\n  const props = defineProps({\\n    entity: Object,\\n  });\\n\\n  const handleAddItem = () => {\\n    addItem();\\n    nextTick(() => {\\n      onSetItemEdit(selectedItem.value, 'label', true);\\n    });\\n  };\\n\\n  const showReflowBtn = ref(false);\\n\\n  const reflowPopoverVisible = ref(false);\\n  const fieldList = ref([]);\\n  const reflowQuery = ref('');\\n  const abortController = ref(null);\\n  const requestId = ref(0); // 用于标识当前请求\\n\\n  const debounceQueryFieldList = debounce(() => {\\n    // 设置loading状态\\n    reflowPopoverLoading.value = true;\\n\\n    // 取消之前的请求\\n    if (abortController.value) {\\n      abortController.value.abort();\\n    }\\n\\n    // 创建新的 AbortController 和请求ID\\n    abortController.value = new AbortController();\\n    const currentRequestId = ++requestId.value;\\n\\n    getFieldList({ query: reflowQuery.value }, abortController.value.signal)\\n      .then(res => {\\n        // 只有当前请求是最新的才更新数据\\n        if (currentRequestId === requestId.value) {\\n          fieldList.value = res.result || [];\\n        }\\n      })\\n      .catch(err => {\\n        if (err.name !== 'AbortError') {\\n          console.error(err);\\n        }\\n      })\\n      .finally(() => {\\n        // 只有当前请求是最新的才更新加载状态\\n        if (currentRequestId === requestId.value) {\\n          abortController.value = null;\\n          reflowPopoverLoading.value = false;\\n        }\\n      });\\n  }, 400);\\n\\n  const reflowPopoverLoading = ref(false);\\n  const activeItem = ref(null);\\n\\n  const getFieldName = (name, matchedNames) => {\\n    if (!name || typeof name !== 'string') return '';\\n    if (!Array.isArray(matchedNames)) return `<span style=\\\"color: red; font-weight: bold;\\\">${name}</span>`;\\n\\n    const matchedSet = new Set(matchedNames.filter(item => item && typeof item === 'string'));\\n    const parts = name.split(/(_+)/);\\n\\n    return parts\\n      .map(part => {\\n        if (part.startsWith('_')) return part;\\n        return matchedSet.has(part) ? part : `<span style=\\\"color: red; font-weight: bold;\\\">${part}</span>`;\\n      })\\n      .join('');\\n  };\\n\\n  const getFieldTypeTitle = item => {\\n    if (item.type === 'String') {\\n      const stringLabel = getStringLabel(item.length);\\n      return item.type + (stringLabel ? `  (${stringLabel})` : '');\\n    }\\n    return item.type;\\n  };\\n\\n  const columnNameValidatorRef = ref(null);\\n\\n  const handleUseField = item => {\\n    const target = selectedItem.value?.naslNode;\\n    if (target?.concept === 'EntityProperty') {\\n      target.app.emit('collect:start', { actionMsg: '数据建模插件更新字段名' });\\n      const newName = target.parentNode?.getPropertyUniqueName?.(item.name) || item.name; // 保证字段名唯一\\n      const typeName = item.type === 'Integer' ? 'Long' : item.type;\\n      const updateData = {\\n        name: newName,\\n        columnName: newName,\\n        required: item.required,\\n        typeAnnotation: {\\n          concept: 'TypeAnnotation',\\n          typeKind: 'primitive',\\n          typeNamespace: 'nasl.core',\\n          typeName,\\n        },\\n      };\\n      if (item.type === 'String' && item.length) {\\n        const minRule = target.toJSON().rules.find(rule => rule.startsWith('minLength'));\\n        Object.assign(updateData, {\\n          databaseTypeAnnotation: {\\n            concept: 'DatabaseTypeAnnotation',\\n            typeName: 'varchar',\\n            arguments: {\\n              length: item.length,\\n            },\\n          },\\n          rules: [minRule, `maxLength(${item.length})`].filter(Boolean),\\n        });\\n      }\\n      target.update(updateData);\\n      setTimeout(() => {\\n        // 延迟收集，把外层onBlurLabel的change也收集到这次的batchInstruct中\\n        target.app.emit('collect:end');\\n      });\\n\\n      nextTick(async () => {\\n        try {\\n          const res = await columnNameValidatorRef.value?.validate();\\n        } catch (error) {\\n          // console.error(error);\\n          // 新设置的字段名不符合规则，主动聚焦到输入框\\n          onSetItemEdit(selectedItem.value, 'name', true);\\n        }\\n      });\\n    }\\n  };\\n\\n  const handleLabelFocus = label => {\\n    reflowQuery.value = label;\\n  };\\n\\n  const handleLabelBlur = async (event, slotProps, item) => {\\n    reflowPopoverVisible.value = false;\\n    reflowQuery.value = '';\\n    fieldList.value = [];\\n\\n    event = event.replace(/_/g, ''); // event 去除掉_\\n\\n    slotProps.blurFn(event); // 触发模版中原来的失焦逻辑\\n    if (activeItem.value) {\\n      handleUseField(activeItem.value);\\n      activeItem.value = null;\\n    }\\n  };\\n\\n  const handleLabelInput = (event, slotProps) => {\\n    reflowPopoverVisible.value = true;\\n    reflowQuery.value = event;\\n    slotProps.inputChange(event); // 触发模版中原有的修改逻辑\\n    // 外置设置防抖查询loading状态\\n    reflowPopoverLoading.value = true;\\n    debounceQueryFieldList();\\n  };\\n\\n  onMounted(() => {\\n    getIsReflowField({}).then(res => {\\n      showReflowBtn.value = res.result;\\n    });\\n  });\\n\\n  // 一键添加到备选字段库\\n  const reflowLoading = ref(false);\\n  const reflowFieldList = ref([]);\\n\\n  const addReflowField = () => {\\n    reflowLoading.value = true;\\n\\n    const filterList = ['id', 'createdTime', 'updatedTime', 'createdBy', 'updatedBy'];\\n    const filterRegex = /^property\\\\d+$|^.*[\\\\u4e00-\\\\u9fa5].*$/;\\n\\n    const properties = props.entity?.toJSON()?.properties || [];\\n    const tempReflowFieldList = [];\\n    const nameSet = new Set();\\n    properties.forEach(property => {\\n      if (\\n        !property.label ||\\n        filterList.includes(property.name) ||\\n        filterRegex.test(property.name) ||\\n        property.typeAnnotation?.typeKind !== 'primitive'\\n      ) {\\n        return;\\n      }\\n      let type = property.typeAnnotation?.typeName || 'String';\\n      if (type === 'Long') type = 'Integer'; // 整数类型需要重命名为Integer\\n      const propertyName = property.name.replace(/\\\\d+$/, '') || '';\\n      if (nameSet.has(propertyName)) {\\n        return;\\n      }\\n      nameSet.add(propertyName);\\n      tempReflowFieldList.push({\\n        name: propertyName,\\n        label: property.label || '',\\n        required: property.required || false,\\n        type,\\n        length: type === 'String' ? property.databaseTypeAnnotation?.arguments?.length || 255 : void 0,\\n      });\\n    });\\n    reflowFieldList.value = tempReflowFieldList;\\n    if (reflowFieldList.length === 0) {\\n      reflowLoading.value = false;\\n      showMessage();\\n      return;\\n    }\\n\\n    // 备选库不需要校验字段唯一性，直接打开弹窗\\n    requestApi(\\n      getReflowFieldList,\\n      {\\n        list: tempReflowFieldList.map(item => ({\\n          name: item.name,\\n          label: item.label,\\n        })),\\n      },\\n      res => {\\n        if (res.result?.length === 0) {\\n          showMessage();\\n          return;\\n        } else {\\n          // 只有在res.result中的name，在tempReflowFieldList中存在，才显示\\n          const set = new Set(res.result);\\n          reflowFieldList.value = tempReflowFieldList.filter(item => set.has(item.name));\\n          reflowDialogVisible.value = true;\\n          nextTick(() => {\\n            reflowConfirmBtnDisabled.value = false;\\n            reflowTableRef.value.toggleAllSelection();\\n          });\\n        }\\n      },\\n      err => {\\n        console.error(err);\\n      },\\n      () => {\\n        reflowLoading.value = false;\\n      }\\n    );\\n    // reflowDialogVisible.value = true;\\n    // reflowLoading.value = false;\\n    // nextTick(() => {\\n    //   reflowConfirmBtnDisabled.value = false;\\n    //   reflowTableRef.value.toggleAllSelection();\\n    // });\\n  };\\n\\n  // 显示[暂无可回流到备选数据库的字段]消息\\n  const showMessage = (type = 'warning', msg = '暂无可回流到备选数据库的字段') => {\\n    ElMessage.closeAll();\\n    ElMessage[type](msg);\\n  };\\n\\n  const reflowDialogVisible = ref(false);\\n  const reflowTableRef = ref(null);\\n\\n  const getStringLabel = length => {\\n    const map = {\\n      255: '短 255',\\n      4000: '中 4000',\\n      16777215: '长 16777215',\\n    };\\n    return map[length] || length;\\n  };\\n  const getReflowFieldLength = row => {\\n    return row.type === 'String' ? getStringLabel(row.length) : '-';\\n  };\\n\\n  const reflowConfirmBtnDisabled = ref(false);\\n  const isTextOverflow = ref(false);\\n\\n  // 检测文本是否溢出\\n  const checkOverflow = event => {\\n    const element = event.target;\\n    isTextOverflow.value = element.scrollWidth > element.clientWidth;\\n  };\\n  const handleSelectReflowField = (selection, row) => {\\n    reflowConfirmBtnDisabled.value = selection.length === 0;\\n  };\\n\\n  const confirmLoading = ref(false);\\n  const handleUploadReflowField = () => {\\n    confirmLoading.value = true;\\n    const selectedList = reflowTableRef.value.getSelectionRows();\\n    requestApi(\\n      uploadReflowField,\\n      {\\n        list: selectedList,\\n      },\\n      res => {\\n        if (res.result) {\\n          showMessage('success', '添加成功');\\n          reflowDialogVisible.value = false;\\n        } else {\\n          showMessage('error', res.msg || '添加失败');\\n        }\\n      },\\n      err => {\\n        // console.error(err);\\n        showMessage('error', err);\\n      },\\n      () => {\\n        confirmLoading.value = false;\\n      }\\n    );\\n  };\\n\\n  const {\\n    /**\\n     * 名称输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    nameEditor,\\n    /**\\n     * 标题输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    labelEditor,\\n    /**\\n     * 描述输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    descriptionEditor,\\n    /**\\n     * 表格节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    tableviewRef,\\n    /**\\n     * 数据库视图导入生成的实体\\n     * entity 的 origin 属性是否是 view\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isViewEntity,\\n    /**\\n     * 添加实体属性\\n     *\\n     * @function\\n     */\\n    addItem,\\n    /**\\n     * 生成移除按钮的提示\\n     *\\n     * @function\\n     * @return string\\n     */\\n    getRemoveTooltip,\\n    /**\\n     * 表格选中的行元素\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    selectedItem,\\n    /**\\n     * 是否是官方实体属性\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntityProperty,\\n    /**\\n     * 移除实体索引\\n     *\\n     * @function\\n     * @param item - 需要删除的行元素\\n     */\\n    removeItem,\\n    /**\\n     * 表格的渲染数据\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    renderList,\\n    /**\\n     * 上移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveUpItem,\\n    /**\\n     * 下移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveDownItem,\\n    /**\\n     * 表格高度\\n     *\\n     * @type {Vue.computed<number>}\\n     */\\n    tableHeight,\\n    /**\\n     * 设置表单列的样式\\n     *\\n     * @function\\n     */\\n    setRowClassName,\\n    /**\\n     * 右键选中表格行元素\\n     *\\n     * @function\\n     */\\n    onContextMenuRow,\\n    /**\\n     * 选中行元素时触发\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    onSelectRowWithDataType,\\n    /**\\n     * 拖拽调整表格列宽度\\n     *\\n     * @function\\n     * @param newWidth - 新宽度\\n     * @param oldWidth - 旧宽度\\n     * @param column - 列元素\\n     */\\n    handleDragend,\\n    /**\\n     * 是否禁止编辑行元素\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    getDisable,\\n    /**\\n     * 设置表格列元素编辑状态\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 属性名称\\n     * @param focus - 是否选中输入框\\n     */\\n    onSetItemEdit,\\n    /**\\n     * Tab 键跳转切换下一个属性\\n     *\\n     * @function\\n     * @param event - 原生键盘事件\\n     * @param item - 行元素\\n     * @param name - 属性名称\\n     */\\n    onKeyUp,\\n    /**\\n     * 名称输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的名称\\n     */\\n    onBlurName,\\n    /**\\n     * 验证不通过时滚动到错误元素\\n     */\\n    errorScrollIntoView,\\n    /**\\n     * 存在错误\\n     *\\n     * @type {Vue.ref<boolean>}\\n     */\\n    hasInvalid,\\n    /**\\n     * 显示输入框的提示\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    tooltipOpened,\\n    /**\\n     * 属性名，暂时存储属性名，用于输入框输入等操作\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    itemNameValue,\\n    /**\\n     * 输入框获取焦点时触发\\n     *\\n     * 1. 设置tooltipOpened的值\\n     * 2. 设置itemNameValue\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     */\\n    onFocusName,\\n    /**\\n     * 标题输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的标题\\n     */\\n    onBlurLabel,\\n    /**\\n     * 是否应用正在发布\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isAppDeploying,\\n    /**\\n     * 是否实体已经发布过并且是复合类型\\n     *\\n     * 1. 实体已经发布过，在app下的depEntities可以找到该实体\\n     * 2. 实体是复合类型：'Map', 'List'，或者typeKind是reference并且namespace是'entities', 'structures'\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isPublishedComplexType,\\n    /**\\n     * 数据类型的标题\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return string\\n     */\\n    showDatatype,\\n    /**\\n     * 双击编辑数据类型输入框\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - 原生事件\\n     */\\n    onDblClickDatatype,\\n    /**\\n     * 获取可选类型\\n     *\\n     * @function\\n     * @return 可选类型\\n     */\\n    getDataTypeList,\\n    /**\\n     * 失焦时取消当前行元素编辑状态\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    handleBlur,\\n    /**\\n     * 修改实体属性类型\\n     *\\n     * @function\\n     * @param event - event.value 实际使用数据\\n     */\\n    onChangeDatatype,\\n    /**\\n     * 是否属于官方实体\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntity,\\n    /**\\n     * 复合类型\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isComplexType,\\n    /**\\n     * 修改是否必填\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkbox 原生事件\\n     */\\n    requireInput,\\n    /**\\n     * 能否设置默认值\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    canSetDefaultValue,\\n    /**\\n     * 对应节点是否有错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    IsError,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inTable,\\n    /**\\n     * 全部勾选或者取消全部勾选\\n     *\\n     * @function\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    toggleSelectAll,\\n    /**\\n     * 设置显示属性\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    setDisplay,\\n    /**\\n     * 显示在筛选\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inFilter,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inForm,\\n    /**\\n     * 显示在详情\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inDetail,\\n    /**\\n     * ElementPlus 的 popper 配置\\n     */\\n    popperOptions,\\n    /**\\n     * 右键菜单选中项\\n     *\\n     * @type {Vue.ref<object>}\\n     */\\n    menuSelectedItem,\\n    /**\\n     * 项对应的右键菜单是否存在\\n     */\\n    popperExistMap,\\n    /**\\n     * 项对应的右键菜单是否显示\\n     */\\n    popperVisibleMap,\\n    /**\\n     * 右键菜单的触发节点\\n     */\\n    triggerRef,\\n    /**\\n     * 右键菜单的出现位置\\n     */\\n    placement,\\n    /**\\n     * 右键菜单隐藏时的处理函数\\n     */\\n    onMenuPopperHide,\\n    /**\\n     * 菜单点击时\\n     */\\n    onMenuClick,\\n    /**\\n     * 菜单-查找引用\\n     *\\n     * @function\\n     */\\n    onMenuFindUsage,\\n    /**\\n     * 菜单-删除\\n     *\\n     * @function\\n     */\\n    onMenuDelete,\\n    /**\\n     * 实体属性数据类型\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    typeName,\\n    /**\\n     * 小数位数的校验错误信息\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    scaleErrorMsg,\\n    /**\\n     * 属性的响应式数据\\n     *\\n     * @type {Vue.reactive<object>}\\n     * @property scale - 小数位数\\n     */\\n    model,\\n    /**\\n     * 小数位数的范围\\n     *\\n     * @type {Vue.computed<object>}\\n     * @property min - 最小值\\n     * @property max - 最大值\\n     */\\n    scaleOption,\\n    /**\\n     * 是否禁用小数位数\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return boolean\\n     */\\n    decimalDisabled,\\n    /**\\n     * 修改小数位数\\n     *\\n     * @function\\n     */\\n    setScale,\\n    /**\\n     * 关联属性\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    entityReference,\\n    /**\\n     * 类型列表\\n     *\\n     * @type {Vue.ref<array>}\\n     */\\n    dataTypeList,\\n    /**\\n     * 关联实体存在错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    isReleationEntityError,\\n    /**\\n     * 设置关联属性\\n     *\\n     * @function\\n     * @param event - event.value 表示实际数据\\n     */\\n    onSaveReference,\\n    /**\\n     * 清除关联属性\\n     *\\n     * @function\\n     */\\n    onClearReference,\\n    /**\\n     * 设置关联属性实体记录删除规则\\n     *\\n     * @function\\n     * @param event - 选中事件对象\\n     */\\n    setDeleteRule,\\n    /**\\n     * 设置错误信息\\n     *\\n     * @function\\n     * @param errorMsgs - 错误信息\\n     */\\n    changeErrorMsgs,\\n    /**\\n     * 是否来源于数据库表/excel\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isTableOrExcelOrigin,\\n    /**\\n     * 描述输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的描述\\n     */\\n    onBlurDescription,\\n    /**\\n     * 是否显示数据库高级设置\\n     *\\n     * 1.没有设置数据源\\n     * 2.实体是excel导入或者数据源反向导入\\n     * 3.权限实体（贤宇说一直是以LCAP开头来判断的）\\n     * 这3种情况不显示数据库设置\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    showDatabasetype,\\n    /**\\n     * 实体在同步数据源时产生的错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    sourceSyncErrMsgs,\\n    /**\\n     * 错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    errorMsgs,\\n    /**\\n     * 数据库列名校验规则\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    entityPropertyColumnNameRules,\\n    /**\\n     * 数据库列名输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyColumnNamePlaceholder,\\n    /**\\n     * 生成名称校验规则\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return 名称校验规则\\n     */\\n    getEntityPropertyRules,\\n    /**\\n     * 名称输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyPlaceholder,\\n    /**\\n     * 设置选中行的数据类型\\n     *\\n     * @function\\n     * @param value - 数据类型\\n     */\\n    setDataType,\\n  } = inject('$context');\\n</script>\\n\\n<style module=\\\"$propertyDesigner\\\">\\n  .errorMsg {\\n    color: var(--designer-font-second-color);\\n    margin: 0 46px;\\n  }\\n\\n  .errorMsg + .errorMsg {\\n    margin-top: 10px;\\n  }\\n\\n  .infoicon {\\n    display: inline-block;\\n    height: 12px;\\n    width: 12px;\\n    background: var(--assets-warning-info-svg) no-repeat;\\n    background-size: 100% 100%;\\n    vertical-align: -1px;\\n    margin-right: 5px;\\n  }\\n</style>\\n\\n<style module>\\n  div.table [class^='u-input__']:focus,\\n  div.table [class^='u-input__'][focus],\\n  div.table [class^='u-input__']:hover,\\n  div.table [class^='u-select__']:focus,\\n  div.table [class^='u-select__'][focus],\\n  div.table [class^='u-select__'][opened],\\n  div.table [class^='u-select__']:hover {\\n    border-color: var(--entity-designer-table-input-focus-border-color);\\n    box-shadow: var(--entity-designer-table-input-focus-box-shadow);\\n  }\\n\\n  .head {\\n    margin: 16px;\\n    padding: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n  }\\n\\n  div.head [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  .body {\\n    margin: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n    overflow: hidden;\\n  }\\n\\n  .entityListIcon {\\n    width: 16px;\\n    height: 16px;\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .edit {\\n    display: inline-block;\\n    width: 100%;\\n    line-height: 38px;\\n  }\\n\\n  .edit:hover {\\n    cursor: pointer;\\n  }\\n\\n  .edit:focus {\\n    outline: none;\\n  }\\n\\n  .edit .text > span {\\n    color: var(--entity-designer-table-color);\\n  }\\n\\n  .edit .text {\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .editwrap {\\n    margin-left: -9px;\\n  }\\n\\n  .editwrap [class^='s-datatype-select__'] {\\n    vertical-align: middle;\\n  }\\n\\n  .text {\\n    width: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n  }\\n\\n  .textContent {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n    max-width: calc(100% - 28px);\\n    margin-right: 8px;\\n  }\\n  .textContent:empty {\\n    display: none;\\n  }\\n\\n  .text > span {\\n    display: inline-block;\\n    color: var(--entity-designer-table-disabled-color);\\n    vertical-align: middle;\\n  }\\n\\n  .validator {\\n    width: 100%;\\n  }\\n\\n  .btnnav {\\n    border-bottom: 1px solid var(--entity-designer-border-color);\\n    border-top: 1px solid var(--entity-designer-border-color);\\n    padding: 5px 24px;\\n  }\\n\\n  div.btnnav[direction='horizontal'][gap='small'] > :not(:last-child) {\\n    margin-right: 8px;\\n  }\\n\\n  .btnnav1 {\\n    border-top: none;\\n    background-color: var(--entity-designer-btnnav-background);\\n  }\\n\\n  .bodywrap {\\n    padding: 16px 24px 0;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    margin-bottom: 24px;\\n  }\\n\\n  div.bodywrap [class^='u-grid-layout_column__'] {\\n    padding-bottom: 0;\\n  }\\n\\n  .bodywrap1 {\\n    padding: 16px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .advancedWrap {\\n    padding: 10px 24px 25px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .entityfrom [class^='u-form_item_label__'] {\\n    width: 36px !important;\\n  }\\n\\n  div.input {\\n    width: 100%;\\n    margin-right: 12px;\\n  }\\n\\n  .iconBase {\\n    display: inline-block;\\n    width: 20px;\\n    height: 38px;\\n    line-height: 38px;\\n    text-align: center;\\n    font-size: var(--font-size-large);\\n    font-size: 14px;\\n  }\\n\\n  .iconKey {\\n    color: var(--designer-table-edit-icon-key-color);\\n  }\\n\\n  .iconLink {\\n    color: var(--designer-table-edit-icon-link-color);\\n  }\\n\\n  .iconEdit {\\n    color: var(--color-base);\\n    opacity: 0;\\n  }\\n\\n  .iconLink2 {\\n    display: inline-block;\\n    width: 16px;\\n    height: 16px;\\n    line-height: 16px;\\n    font-size: var(--font-size-huge);\\n    color: var(--brand-primary);\\n    cursor: pointer;\\n    position: relative;\\n    top: 2px;\\n    left: 4px;\\n  }\\n\\n  .edit:hover .iconEdit {\\n    opacity: 0.6;\\n    cursor: pointer;\\n  }\\n\\n  .edit:hover .iconEdit:hover {\\n    opacity: 1;\\n  }\\n\\n  .icon {\\n    width: 14px;\\n    height: 14px;\\n    display: inline-block;\\n    vertical-align: middle;\\n    background-repeat: no-repeat;\\n  }\\n\\n  div.normalfrom [class^='u-form_item_label__'] {\\n    width: 60px !important;\\n  }\\n\\n  div.normalfrom > div {\\n    margin-bottom: 16px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'],\\n  div.normalfrom [class^='u-select__'],\\n  div.normalfrom [class^='u-form_item_field__'],\\n  div.normalfrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom [class^='u-form_item_label__'] {\\n    width: 94px !important;\\n  }\\n\\n  div.reffrom [class^='u-input__'],\\n  div.reffrom [class^='u-tree-select__'],\\n  div.reffrom [class^='u-select__'],\\n  div.reffrom [class^='u-form_item_field__'],\\n  div.reffrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.reffrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom .text {\\n    opacity: 0.3;\\n  }\\n\\n  div.reffrom [class^='u-form_item_extra__'] {\\n    width: 12px;\\n  }\\n\\n  .flexgrid {\\n    display: flex;\\n  }\\n\\n  .gridcolumn {\\n    width: auto;\\n  }\\n\\n  .gridcolumn:not(:last-child) {\\n    margin-right: 24px;\\n  }\\n\\n  div.fixedwidthinput,\\n  div.textarea {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  .icondivider {\\n    color: var(--entity-designer-border-color);\\n  }\\n\\n  .advanced {\\n    padding-top: 10px;\\n  }\\n\\n  .scaleErrorMsg {\\n    position: absolute;\\n    color: rgb(242, 73, 87);\\n  }\\n  .typeError {\\n    border-radius: 4px;\\n    border: 1px solid var(--input-border-color-error);\\n  }\\n  .checkbox [class='el-checkbox__label'] {\\n    line-height: 23px;\\n    font-size: 12px;\\n    text-overflow: ellipsis;\\n    text-align: left;\\n    font-weight: 600;\\n    color: var(--el-table-header-text-color);\\n  }\\n  .checkbolabel [class='el-checkbox__label'] {\\n    line-height: 23px !important;\\n    font-size: 12px !important;\\n    text-overflow: ellipsis !important;\\n    text-align: left !important;\\n    font-weight: 600 !important;\\n    color: var(--el-table-header-text-color) !important;\\n  }\\n  .checkbox {\\n    height: 23px;\\n    line-height: 23px;\\n  }\\n</style>\\n<style module=\\\"$contextmenu\\\">\\n  .menu {\\n    margin-top: 0 !important;\\n  }\\n\\n  .menu .group [class^='el-menu-item-group__title'] {\\n    --el-menu-text-color: var(--el-menu-top-title-text-color);\\n    height: 32px;\\n    font-weight: bold;\\n    border-bottom: 1px solid var(--line-color-regular);\\n    background: var(--fill-color-thead);\\n    color: var(--el-menu-text-color);\\n    cursor: auto;\\n  }\\n</style>\\n\\n<style scoped>\\n  .tableCell :deep(.cell) {\\n    padding: 0;\\n    line-height: 20px;\\n    padding-left: 6px;\\n  }\\n  .theadLable {\\n    overflow: visible;\\n    width: 100%;\\n    padding-left: 6px;\\n    border-right: 1px solid var(--entity-designer-property-dragger-border-color);\\n  }\\n  .topIconGroup {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-start;\\n    gap: 8px;\\n    background-color: var(--entity-designer-icon-group-background-color);\\n    padding: 5px 24px;\\n    border-bottom: 1px solid var(--entity-designer-icon-group-border-color);\\n    position: sticky;\\n    z-index: 9;\\n    top: 64px;\\n  }\\n\\n  .icon {\\n    margin-right: 8px;\\n  }\\n\\n  .extraForm :deep(.el-form-item__label) {\\n    font-size: 12px;\\n  }\\n\\n  :deep(.row-style) {\\n    border: 1px solid #4d87fe;\\n  }\\n\\n  :deep(.cell-style) {\\n    border-bottom: 1px solid #409eff;\\n  }\\n\\n  .elFormFlex {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center;\\n    flex-wrap: wrap;\\n  }\\n</style>\\n\\n<style scoped>\\n  .reflowPopover {\\n    width: 340px;\\n    padding: 8px;\\n  }\\n\\n  .reflowPopoverEmpty {\\n    padding: 20px 0 30px;\\n  }\\n\\n  .reflowPopoverItem {\\n    height: 48px;\\n    line-height: 48px;\\n    padding: 0 12px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    &:hover {\\n      background-color: #edf2f9;\\n    }\\n  }\\n\\n  .warningIcon {\\n    margin-right: 4px;\\n  }\\n\\n  .reflowDialogFooter {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 居中对齐flex布局 */\\n  .centerFlex {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 单行文本溢出省略号 */\\n  .sle,\\n  [sle] {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n\\n  /* tooltip触发器样式 */\\n  .tooltip-trigger {\\n    width: 100%;\\n    height: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.reflowPopover[data-v-4dd96507] {\n    width: 340px;\n    padding: 8px;\n}\n.reflowPopoverEmpty[data-v-4dd96507] {\n    padding: 20px 0 30px;\n}\n.reflowPopoverItem {\n&[data-v-4dd96507] {\n    height: 48px;\n    line-height: 48px;\n    padding: 0 12px;\n    border-radius: 4px;\n    cursor: pointer;\n    }\n&[data-v-4dd96507]:hover {\n      background-color: #edf2f9;\n}\n}\n.warningIcon[data-v-4dd96507] {\n    margin-right: 4px;\n}\n.reflowDialogFooter[data-v-4dd96507] {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n  /* 居中对齐flex布局 */\n.centerFlex[data-v-4dd96507] {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n  /* 单行文本溢出省略号 */\n.sle[data-v-4dd96507],\n  [sle][data-v-4dd96507] {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n  /* tooltip触发器样式 */\n.tooltip-trigger[data-v-4dd96507] {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/EntityPropertyDesigner.vue\",\"<no source>\"],\"names\":[],\"mappings\":\";AAu7DE;IACE,YAAY;IACZ,YAAY;AACd;AAEA;IACE,oBAAoB;AACtB;AAEA;ACh8DF;IDi8DI,YAAY;IACZ,iBAAiB;IACjB,eAAe;IACf,kBAAkB;IAClB,eAAA;IAt7DA;AAu7DA;MACE,yBAAyB;AAC3B;AACF;AAEA;IACE,iBAAiB;AACnB;AAEA;IACE,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACrB;;EAEA,eAAe;AACf;IACE,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACrB;;EAEA,cAAc;AACd;;IAEE,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;AACrB;;EAEA,iBAAiB;AACjB;IACE,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;AACrB\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div\\n      v-if=\\\"!isViewEntity\\\"\\n      class=\\\"topIconGroup\\\"\\n      :class=\\\"$style.body\\\"\\n      style=\\\"margin-top: 0px; margin-bottom: 0px; border-bottom: 0px; height: 40px\\\"\\n    >\\n      <!-- 添加实体属性 -->\\n      <s-others-icon name=\\\"add\\\" tooltip=\\\"添加属性\\\" button @click=\\\"handleAddItem\\\"></s-others-icon>\\n      <!-- 删除实体属性 -->\\n      <s-others-icon\\n        name=\\\"remove\\\"\\n        button\\n        :tooltip=\\\"getRemoveTooltip()\\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          selectedItem.naslNode.primaryKey ||\\n          isOfficalEntityProperty(selectedItem)\\n        \\\"\\n        @click=\\\"removeItem(selectedItem)\\\"\\n      ></s-others-icon>\\n      <div :class=\\\"$style.icondivider\\\">|</div>\\n      <!-- 上移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-up\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置顶'\\n            : '上移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveUpItem\\\"\\n      ></s-others-icon>\\n      <!-- 下移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-down\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置底'\\n            : '下移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveDownItem\\\"\\n      ></s-others-icon>\\n      <!-- 一键添加到备选字段库 -->\\n      <el-button v-if=\\\"showReflowBtn\\\" :loading=\\\"reflowLoading\\\" @click=\\\"addReflowField\\\">一键添加到备选字段库</el-button>\\n    </div>\\n    <div :class=\\\"$style.body\\\" style=\\\"margin-top: 0px\\\">\\n      <div :class=\\\"$style.bodywrap\\\" class=\\\"tableCell\\\">\\n        <el-table\\n          ref=\\\"tableviewRef\\\"\\n          :data=\\\"renderList\\\"\\n          highlight-current-row\\n          :style=\\\"`min-width:950px;${tableHeight}`\\\"\\n          style=\\\"width: 100%\\\"\\n          :class=\\\"\\n            renderList.length > 8\\n              ? [$style.table, $style.tablescroll, 's-data-table-edit']\\n              : [$style.table, 's-data-table-edit']\\n          \\\"\\n          :value=\\\"selectedItem && selectedItem.naslNode.name\\\"\\n          value-field=\\\"name\\\"\\n          :header-row-style=\\\"{ height: '40px' }\\\"\\n          :cell-style=\\\"{ padding: '0px' }\\\"\\n          :row-style=\\\"{ height: '42px' }\\\"\\n          :row-class-name=\\\"setRowClassName\\\"\\n          empty-text=\\\"暂无数据\\\"\\n          @row-contextmenu=\\\"onContextMenuRow\\\"\\n          @row-click=\\\"onSelectRowWithDataType\\\"\\n          @header-dragend=\\\"handleDragend\\\"\\n          @click.right.prevent\\n          :border=\\\"true\\\"\\n        >\\n          <!-- 主键/关联属性的icon -->\\n          <el-table-column width=\\\"38\\\" prop=\\\"primaryKey\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.primaryKey\\\"\\n                  name=\\\"key\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconKey]\\\"\\n                ></s-others-icon>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.relationProperty\\\"\\n                  name=\\\"link\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconLink]\\\"\\n                ></s-others-icon>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 标题 -->\\n          <el-table-column prop=\\\"label\\\" min-width=\\\"107\\\" label=\\\"字段注释\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段注释</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!item.loading && !item.naslNode.parentNode.loading && !isViewEntity\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'label'\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                  tabindex=\\\"0\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'label')\\\"\\n                  :title=\\\"item.naslNode.label\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.label }}</span>\\n                    <s-others-icon\\n                      v-show=\\\"!isOfficalEntityProperty(item)\\\"\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    ref=\\\"labelValidatorRef\\\"\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.label\\\"\\n                    rules=\\\"maxLength(63)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurLabel(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <s-input\\n                      placeholder=\\\"请输入标题\\\"\\n                      :model-value=\\\"item.naslNode.label\\\"\\n                      ref=\\\"labelEditor\\\"\\n                      :class=\\\"$style.input\\\"\\n                      @focus=\\\"handleLabelFocus(item.naslNode.label)\\\"\\n                      @blur:value=\\\"handleLabelBlur($event, slotProps, item)\\\"\\n                      @input=\\\"handleLabelInput($event, slotProps)\\\"\\n                      @keyup.enter=\\\"$event.target.blur()\\\"\\n                    ></s-input>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <!-- 之前仅仅为 item.label 但是实际上在item 对象中没有label属性，恐在特殊情况下存在，故范围限制为 区分 viewEntity -->\\n                <span>{{ isViewEntity ? item.naslNode.label : item.label }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 名称 -->\\n          <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" min-width=\\\"87\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段名</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!getDisable(item)\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'name'\\\"\\n                  tabindex=\\\"0\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  :title=\\\"item.naslNode.name\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'name')\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.name }}</span>\\n                    <s-others-icon\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.name\\\"\\n                    :rules=\\\"getEntityPropertyRules(item.naslNode)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurName(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <!-- “属性名”为空是显示提示信息 -->\\n                    <el-tooltip\\n                      :visible=\\\"tooltipOpened === 'entityAttribute' && !itemNameValue\\\"\\n                      placement=\\\"top-start\\\"\\n                      content=\\\"属性为英文字母、数字和下划线，且首字母小写\\\"\\n                    >\\n                      <s-input\\n                        :placeholder=\\\"entityPropertyPlaceholder\\\"\\n                        :model-value=\\\"item.naslNode.name\\\"\\n                        ref=\\\"nameEditor\\\"\\n                        :class=\\\"$style.input\\\"\\n                        @focus=\\\"onFocusName(item)\\\"\\n                        @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                        @input=\\\"slotProps.inputChange($event)\\\"\\n                        @keyup.enter=\\\"$event.target.blur()\\\"\\n                        @update:modelValue=\\\"itemNameValue = $event\\\"\\n                      ></s-input>\\n                    </el-tooltip>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <span>{{ item.naslNode.name }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 数据类型 -->\\n          <el-table-column label=\\\"数据类型\\\" min-width=\\\"247\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">数据类型</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <el-tooltip v-if=\\\"isAppDeploying\\\" content=\\\"应用发布中，暂不能修改\\\" placement=\\\"bottom-start\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </el-tooltip>\\n                <!-- 禁用状态 / 已经发布过的复合类型 -->\\n                <template v-else-if=\\\"getDisable(item) || isPublishedComplexType(item)\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </template>\\n                <!-- 非禁用状态 -->\\n                <template v-else>\\n                  <!-- 展示态 -->\\n                  <div\\n                    v-if=\\\"item.edit !== 'datatype'\\\"\\n                    tabindex=\\\"0\\\"\\n                    :class=\\\"$style.edit\\\"\\n                    :ref=\\\"`datatype${item.naslNode.id}`\\\"\\n                    :title=\\\"showDatatype(item)\\\"\\n                    @dblclick=\\\"onDblClickDatatype(item, $event)\\\"\\n                    @keyup=\\\"onKeyUp($event, item, 'datatype')\\\"\\n                  >\\n                    <div :class=\\\"$style.text\\\">\\n                      <span :class=\\\"$style.textContent\\\">{{ showDatatype(item) }}</span>\\n                      <s-others-icon\\n                        name=\\\"edit\\\"\\n                        :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                        @click=\\\"(getDataTypeList(), onSetItemEdit(item, 'datatype', false))\\\"\\n                      ></s-others-icon>\\n                    </div>\\n                  </div>\\n                  <!-- 编辑态 -->\\n                  <div v-else :class=\\\"$style.editwrap\\\">\\n                    <el-tooltip :content=\\\"`${isAppDeploying ? '应用发布中，暂不能修改' : ''}`\\\" placement=\\\"bottom-start\\\">\\n                      <s-datatype-select\\n                        :unionable=\\\"false\\\"\\n                        :no-union-subtype=\\\"true\\\"\\n                        :data-type-list=\\\"item.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                        :last-version=\\\"item.naslNode.lastVersion\\\"\\n                        :type-annotation=\\\"item.naslNode.typeAnnotation\\\"\\n                        :concept=\\\"item.naslNode.entity.concept\\\"\\n                        :show-system-types=\\\"false\\\"\\n                        :show-generic-types=\\\"true\\\"\\n                        :show-entity=\\\"true\\\"\\n                        :show-structures=\\\"true\\\"\\n                        :emptyable=\\\"false\\\"\\n                        :hasAnonymousStructure=\\\"true\\\"\\n                        :disabled=\\\"item.naslNode.readonly || isAppDeploying || isPublishedComplexType(item)\\\"\\n                        @blur=\\\"handleBlur(item)\\\"\\n                        @change=\\\"onChangeDatatype\\\"\\n                      ></s-datatype-select>\\n                    </el-tooltip>\\n                  </div>\\n                </template>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 是否必填 -->\\n          <el-table-column label=\\\"是否必填\\\" width=\\\"70\\\" prop=\\\"required\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else style=\\\"margin-left: 16px\\\">\\n                <el-checkbox\\n                  v-model=\\\"item.naslNode.required\\\"\\n                  :disabled=\\\"getDisable(item) || isComplexType(item) || isOfficalEntity(item)\\\"\\n                  :tabindex=\\\"item.editable === false || item.loading || item.naslNode.parentNode.loading ? -1 : 0\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"requireInput(item, $event)\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 默认值 -->\\n          <el-table-column label=\\\"默认值\\\" prop=\\\"defaultValue\\\" width=\\\"120\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item }\\\">\\n              <div v-if=\\\"['createdTime', 'updatedTime'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>自动生成</span>\\n              </div>\\n              <div v-else-if=\\\"['createdBy', 'updatedBy'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>（无）</span>\\n              </div>\\n              <template v-else-if=\\\"!canSetDefaultValue(item)\\\">\\n                <div :class=\\\"$style.text\\\">\\n                  <span>（无）</span>\\n                </div>\\n              </template>\\n              <template\\n                v-else-if=\\\"\\n                  item.loading || item.naslNode.parentNode.loading || item.naslNode.generationRule !== 'manual'\\n                \\\"\\n              >\\n                <div :class=\\\"$style.text\\\">\\n                  <div :class=\\\"$style.text\\\" v-if=\\\"item.naslNode.generationRule === 'auto'\\\">\\n                    <span>自动生成</span>\\n                  </div>\\n                  <span v-else>{{ item.naslNode.defaultValue }}</span>\\n                </div>\\n              </template>\\n              <template v-else>\\n                <s-attr-input\\n                  title=\\\"默认值绑定\\\"\\n                  node-concept=\\\"defaultValue\\\"\\n                  :name=\\\"item.naslNode.name\\\"\\n                  :parent-node=\\\"item.naslNode\\\"\\n                  :node=\\\"item.naslNode.defaultValue\\\"\\n                  :class=\\\"{\\n                    [$style.typeError]: IsError(item.naslNode),\\n                  }\\\"\\n                ></s-attr-input>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表格 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inTable\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表格\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inTable\\\"\\n                @change=\\\"toggleSelectAll($event, 'inTable')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inTable\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inTable')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在筛选 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inFilter\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在筛选\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inFilter\\\"\\n                @change=\\\"toggleSelectAll($event, 'inFilter')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inFilter\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inFilter')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表单 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inForm\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表单\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inForm\\\"\\n                @change=\\\"toggleSelectAll($event, 'inForm')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inForm\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inForm')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在详情 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inDetail\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在详情\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inDetail\\\"\\n                @change=\\\"toggleSelectAll($event, 'inDetail')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inDetail\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inDetail')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n        </el-table>\\n        <!-- 右键点击 -->\\n        <el-popover\\n          :disabled-scroll=\\\"true\\\"\\n          trigger=\\\"click\\\"\\n          ref=\\\"menuPopper\\\"\\n          :popper-options=\\\"popperOptions\\\"\\n          v-if=\\\"menuSelectedItem && popperExistMap[menuSelectedItem.id]\\\"\\n          v-model:visible=\\\"popperVisibleMap[menuSelectedItem && menuSelectedItem.id]\\\"\\n          :virtual-ref=\\\"triggerRef\\\"\\n          :placement=\\\"placement\\\"\\n          :show-arrow=\\\"false\\\"\\n          @hide=\\\"onMenuPopperHide\\\"\\n        >\\n          <el-menu :class=\\\"$contextmenu.menu\\\" @click=\\\"onMenuClick\\\">\\n            <el-menu-item-group :class=\\\"$contextmenu.group\\\" title=\\\"属性\\\">\\n              <el-menu-item :class=\\\"$contextmenu.item\\\" @click=\\\"onMenuFindUsage\\\">查找引用</el-menu-item>\\n              <el-menu-item\\n                :class=\\\"$contextmenu.item\\\"\\n                @click=\\\"onMenuDelete(removeItem)\\\"\\n                :disabled=\\\"\\n                  (menuSelectedItem && menuSelectedItem.primaryKey) ||\\n                  isOfficalEntityProperty({\\n                    naslNode: menuSelectedItem,\\n                  }) ||\\n                  isViewEntity\\n                \\\"\\n              >\\n                删除\\n              </el-menu-item>\\n            </el-menu-item-group>\\n          </el-menu>\\n        </el-popover>\\n      </div>\\n      <template v-if=\\\"selectedItem\\\">\\n        <div :class=\\\"[$style.flexgrid, $style.bodywrap1]\\\">\\n          <div :class=\\\"$style.gridcolumn\\\" class=\\\"extraForm\\\">\\n            <el-form\\n              ref=\\\"selectedItemForm\\\"\\n              :model=\\\"selectedItem\\\"\\n              :class=\\\"[$style.reffrom, $style.blockFromLayout, 's-data-attr-designer-form']\\\"\\n              label-width=\\\"85px\\\"\\n              label-position=\\\"right\\\"\\n              :inline=\\\"true\\\"\\n            >\\n              <!-- 最 大/小 值/长度 -->\\n              <skeleton-render\\n                name=\\\"views/data/components/entity-field-rules/index\\\"\\n                :property=\\\"selectedItem.naslNode\\\"\\n                :key=\\\"'rules_' + selectedItem.naslNode.name\\\"\\n                :disabled=\\\"\\n                  selectedItem.loading ||\\n                  selectedItem.naslNode.parentNode.loading ||\\n                  selectedItem.naslNode.editable === false ||\\n                  isViewEntity\\n                \\\"\\n                :is-view-entity=\\\"isViewEntity\\\"\\n                direction=\\\"horizontal\\\"\\n                :class=\\\"$style.rules\\\"\\n              />\\n              <!-- 小数位数 -->\\n              <el-form-item v-if=\\\"typeName === 'Decimal'\\\" label=\\\"小数位数\\\">\\n                <el-input-number\\n                  placeholder=\\\"请输入小数位数\\\"\\n                  :color=\\\"scaleErrorMsg ? 'error' : ''\\\"\\n                  v-model=\\\"model.scale\\\"\\n                  :min=\\\"scaleOption.min\\\"\\n                  :max=\\\"scaleOption.max\\\"\\n                  controls-position=\\\"right\\\"\\n                  :disabled=\\\"decimalDisabled(selectedItem) || isViewEntity\\\"\\n                  :value-on-clear=\\\"0\\\"\\n                  @keyup.enter=\\\"$event.target.blur()\\\"\\n                  @change=\\\"setScale\\\"\\n                ></el-input-number>\\n                <div v-if=\\\"scaleErrorMsg\\\" :class=\\\"$style.scaleErrorMsg\\\">\\n                  <s-others-icon name=\\\"solid-hint\\\"></s-others-icon>\\n                  {{ scaleErrorMsg }}\\n                </div>\\n              </el-form-item>\\n              <!-- 关联属性 -->\\n              <el-form-item :key=\\\"selectedItem.naslNode.name\\\">\\n                <template #label>\\n                  <div style=\\\"display: flex; align-items: center\\\">\\n                    关联属性\\n                    <s-others-icon name=\\\"link2\\\" :class=\\\"$style.iconLink2\\\"></s-others-icon>\\n                  </div>\\n                </template>\\n                <skeleton-render\\n                  name=\\\"views/data/entity-reference/index\\\"\\n                  :entity=\\\"entity\\\"\\n                  :property=\\\"selectedItem.naslNode\\\"\\n                  :value=\\\"entityReference\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  :data-type-list=\\\"selectedItem.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                  :error=\\\"isReleationEntityError(selectedItem.naslNode)\\\"\\n                  @save=\\\"onSaveReference\\\"\\n                  @clear=\\\"onClearReference\\\"\\n                />\\n              </el-form-item>\\n              <!-- 属性记录 -->\\n              <el-form-item\\n                label=\\\"关联属性实体记录删除规则\\\"\\n                v-if=\\\"selectedItem.naslNode.relationProperty\\\"\\n                layout=\\\"block\\\"\\n                class=\\\"relationDelRule\\\"\\n              >\\n                <el-select\\n                  style=\\\"width: 240px\\\"\\n                  v-model=\\\"selectedItem.naslNode.deleteRule\\\"\\n                  placeholder=\\\"请选择\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  @change=\\\"setDeleteRule\\\"\\n                >\\n                  <el-option label=\\\"不允许删除\\\" value=\\\"protect\\\"></el-option>\\n                  <el-option label=\\\"允许删除且同时删除本实体记录\\\" value=\\\"cascade\\\"></el-option>\\n                </el-select>\\n              </el-form-item>\\n              <!-- 主键生成规则 -->\\n              <el-form-item v-if=\\\"selectedItem.naslNode.primaryKey\\\" label=\\\"主键生成规则\\\" placement=\\\"bottom\\\">\\n                <skeleton-render\\n                  name=\\\"views/data/components/entity-primarykey-rules/index\\\"\\n                  :disabled=\\\"isViewEntity\\\"\\n                  :entity=\\\"entity\\\"\\n                  :selected-item=\\\"selectedItem.naslNode\\\"\\n                  @changeErrorMsgs=\\\"changeErrorMsgs\\\"\\n                />\\n              </el-form-item>\\n              <!-- 数据库列名 -->\\n              <el-form-item label=\\\"数据库列名\\\" placement=\\\"bottom\\\">\\n                <u-validator\\n                  ref=\\\"columnNameValidatorRef\\\"\\n                  style=\\\"width: 100%\\\"\\n                  :rules=\\\"entityPropertyColumnNameRules\\\"\\n                  :value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                  @blur-dirty-valid=\\\"selectedItem.naslNode.setColumnName($event.value)\\\"\\n                  v-slot=\\\"slotProps\\\"\\n                >\\n                  <s-input\\n                    :placeholder=\\\"entityPropertyColumnNamePlaceholder\\\"\\n                    :model-value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                    :disabled=\\\"isTableOrExcelOrigin || isViewEntity\\\"\\n                    @change=\\\"slotProps.blurChange\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                    @keyup.enter.stop=\\\"$event.target.blur()\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n              <!-- 描述 -->\\n              <el-form-item label=\\\"描述\\\" prop=\\\"description\\\">\\n                <u-validator\\n                  v-slot=\\\"slotProps\\\"\\n                  :value=\\\"selectedItem.naslNode.description\\\"\\n                  rules=\\\"maxLength(63)\\\"\\n                  :class=\\\"$style.validator\\\"\\n                  @blur-valid=\\\"onBlurDescription(selectedItem, $event.value)\\\"\\n                  @blur-invalid=\\\"errorScrollIntoView\\\"\\n                  @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                >\\n                  <s-input\\n                    type=\\\"textarea\\\"\\n                    ref=\\\"descriptionEditor\\\"\\n                    placeholder=\\\"请输入描述\\\"\\n                    :model-value=\\\"selectedItem.naslNode.description\\\"\\n                    :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                    @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                    @keyup.enter=\\\"slotProps.blurFn()\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n            </el-form>\\n          </div>\\n        </div>\\n        <div :class=\\\"$style.advancedWrap\\\" v-if=\\\"showDatabasetype\\\">\\n          <el-form :disabled=\\\"isViewEntity\\\" label-width=\\\"80px\\\" gap=\\\"small\\\" class=\\\"s-data-attr-designer-form\\\">\\n            <skeleton-render\\n              name=\\\"views/data/components/entity-property-databasetype/index\\\"\\n              :property=\\\"selectedItem.naslNode\\\"\\n            />\\n          </el-form>\\n        </div>\\n      </template>\\n      <div :class=\\\"$style.bodywrap1\\\" v-show=\\\"errorMsgs.length || sourceSyncErrMsgs.length\\\">\\n        <div v-for=\\\"errorMsg in errorMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n        <!-- 实体在同步数据源时产生的错误信息 -->\\n        <div v-for=\\\"errorMsg in sourceSyncErrMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- 查询弹出框 -->\\n    <el-popover\\n      :visible=\\\"reflowPopoverVisible\\\"\\n      :virtual-ref=\\\"labelEditor\\\"\\n      :show-arrow=\\\"false\\\"\\n      placement=\\\"bottom-start\\\"\\n      :width=\\\"340\\\"\\n      virtual-triggering\\n    >\\n      <div class=\\\"reflowPopover\\\" v-loading=\\\"reflowPopoverLoading\\\">\\n        <div class=\\\"reflowPopoverEmpty\\\" v-if=\\\"fieldList.length === 0\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"centerFlex\\\" style=\\\"font-size: 28px; margin-bottom: 20px\\\"></s-others-icon>\\n          <span class=\\\"centerFlex\\\">暂无推荐字段</span>\\n        </div>\\n        <div v-else>\\n          <el-scrollbar height=\\\"250px\\\">\\n            <div\\n              class=\\\"reflowPopoverItem\\\"\\n              v-for=\\\"item in fieldList\\\"\\n              :key=\\\"item.id\\\"\\n              @mouseenter=\\\"activeItem = item\\\"\\n              @mouseleave=\\\"activeItem = null\\\"\\n            >\\n              <el-row :gutter=\\\"10\\\">\\n                <el-col :span=\\\"9\\\" class=\\\"sle\\\">\\n                  <el-tooltip :content=\\\"item.name\\\" placement=\\\"top\\\" :show-after=\\\"500\\\" :disabled=\\\"!isTextOverflow\\\">\\n                    <div\\n                      class=\\\"tooltip-trigger\\\"\\n                      v-html=\\\"getFieldName(item.name, item.matchedNames)\\\"\\n                      @mouseenter=\\\"checkOverflow\\\"\\n                    ></div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col class=\\\"sle\\\" :span=\\\"8\\\">\\n                  <el-tooltip\\n                    :content=\\\"getFieldTypeTitle(item)\\\"\\n                    placement=\\\"top\\\"\\n                    :show-after=\\\"500\\\"\\n                    :disabled=\\\"!isTextOverflow\\\"\\n                  >\\n                    <div class=\\\"tooltip-trigger\\\" @mouseenter=\\\"checkOverflow\\\">{{ getFieldTypeTitle(item) }}</div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col :span=\\\"4\\\">\\n                  {{ item.required ? '必填' : '非必填' }}\\n                </el-col>\\n                <el-col :span=\\\"3\\\" v-show=\\\"activeItem?.id === item.id\\\" style=\\\"color: #2383ff\\\">使用</el-col>\\n              </el-row>\\n            </div>\\n          </el-scrollbar>\\n        </div>\\n        <div style=\\\"height: 18px; margin-top: 10px\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"warningIcon\\\"></s-others-icon>\\n          <span>输入_，可进行词根匹配</span>\\n        </div>\\n      </div>\\n    </el-popover>\\n    <!-- 添加至备选数据库字段库弹窗 -->\\n    <el-dialog v-model=\\\"reflowDialogVisible\\\" title=\\\"一键添加到备选字段库\\\" width=\\\"50%\\\">\\n      <el-table\\n        ref=\\\"reflowTableRef\\\"\\n        :data=\\\"reflowFieldList\\\"\\n        @select=\\\"handleSelectReflowField\\\"\\n        @select-all=\\\"handleSelectReflowField\\\"\\n      >\\n        <el-table-column type=\\\"selection\\\" width=\\\"40\\\" />\\n        <el-table-column label=\\\"字段注释\\\" prop=\\\"label\\\" />\\n        <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" />\\n        <el-table-column label=\\\"数据类型\\\" prop=\\\"type\\\" />\\n        <el-table-column label=\\\"是否必填\\\" prop=\\\"required\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ scope.row.required ? '是' : '否' }}</span>\\n          </template>\\n        </el-table-column>\\n        <el-table-column label=\\\"字段长度\\\" prop=\\\"length\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ getReflowFieldLength(scope.row) }}</span>\\n          </template>\\n        </el-table-column>\\n      </el-table>\\n      <template #footer>\\n        <div class=\\\"reflowDialogFooter\\\">\\n          <el-button\\n            type=\\\"primary\\\"\\n            :disabled=\\\"reflowConfirmBtnDisabled\\\"\\n            :loading=\\\"confirmLoading\\\"\\n            @click=\\\"handleUploadReflowField\\\"\\n          >\\n            确 定\\n          </el-button>\\n          <el-button @click=\\\"reflowDialogVisible = false\\\">取 消</el-button>\\n        </div>\\n      </template>\\n    </el-dialog>\\n  </div>\\n</template>\\n\\n<script setup>\\n  import { inject, onMounted, ref, nextTick } from 'vue';\\n  import { ElMessage, ClickOutside as vClickOutside } from 'element-plus';\\n  import { requestApi, getIsReflowField, getFieldList, getReflowFieldList, uploadReflowField } from '../apis';\\n  import { debounce } from '../utils';\\n\\n  const props = defineProps({\\n    entity: Object,\\n  });\\n\\n  const handleAddItem = () => {\\n    addItem();\\n    nextTick(() => {\\n      onSetItemEdit(selectedItem.value, 'label', true);\\n    });\\n  };\\n\\n  const showReflowBtn = ref(false);\\n\\n  const reflowPopoverVisible = ref(false);\\n  const fieldList = ref([]);\\n  const reflowQuery = ref('');\\n  const abortController = ref(null);\\n  const requestId = ref(0); // 用于标识当前请求\\n\\n  const debounceQueryFieldList = debounce(() => {\\n    // 设置loading状态\\n    reflowPopoverLoading.value = true;\\n\\n    // 取消之前的请求\\n    if (abortController.value) {\\n      abortController.value.abort();\\n    }\\n\\n    // 创建新的 AbortController 和请求ID\\n    abortController.value = new AbortController();\\n    const currentRequestId = ++requestId.value;\\n\\n    getFieldList({ query: reflowQuery.value }, abortController.value.signal)\\n      .then(res => {\\n        // 只有当前请求是最新的才更新数据\\n        if (currentRequestId === requestId.value) {\\n          fieldList.value = res.result || [];\\n        }\\n      })\\n      .catch(err => {\\n        if (err.name !== 'AbortError') {\\n          console.error(err);\\n        }\\n      })\\n      .finally(() => {\\n        // 只有当前请求是最新的才更新加载状态\\n        if (currentRequestId === requestId.value) {\\n          abortController.value = null;\\n          reflowPopoverLoading.value = false;\\n        }\\n      });\\n  }, 400);\\n\\n  const reflowPopoverLoading = ref(false);\\n  const activeItem = ref(null);\\n\\n  const getFieldName = (name, matchedNames) => {\\n    if (!name || typeof name !== 'string') return '';\\n    if (!Array.isArray(matchedNames)) return `<span style=\\\"color: red; font-weight: bold;\\\">${name}</span>`;\\n\\n    const matchedSet = new Set(matchedNames.filter(item => item && typeof item === 'string'));\\n    const parts = name.split(/(_+)/);\\n\\n    return parts\\n      .map(part => {\\n        if (part.startsWith('_')) return part;\\n        return matchedSet.has(part) ? part : `<span style=\\\"color: red; font-weight: bold;\\\">${part}</span>`;\\n      })\\n      .join('');\\n  };\\n\\n  const getFieldTypeTitle = item => {\\n    if (item.type === 'String') {\\n      const stringLabel = getStringLabel(item.length);\\n      return item.type + (stringLabel ? `  (${stringLabel})` : '');\\n    }\\n    return item.type;\\n  };\\n\\n  const columnNameValidatorRef = ref(null);\\n\\n  const handleUseField = item => {\\n    const target = selectedItem.value?.naslNode;\\n    if (target?.concept === 'EntityProperty') {\\n      target.app.emit('collect:start', { actionMsg: '数据建模插件更新字段名' });\\n      const newName = target.parentNode?.getPropertyUniqueName?.(item.name) || item.name; // 保证字段名唯一\\n      const typeName = item.type === 'Integer' ? 'Long' : item.type;\\n      const updateData = {\\n        name: newName,\\n        columnName: newName,\\n        required: item.required,\\n        typeAnnotation: {\\n          concept: 'TypeAnnotation',\\n          typeKind: 'primitive',\\n          typeNamespace: 'nasl.core',\\n          typeName,\\n        },\\n      };\\n      if (item.type === 'String' && item.length) {\\n        const minRule = target.toJSON().rules.find(rule => rule.startsWith('minLength'));\\n        Object.assign(updateData, {\\n          databaseTypeAnnotation: {\\n            concept: 'DatabaseTypeAnnotation',\\n            typeName: 'varchar',\\n            arguments: {\\n              length: item.length,\\n            },\\n          },\\n          rules: [minRule, `maxLength(${item.length})`].filter(Boolean),\\n        });\\n      }\\n      target.update(updateData);\\n      setTimeout(() => {\\n        // 延迟收集，把外层onBlurLabel的change也收集到这次的batchInstruct中\\n        target.app.emit('collect:end');\\n      });\\n\\n      nextTick(async () => {\\n        try {\\n          const res = await columnNameValidatorRef.value?.validate();\\n        } catch (error) {\\n          // console.error(error);\\n          // 新设置的字段名不符合规则，主动聚焦到输入框\\n          onSetItemEdit(selectedItem.value, 'name', true);\\n        }\\n      });\\n    }\\n  };\\n\\n  const handleLabelFocus = label => {\\n    reflowQuery.value = label;\\n  };\\n\\n  const handleLabelBlur = async (event, slotProps, item) => {\\n    reflowPopoverVisible.value = false;\\n    reflowQuery.value = '';\\n    fieldList.value = [];\\n\\n    event = event.replace(/_/g, ''); // event 去除掉_\\n\\n    slotProps.blurFn(event); // 触发模版中原来的失焦逻辑\\n    if (activeItem.value) {\\n      handleUseField(activeItem.value);\\n      activeItem.value = null;\\n    }\\n  };\\n\\n  const handleLabelInput = (event, slotProps) => {\\n    reflowPopoverVisible.value = true;\\n    reflowQuery.value = event;\\n    slotProps.inputChange(event); // 触发模版中原有的修改逻辑\\n    // 外置设置防抖查询loading状态\\n    reflowPopoverLoading.value = true;\\n    debounceQueryFieldList();\\n  };\\n\\n  onMounted(() => {\\n    getIsReflowField({}).then(res => {\\n      showReflowBtn.value = res.result;\\n    });\\n  });\\n\\n  // 一键添加到备选字段库\\n  const reflowLoading = ref(false);\\n  const reflowFieldList = ref([]);\\n\\n  const addReflowField = () => {\\n    reflowLoading.value = true;\\n\\n    const filterList = ['id', 'createdTime', 'updatedTime', 'createdBy', 'updatedBy'];\\n    const filterRegex = /^property\\\\d+$|^.*[\\\\u4e00-\\\\u9fa5].*$/;\\n\\n    const properties = props.entity?.toJSON()?.properties || [];\\n    const tempReflowFieldList = [];\\n    const nameSet = new Set();\\n    properties.forEach(property => {\\n      if (\\n        !property.label ||\\n        filterList.includes(property.name) ||\\n        filterRegex.test(property.name) ||\\n        property.typeAnnotation?.typeKind !== 'primitive'\\n      ) {\\n        return;\\n      }\\n      let type = property.typeAnnotation?.typeName || 'String';\\n      if (type === 'Long') type = 'Integer'; // 整数类型需要重命名为Integer\\n      const propertyName = property.name.replace(/\\\\d+$/, '') || '';\\n      if (nameSet.has(propertyName)) {\\n        return;\\n      }\\n      nameSet.add(propertyName);\\n      tempReflowFieldList.push({\\n        name: propertyName,\\n        label: property.label || '',\\n        required: property.required || false,\\n        type,\\n        length: type === 'String' ? property.databaseTypeAnnotation?.arguments?.length || 255 : void 0,\\n      });\\n    });\\n    reflowFieldList.value = tempReflowFieldList;\\n    if (reflowFieldList.length === 0) {\\n      reflowLoading.value = false;\\n      showMessage();\\n      return;\\n    }\\n\\n    // 备选库不需要校验字段唯一性，直接打开弹窗\\n    requestApi(\\n      getReflowFieldList,\\n      {\\n        list: tempReflowFieldList.map(item => ({\\n          name: item.name,\\n          label: item.label,\\n        })),\\n      },\\n      res => {\\n        if (res.result?.length === 0) {\\n          showMessage();\\n          return;\\n        } else {\\n          // 只有在res.result中的name，在tempReflowFieldList中存在，才显示\\n          const set = new Set(res.result);\\n          reflowFieldList.value = tempReflowFieldList.filter(item => set.has(item.name));\\n          reflowDialogVisible.value = true;\\n          nextTick(() => {\\n            reflowConfirmBtnDisabled.value = false;\\n            reflowTableRef.value.toggleAllSelection();\\n          });\\n        }\\n      },\\n      err => {\\n        console.error(err);\\n      },\\n      () => {\\n        reflowLoading.value = false;\\n      }\\n    );\\n    // reflowDialogVisible.value = true;\\n    // reflowLoading.value = false;\\n    // nextTick(() => {\\n    //   reflowConfirmBtnDisabled.value = false;\\n    //   reflowTableRef.value.toggleAllSelection();\\n    // });\\n  };\\n\\n  // 显示[暂无可回流到备选数据库的字段]消息\\n  const showMessage = (type = 'warning', msg = '暂无可回流到备选数据库的字段') => {\\n    ElMessage.closeAll();\\n    ElMessage[type](msg);\\n  };\\n\\n  const reflowDialogVisible = ref(false);\\n  const reflowTableRef = ref(null);\\n\\n  const getStringLabel = length => {\\n    const map = {\\n      255: '短 255',\\n      4000: '中 4000',\\n      16777215: '长 16777215',\\n    };\\n    return map[length] || length;\\n  };\\n  const getReflowFieldLength = row => {\\n    return row.type === 'String' ? getStringLabel(row.length) : '-';\\n  };\\n\\n  const reflowConfirmBtnDisabled = ref(false);\\n  const isTextOverflow = ref(false);\\n\\n  // 检测文本是否溢出\\n  const checkOverflow = event => {\\n    const element = event.target;\\n    isTextOverflow.value = element.scrollWidth > element.clientWidth;\\n  };\\n  const handleSelectReflowField = (selection, row) => {\\n    reflowConfirmBtnDisabled.value = selection.length === 0;\\n  };\\n\\n  const confirmLoading = ref(false);\\n  const handleUploadReflowField = () => {\\n    confirmLoading.value = true;\\n    const selectedList = reflowTableRef.value.getSelectionRows();\\n    requestApi(\\n      uploadReflowField,\\n      {\\n        list: selectedList,\\n      },\\n      res => {\\n        if (res.result) {\\n          showMessage('success', '添加成功');\\n          reflowDialogVisible.value = false;\\n        } else {\\n          showMessage('error', res.msg || '添加失败');\\n        }\\n      },\\n      err => {\\n        // console.error(err);\\n        showMessage('error', err);\\n      },\\n      () => {\\n        confirmLoading.value = false;\\n      }\\n    );\\n  };\\n\\n  const {\\n    /**\\n     * 名称输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    nameEditor,\\n    /**\\n     * 标题输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    labelEditor,\\n    /**\\n     * 描述输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    descriptionEditor,\\n    /**\\n     * 表格节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    tableviewRef,\\n    /**\\n     * 数据库视图导入生成的实体\\n     * entity 的 origin 属性是否是 view\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isViewEntity,\\n    /**\\n     * 添加实体属性\\n     *\\n     * @function\\n     */\\n    addItem,\\n    /**\\n     * 生成移除按钮的提示\\n     *\\n     * @function\\n     * @return string\\n     */\\n    getRemoveTooltip,\\n    /**\\n     * 表格选中的行元素\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    selectedItem,\\n    /**\\n     * 是否是官方实体属性\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntityProperty,\\n    /**\\n     * 移除实体索引\\n     *\\n     * @function\\n     * @param item - 需要删除的行元素\\n     */\\n    removeItem,\\n    /**\\n     * 表格的渲染数据\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    renderList,\\n    /**\\n     * 上移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveUpItem,\\n    /**\\n     * 下移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveDownItem,\\n    /**\\n     * 表格高度\\n     *\\n     * @type {Vue.computed<number>}\\n     */\\n    tableHeight,\\n    /**\\n     * 设置表单列的样式\\n     *\\n     * @function\\n     */\\n    setRowClassName,\\n    /**\\n     * 右键选中表格行元素\\n     *\\n     * @function\\n     */\\n    onContextMenuRow,\\n    /**\\n     * 选中行元素时触发\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    onSelectRowWithDataType,\\n    /**\\n     * 拖拽调整表格列宽度\\n     *\\n     * @function\\n     * @param newWidth - 新宽度\\n     * @param oldWidth - 旧宽度\\n     * @param column - 列元素\\n     */\\n    handleDragend,\\n    /**\\n     * 是否禁止编辑行元素\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    getDisable,\\n    /**\\n     * 设置表格列元素编辑状态\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 属性名称\\n     * @param focus - 是否选中输入框\\n     */\\n    onSetItemEdit,\\n    /**\\n     * Tab 键跳转切换下一个属性\\n     *\\n     * @function\\n     * @param event - 原生键盘事件\\n     * @param item - 行元素\\n     * @param name - 属性名称\\n     */\\n    onKeyUp,\\n    /**\\n     * 名称输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的名称\\n     */\\n    onBlurName,\\n    /**\\n     * 验证不通过时滚动到错误元素\\n     */\\n    errorScrollIntoView,\\n    /**\\n     * 存在错误\\n     *\\n     * @type {Vue.ref<boolean>}\\n     */\\n    hasInvalid,\\n    /**\\n     * 显示输入框的提示\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    tooltipOpened,\\n    /**\\n     * 属性名，暂时存储属性名，用于输入框输入等操作\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    itemNameValue,\\n    /**\\n     * 输入框获取焦点时触发\\n     *\\n     * 1. 设置tooltipOpened的值\\n     * 2. 设置itemNameValue\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     */\\n    onFocusName,\\n    /**\\n     * 标题输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的标题\\n     */\\n    onBlurLabel,\\n    /**\\n     * 是否应用正在发布\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isAppDeploying,\\n    /**\\n     * 是否实体已经发布过并且是复合类型\\n     *\\n     * 1. 实体已经发布过，在app下的depEntities可以找到该实体\\n     * 2. 实体是复合类型：'Map', 'List'，或者typeKind是reference并且namespace是'entities', 'structures'\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isPublishedComplexType,\\n    /**\\n     * 数据类型的标题\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return string\\n     */\\n    showDatatype,\\n    /**\\n     * 双击编辑数据类型输入框\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - 原生事件\\n     */\\n    onDblClickDatatype,\\n    /**\\n     * 获取可选类型\\n     *\\n     * @function\\n     * @return 可选类型\\n     */\\n    getDataTypeList,\\n    /**\\n     * 失焦时取消当前行元素编辑状态\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    handleBlur,\\n    /**\\n     * 修改实体属性类型\\n     *\\n     * @function\\n     * @param event - event.value 实际使用数据\\n     */\\n    onChangeDatatype,\\n    /**\\n     * 是否属于官方实体\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntity,\\n    /**\\n     * 复合类型\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isComplexType,\\n    /**\\n     * 修改是否必填\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkbox 原生事件\\n     */\\n    requireInput,\\n    /**\\n     * 能否设置默认值\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    canSetDefaultValue,\\n    /**\\n     * 对应节点是否有错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    IsError,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inTable,\\n    /**\\n     * 全部勾选或者取消全部勾选\\n     *\\n     * @function\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    toggleSelectAll,\\n    /**\\n     * 设置显示属性\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    setDisplay,\\n    /**\\n     * 显示在筛选\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inFilter,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inForm,\\n    /**\\n     * 显示在详情\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inDetail,\\n    /**\\n     * ElementPlus 的 popper 配置\\n     */\\n    popperOptions,\\n    /**\\n     * 右键菜单选中项\\n     *\\n     * @type {Vue.ref<object>}\\n     */\\n    menuSelectedItem,\\n    /**\\n     * 项对应的右键菜单是否存在\\n     */\\n    popperExistMap,\\n    /**\\n     * 项对应的右键菜单是否显示\\n     */\\n    popperVisibleMap,\\n    /**\\n     * 右键菜单的触发节点\\n     */\\n    triggerRef,\\n    /**\\n     * 右键菜单的出现位置\\n     */\\n    placement,\\n    /**\\n     * 右键菜单隐藏时的处理函数\\n     */\\n    onMenuPopperHide,\\n    /**\\n     * 菜单点击时\\n     */\\n    onMenuClick,\\n    /**\\n     * 菜单-查找引用\\n     *\\n     * @function\\n     */\\n    onMenuFindUsage,\\n    /**\\n     * 菜单-删除\\n     *\\n     * @function\\n     */\\n    onMenuDelete,\\n    /**\\n     * 实体属性数据类型\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    typeName,\\n    /**\\n     * 小数位数的校验错误信息\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    scaleErrorMsg,\\n    /**\\n     * 属性的响应式数据\\n     *\\n     * @type {Vue.reactive<object>}\\n     * @property scale - 小数位数\\n     */\\n    model,\\n    /**\\n     * 小数位数的范围\\n     *\\n     * @type {Vue.computed<object>}\\n     * @property min - 最小值\\n     * @property max - 最大值\\n     */\\n    scaleOption,\\n    /**\\n     * 是否禁用小数位数\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return boolean\\n     */\\n    decimalDisabled,\\n    /**\\n     * 修改小数位数\\n     *\\n     * @function\\n     */\\n    setScale,\\n    /**\\n     * 关联属性\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    entityReference,\\n    /**\\n     * 类型列表\\n     *\\n     * @type {Vue.ref<array>}\\n     */\\n    dataTypeList,\\n    /**\\n     * 关联实体存在错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    isReleationEntityError,\\n    /**\\n     * 设置关联属性\\n     *\\n     * @function\\n     * @param event - event.value 表示实际数据\\n     */\\n    onSaveReference,\\n    /**\\n     * 清除关联属性\\n     *\\n     * @function\\n     */\\n    onClearReference,\\n    /**\\n     * 设置关联属性实体记录删除规则\\n     *\\n     * @function\\n     * @param event - 选中事件对象\\n     */\\n    setDeleteRule,\\n    /**\\n     * 设置错误信息\\n     *\\n     * @function\\n     * @param errorMsgs - 错误信息\\n     */\\n    changeErrorMsgs,\\n    /**\\n     * 是否来源于数据库表/excel\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isTableOrExcelOrigin,\\n    /**\\n     * 描述输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的描述\\n     */\\n    onBlurDescription,\\n    /**\\n     * 是否显示数据库高级设置\\n     *\\n     * 1.没有设置数据源\\n     * 2.实体是excel导入或者数据源反向导入\\n     * 3.权限实体（贤宇说一直是以LCAP开头来判断的）\\n     * 这3种情况不显示数据库设置\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    showDatabasetype,\\n    /**\\n     * 实体在同步数据源时产生的错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    sourceSyncErrMsgs,\\n    /**\\n     * 错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    errorMsgs,\\n    /**\\n     * 数据库列名校验规则\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    entityPropertyColumnNameRules,\\n    /**\\n     * 数据库列名输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyColumnNamePlaceholder,\\n    /**\\n     * 生成名称校验规则\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return 名称校验规则\\n     */\\n    getEntityPropertyRules,\\n    /**\\n     * 名称输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyPlaceholder,\\n    /**\\n     * 设置选中行的数据类型\\n     *\\n     * @function\\n     * @param value - 数据类型\\n     */\\n    setDataType,\\n  } = inject('$context');\\n</script>\\n\\n<style module=\\\"$propertyDesigner\\\">\\n  .errorMsg {\\n    color: var(--designer-font-second-color);\\n    margin: 0 46px;\\n  }\\n\\n  .errorMsg + .errorMsg {\\n    margin-top: 10px;\\n  }\\n\\n  .infoicon {\\n    display: inline-block;\\n    height: 12px;\\n    width: 12px;\\n    background: var(--assets-warning-info-svg) no-repeat;\\n    background-size: 100% 100%;\\n    vertical-align: -1px;\\n    margin-right: 5px;\\n  }\\n</style>\\n\\n<style module>\\n  div.table [class^='u-input__']:focus,\\n  div.table [class^='u-input__'][focus],\\n  div.table [class^='u-input__']:hover,\\n  div.table [class^='u-select__']:focus,\\n  div.table [class^='u-select__'][focus],\\n  div.table [class^='u-select__'][opened],\\n  div.table [class^='u-select__']:hover {\\n    border-color: var(--entity-designer-table-input-focus-border-color);\\n    box-shadow: var(--entity-designer-table-input-focus-box-shadow);\\n  }\\n\\n  .head {\\n    margin: 16px;\\n    padding: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n  }\\n\\n  div.head [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  .body {\\n    margin: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n    overflow: hidden;\\n  }\\n\\n  .entityListIcon {\\n    width: 16px;\\n    height: 16px;\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .edit {\\n    display: inline-block;\\n    width: 100%;\\n    line-height: 38px;\\n  }\\n\\n  .edit:hover {\\n    cursor: pointer;\\n  }\\n\\n  .edit:focus {\\n    outline: none;\\n  }\\n\\n  .edit .text > span {\\n    color: var(--entity-designer-table-color);\\n  }\\n\\n  .edit .text {\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .editwrap {\\n    margin-left: -9px;\\n  }\\n\\n  .editwrap [class^='s-datatype-select__'] {\\n    vertical-align: middle;\\n  }\\n\\n  .text {\\n    width: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n  }\\n\\n  .textContent {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n    max-width: calc(100% - 28px);\\n    margin-right: 8px;\\n  }\\n  .textContent:empty {\\n    display: none;\\n  }\\n\\n  .text > span {\\n    display: inline-block;\\n    color: var(--entity-designer-table-disabled-color);\\n    vertical-align: middle;\\n  }\\n\\n  .validator {\\n    width: 100%;\\n  }\\n\\n  .btnnav {\\n    border-bottom: 1px solid var(--entity-designer-border-color);\\n    border-top: 1px solid var(--entity-designer-border-color);\\n    padding: 5px 24px;\\n  }\\n\\n  div.btnnav[direction='horizontal'][gap='small'] > :not(:last-child) {\\n    margin-right: 8px;\\n  }\\n\\n  .btnnav1 {\\n    border-top: none;\\n    background-color: var(--entity-designer-btnnav-background);\\n  }\\n\\n  .bodywrap {\\n    padding: 16px 24px 0;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    margin-bottom: 24px;\\n  }\\n\\n  div.bodywrap [class^='u-grid-layout_column__'] {\\n    padding-bottom: 0;\\n  }\\n\\n  .bodywrap1 {\\n    padding: 16px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .advancedWrap {\\n    padding: 10px 24px 25px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .entityfrom [class^='u-form_item_label__'] {\\n    width: 36px !important;\\n  }\\n\\n  div.input {\\n    width: 100%;\\n    margin-right: 12px;\\n  }\\n\\n  .iconBase {\\n    display: inline-block;\\n    width: 20px;\\n    height: 38px;\\n    line-height: 38px;\\n    text-align: center;\\n    font-size: var(--font-size-large);\\n    font-size: 14px;\\n  }\\n\\n  .iconKey {\\n    color: var(--designer-table-edit-icon-key-color);\\n  }\\n\\n  .iconLink {\\n    color: var(--designer-table-edit-icon-link-color);\\n  }\\n\\n  .iconEdit {\\n    color: var(--color-base);\\n    opacity: 0;\\n  }\\n\\n  .iconLink2 {\\n    display: inline-block;\\n    width: 16px;\\n    height: 16px;\\n    line-height: 16px;\\n    font-size: var(--font-size-huge);\\n    color: var(--brand-primary);\\n    cursor: pointer;\\n    position: relative;\\n    top: 2px;\\n    left: 4px;\\n  }\\n\\n  .edit:hover .iconEdit {\\n    opacity: 0.6;\\n    cursor: pointer;\\n  }\\n\\n  .edit:hover .iconEdit:hover {\\n    opacity: 1;\\n  }\\n\\n  .icon {\\n    width: 14px;\\n    height: 14px;\\n    display: inline-block;\\n    vertical-align: middle;\\n    background-repeat: no-repeat;\\n  }\\n\\n  div.normalfrom [class^='u-form_item_label__'] {\\n    width: 60px !important;\\n  }\\n\\n  div.normalfrom > div {\\n    margin-bottom: 16px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'],\\n  div.normalfrom [class^='u-select__'],\\n  div.normalfrom [class^='u-form_item_field__'],\\n  div.normalfrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom [class^='u-form_item_label__'] {\\n    width: 94px !important;\\n  }\\n\\n  div.reffrom [class^='u-input__'],\\n  div.reffrom [class^='u-tree-select__'],\\n  div.reffrom [class^='u-select__'],\\n  div.reffrom [class^='u-form_item_field__'],\\n  div.reffrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.reffrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom .text {\\n    opacity: 0.3;\\n  }\\n\\n  div.reffrom [class^='u-form_item_extra__'] {\\n    width: 12px;\\n  }\\n\\n  .flexgrid {\\n    display: flex;\\n  }\\n\\n  .gridcolumn {\\n    width: auto;\\n  }\\n\\n  .gridcolumn:not(:last-child) {\\n    margin-right: 24px;\\n  }\\n\\n  div.fixedwidthinput,\\n  div.textarea {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  .icondivider {\\n    color: var(--entity-designer-border-color);\\n  }\\n\\n  .advanced {\\n    padding-top: 10px;\\n  }\\n\\n  .scaleErrorMsg {\\n    position: absolute;\\n    color: rgb(242, 73, 87);\\n  }\\n  .typeError {\\n    border-radius: 4px;\\n    border: 1px solid var(--input-border-color-error);\\n  }\\n  .checkbox [class='el-checkbox__label'] {\\n    line-height: 23px;\\n    font-size: 12px;\\n    text-overflow: ellipsis;\\n    text-align: left;\\n    font-weight: 600;\\n    color: var(--el-table-header-text-color);\\n  }\\n  .checkbolabel [class='el-checkbox__label'] {\\n    line-height: 23px !important;\\n    font-size: 12px !important;\\n    text-overflow: ellipsis !important;\\n    text-align: left !important;\\n    font-weight: 600 !important;\\n    color: var(--el-table-header-text-color) !important;\\n  }\\n  .checkbox {\\n    height: 23px;\\n    line-height: 23px;\\n  }\\n</style>\\n<style module=\\\"$contextmenu\\\">\\n  .menu {\\n    margin-top: 0 !important;\\n  }\\n\\n  .menu .group [class^='el-menu-item-group__title'] {\\n    --el-menu-text-color: var(--el-menu-top-title-text-color);\\n    height: 32px;\\n    font-weight: bold;\\n    border-bottom: 1px solid var(--line-color-regular);\\n    background: var(--fill-color-thead);\\n    color: var(--el-menu-text-color);\\n    cursor: auto;\\n  }\\n</style>\\n\\n<style scoped>\\n  .tableCell :deep(.cell) {\\n    padding: 0;\\n    line-height: 20px;\\n    padding-left: 6px;\\n  }\\n  .theadLable {\\n    overflow: visible;\\n    width: 100%;\\n    padding-left: 6px;\\n    border-right: 1px solid var(--entity-designer-property-dragger-border-color);\\n  }\\n  .topIconGroup {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-start;\\n    gap: 8px;\\n    background-color: var(--entity-designer-icon-group-background-color);\\n    padding: 5px 24px;\\n    border-bottom: 1px solid var(--entity-designer-icon-group-border-color);\\n    position: sticky;\\n    z-index: 9;\\n    top: 64px;\\n  }\\n\\n  .icon {\\n    margin-right: 8px;\\n  }\\n\\n  .extraForm :deep(.el-form-item__label) {\\n    font-size: 12px;\\n  }\\n\\n  :deep(.row-style) {\\n    border: 1px solid #4d87fe;\\n  }\\n\\n  :deep(.cell-style) {\\n    border-bottom: 1px solid #409eff;\\n  }\\n\\n  .elFormFlex {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center;\\n    flex-wrap: wrap;\\n  }\\n</style>\\n\\n<style scoped>\\n  .reflowPopover {\\n    width: 340px;\\n    padding: 8px;\\n  }\\n\\n  .reflowPopoverEmpty {\\n    padding: 20px 0 30px;\\n  }\\n\\n  .reflowPopoverItem {\\n    height: 48px;\\n    line-height: 48px;\\n    padding: 0 12px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    &:hover {\\n      background-color: #edf2f9;\\n    }\\n  }\\n\\n  .warningIcon {\\n    margin-right: 4px;\\n  }\\n\\n  .reflowDialogFooter {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 居中对齐flex布局 */\\n  .centerFlex {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 单行文本溢出省略号 */\\n  .sle,\\n  [sle] {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n\\n  /* tooltip触发器样式 */\\n  .tooltip-trigger {\\n    width: 100%;\\n    height: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n</style>\\n\",null],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.EntityPropertyDesigner__errorMsg--U135D {\n    color: var(--designer-font-second-color);\n    margin: 0 46px;\n}\n.EntityPropertyDesigner__errorMsg--U135D + .EntityPropertyDesigner__errorMsg--U135D {\n    margin-top: 10px;\n}\n.EntityPropertyDesigner__infoicon--uVHId {\n    display: inline-block;\n    height: 12px;\n    width: 12px;\n    background: var(--assets-warning-info-svg) no-repeat;\n    background-size: 100% 100%;\n    vertical-align: -1px;\n    margin-right: 5px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/EntityPropertyDesigner.vue\"],\"names\":[],\"mappings\":\";AAsjDE;IACE,wCAAwC;IACxC,cAAc;AAChB;AAEA;IACE,gBAAgB;AAClB;AAEA;IACE,qBAAqB;IACrB,YAAY;IACZ,WAAW;IACX,oDAAoD;IACpD,0BAA0B;IAC1B,oBAAoB;IACpB,iBAAiB;AACnB\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div\\n      v-if=\\\"!isViewEntity\\\"\\n      class=\\\"topIconGroup\\\"\\n      :class=\\\"$style.body\\\"\\n      style=\\\"margin-top: 0px; margin-bottom: 0px; border-bottom: 0px; height: 40px\\\"\\n    >\\n      <!-- 添加实体属性 -->\\n      <s-others-icon name=\\\"add\\\" tooltip=\\\"添加属性\\\" button @click=\\\"handleAddItem\\\"></s-others-icon>\\n      <!-- 删除实体属性 -->\\n      <s-others-icon\\n        name=\\\"remove\\\"\\n        button\\n        :tooltip=\\\"getRemoveTooltip()\\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          selectedItem.naslNode.primaryKey ||\\n          isOfficalEntityProperty(selectedItem)\\n        \\\"\\n        @click=\\\"removeItem(selectedItem)\\\"\\n      ></s-others-icon>\\n      <div :class=\\\"$style.icondivider\\\">|</div>\\n      <!-- 上移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-up\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置顶'\\n            : '上移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveUpItem\\\"\\n      ></s-others-icon>\\n      <!-- 下移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-down\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置底'\\n            : '下移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveDownItem\\\"\\n      ></s-others-icon>\\n      <!-- 一键添加到备选字段库 -->\\n      <el-button v-if=\\\"showReflowBtn\\\" :loading=\\\"reflowLoading\\\" @click=\\\"addReflowField\\\">一键添加到备选字段库</el-button>\\n    </div>\\n    <div :class=\\\"$style.body\\\" style=\\\"margin-top: 0px\\\">\\n      <div :class=\\\"$style.bodywrap\\\" class=\\\"tableCell\\\">\\n        <el-table\\n          ref=\\\"tableviewRef\\\"\\n          :data=\\\"renderList\\\"\\n          highlight-current-row\\n          :style=\\\"`min-width:950px;${tableHeight}`\\\"\\n          style=\\\"width: 100%\\\"\\n          :class=\\\"\\n            renderList.length > 8\\n              ? [$style.table, $style.tablescroll, 's-data-table-edit']\\n              : [$style.table, 's-data-table-edit']\\n          \\\"\\n          :value=\\\"selectedItem && selectedItem.naslNode.name\\\"\\n          value-field=\\\"name\\\"\\n          :header-row-style=\\\"{ height: '40px' }\\\"\\n          :cell-style=\\\"{ padding: '0px' }\\\"\\n          :row-style=\\\"{ height: '42px' }\\\"\\n          :row-class-name=\\\"setRowClassName\\\"\\n          empty-text=\\\"暂无数据\\\"\\n          @row-contextmenu=\\\"onContextMenuRow\\\"\\n          @row-click=\\\"onSelectRowWithDataType\\\"\\n          @header-dragend=\\\"handleDragend\\\"\\n          @click.right.prevent\\n          :border=\\\"true\\\"\\n        >\\n          <!-- 主键/关联属性的icon -->\\n          <el-table-column width=\\\"38\\\" prop=\\\"primaryKey\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.primaryKey\\\"\\n                  name=\\\"key\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconKey]\\\"\\n                ></s-others-icon>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.relationProperty\\\"\\n                  name=\\\"link\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconLink]\\\"\\n                ></s-others-icon>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 标题 -->\\n          <el-table-column prop=\\\"label\\\" min-width=\\\"107\\\" label=\\\"字段注释\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段注释</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!item.loading && !item.naslNode.parentNode.loading && !isViewEntity\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'label'\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                  tabindex=\\\"0\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'label')\\\"\\n                  :title=\\\"item.naslNode.label\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.label }}</span>\\n                    <s-others-icon\\n                      v-show=\\\"!isOfficalEntityProperty(item)\\\"\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    ref=\\\"labelValidatorRef\\\"\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.label\\\"\\n                    rules=\\\"maxLength(63)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurLabel(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <s-input\\n                      placeholder=\\\"请输入标题\\\"\\n                      :model-value=\\\"item.naslNode.label\\\"\\n                      ref=\\\"labelEditor\\\"\\n                      :class=\\\"$style.input\\\"\\n                      @focus=\\\"handleLabelFocus(item.naslNode.label)\\\"\\n                      @blur:value=\\\"handleLabelBlur($event, slotProps, item)\\\"\\n                      @input=\\\"handleLabelInput($event, slotProps)\\\"\\n                      @keyup.enter=\\\"$event.target.blur()\\\"\\n                    ></s-input>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <!-- 之前仅仅为 item.label 但是实际上在item 对象中没有label属性，恐在特殊情况下存在，故范围限制为 区分 viewEntity -->\\n                <span>{{ isViewEntity ? item.naslNode.label : item.label }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 名称 -->\\n          <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" min-width=\\\"87\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段名</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!getDisable(item)\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'name'\\\"\\n                  tabindex=\\\"0\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  :title=\\\"item.naslNode.name\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'name')\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.name }}</span>\\n                    <s-others-icon\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.name\\\"\\n                    :rules=\\\"getEntityPropertyRules(item.naslNode)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurName(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <!-- “属性名”为空是显示提示信息 -->\\n                    <el-tooltip\\n                      :visible=\\\"tooltipOpened === 'entityAttribute' && !itemNameValue\\\"\\n                      placement=\\\"top-start\\\"\\n                      content=\\\"属性为英文字母、数字和下划线，且首字母小写\\\"\\n                    >\\n                      <s-input\\n                        :placeholder=\\\"entityPropertyPlaceholder\\\"\\n                        :model-value=\\\"item.naslNode.name\\\"\\n                        ref=\\\"nameEditor\\\"\\n                        :class=\\\"$style.input\\\"\\n                        @focus=\\\"onFocusName(item)\\\"\\n                        @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                        @input=\\\"slotProps.inputChange($event)\\\"\\n                        @keyup.enter=\\\"$event.target.blur()\\\"\\n                        @update:modelValue=\\\"itemNameValue = $event\\\"\\n                      ></s-input>\\n                    </el-tooltip>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <span>{{ item.naslNode.name }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 数据类型 -->\\n          <el-table-column label=\\\"数据类型\\\" min-width=\\\"247\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">数据类型</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <el-tooltip v-if=\\\"isAppDeploying\\\" content=\\\"应用发布中，暂不能修改\\\" placement=\\\"bottom-start\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </el-tooltip>\\n                <!-- 禁用状态 / 已经发布过的复合类型 -->\\n                <template v-else-if=\\\"getDisable(item) || isPublishedComplexType(item)\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </template>\\n                <!-- 非禁用状态 -->\\n                <template v-else>\\n                  <!-- 展示态 -->\\n                  <div\\n                    v-if=\\\"item.edit !== 'datatype'\\\"\\n                    tabindex=\\\"0\\\"\\n                    :class=\\\"$style.edit\\\"\\n                    :ref=\\\"`datatype${item.naslNode.id}`\\\"\\n                    :title=\\\"showDatatype(item)\\\"\\n                    @dblclick=\\\"onDblClickDatatype(item, $event)\\\"\\n                    @keyup=\\\"onKeyUp($event, item, 'datatype')\\\"\\n                  >\\n                    <div :class=\\\"$style.text\\\">\\n                      <span :class=\\\"$style.textContent\\\">{{ showDatatype(item) }}</span>\\n                      <s-others-icon\\n                        name=\\\"edit\\\"\\n                        :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                        @click=\\\"(getDataTypeList(), onSetItemEdit(item, 'datatype', false))\\\"\\n                      ></s-others-icon>\\n                    </div>\\n                  </div>\\n                  <!-- 编辑态 -->\\n                  <div v-else :class=\\\"$style.editwrap\\\">\\n                    <el-tooltip :content=\\\"`${isAppDeploying ? '应用发布中，暂不能修改' : ''}`\\\" placement=\\\"bottom-start\\\">\\n                      <s-datatype-select\\n                        :unionable=\\\"false\\\"\\n                        :no-union-subtype=\\\"true\\\"\\n                        :data-type-list=\\\"item.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                        :last-version=\\\"item.naslNode.lastVersion\\\"\\n                        :type-annotation=\\\"item.naslNode.typeAnnotation\\\"\\n                        :concept=\\\"item.naslNode.entity.concept\\\"\\n                        :show-system-types=\\\"false\\\"\\n                        :show-generic-types=\\\"true\\\"\\n                        :show-entity=\\\"true\\\"\\n                        :show-structures=\\\"true\\\"\\n                        :emptyable=\\\"false\\\"\\n                        :hasAnonymousStructure=\\\"true\\\"\\n                        :disabled=\\\"item.naslNode.readonly || isAppDeploying || isPublishedComplexType(item)\\\"\\n                        @blur=\\\"handleBlur(item)\\\"\\n                        @change=\\\"onChangeDatatype\\\"\\n                      ></s-datatype-select>\\n                    </el-tooltip>\\n                  </div>\\n                </template>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 是否必填 -->\\n          <el-table-column label=\\\"是否必填\\\" width=\\\"70\\\" prop=\\\"required\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else style=\\\"margin-left: 16px\\\">\\n                <el-checkbox\\n                  v-model=\\\"item.naslNode.required\\\"\\n                  :disabled=\\\"getDisable(item) || isComplexType(item) || isOfficalEntity(item)\\\"\\n                  :tabindex=\\\"item.editable === false || item.loading || item.naslNode.parentNode.loading ? -1 : 0\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"requireInput(item, $event)\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 默认值 -->\\n          <el-table-column label=\\\"默认值\\\" prop=\\\"defaultValue\\\" width=\\\"120\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item }\\\">\\n              <div v-if=\\\"['createdTime', 'updatedTime'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>自动生成</span>\\n              </div>\\n              <div v-else-if=\\\"['createdBy', 'updatedBy'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>（无）</span>\\n              </div>\\n              <template v-else-if=\\\"!canSetDefaultValue(item)\\\">\\n                <div :class=\\\"$style.text\\\">\\n                  <span>（无）</span>\\n                </div>\\n              </template>\\n              <template\\n                v-else-if=\\\"\\n                  item.loading || item.naslNode.parentNode.loading || item.naslNode.generationRule !== 'manual'\\n                \\\"\\n              >\\n                <div :class=\\\"$style.text\\\">\\n                  <div :class=\\\"$style.text\\\" v-if=\\\"item.naslNode.generationRule === 'auto'\\\">\\n                    <span>自动生成</span>\\n                  </div>\\n                  <span v-else>{{ item.naslNode.defaultValue }}</span>\\n                </div>\\n              </template>\\n              <template v-else>\\n                <s-attr-input\\n                  title=\\\"默认值绑定\\\"\\n                  node-concept=\\\"defaultValue\\\"\\n                  :name=\\\"item.naslNode.name\\\"\\n                  :parent-node=\\\"item.naslNode\\\"\\n                  :node=\\\"item.naslNode.defaultValue\\\"\\n                  :class=\\\"{\\n                    [$style.typeError]: IsError(item.naslNode),\\n                  }\\\"\\n                ></s-attr-input>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表格 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inTable\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表格\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inTable\\\"\\n                @change=\\\"toggleSelectAll($event, 'inTable')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inTable\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inTable')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在筛选 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inFilter\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在筛选\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inFilter\\\"\\n                @change=\\\"toggleSelectAll($event, 'inFilter')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inFilter\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inFilter')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表单 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inForm\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表单\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inForm\\\"\\n                @change=\\\"toggleSelectAll($event, 'inForm')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inForm\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inForm')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在详情 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inDetail\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在详情\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inDetail\\\"\\n                @change=\\\"toggleSelectAll($event, 'inDetail')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inDetail\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inDetail')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n        </el-table>\\n        <!-- 右键点击 -->\\n        <el-popover\\n          :disabled-scroll=\\\"true\\\"\\n          trigger=\\\"click\\\"\\n          ref=\\\"menuPopper\\\"\\n          :popper-options=\\\"popperOptions\\\"\\n          v-if=\\\"menuSelectedItem && popperExistMap[menuSelectedItem.id]\\\"\\n          v-model:visible=\\\"popperVisibleMap[menuSelectedItem && menuSelectedItem.id]\\\"\\n          :virtual-ref=\\\"triggerRef\\\"\\n          :placement=\\\"placement\\\"\\n          :show-arrow=\\\"false\\\"\\n          @hide=\\\"onMenuPopperHide\\\"\\n        >\\n          <el-menu :class=\\\"$contextmenu.menu\\\" @click=\\\"onMenuClick\\\">\\n            <el-menu-item-group :class=\\\"$contextmenu.group\\\" title=\\\"属性\\\">\\n              <el-menu-item :class=\\\"$contextmenu.item\\\" @click=\\\"onMenuFindUsage\\\">查找引用</el-menu-item>\\n              <el-menu-item\\n                :class=\\\"$contextmenu.item\\\"\\n                @click=\\\"onMenuDelete(removeItem)\\\"\\n                :disabled=\\\"\\n                  (menuSelectedItem && menuSelectedItem.primaryKey) ||\\n                  isOfficalEntityProperty({\\n                    naslNode: menuSelectedItem,\\n                  }) ||\\n                  isViewEntity\\n                \\\"\\n              >\\n                删除\\n              </el-menu-item>\\n            </el-menu-item-group>\\n          </el-menu>\\n        </el-popover>\\n      </div>\\n      <template v-if=\\\"selectedItem\\\">\\n        <div :class=\\\"[$style.flexgrid, $style.bodywrap1]\\\">\\n          <div :class=\\\"$style.gridcolumn\\\" class=\\\"extraForm\\\">\\n            <el-form\\n              ref=\\\"selectedItemForm\\\"\\n              :model=\\\"selectedItem\\\"\\n              :class=\\\"[$style.reffrom, $style.blockFromLayout, 's-data-attr-designer-form']\\\"\\n              label-width=\\\"85px\\\"\\n              label-position=\\\"right\\\"\\n              :inline=\\\"true\\\"\\n            >\\n              <!-- 最 大/小 值/长度 -->\\n              <skeleton-render\\n                name=\\\"views/data/components/entity-field-rules/index\\\"\\n                :property=\\\"selectedItem.naslNode\\\"\\n                :key=\\\"'rules_' + selectedItem.naslNode.name\\\"\\n                :disabled=\\\"\\n                  selectedItem.loading ||\\n                  selectedItem.naslNode.parentNode.loading ||\\n                  selectedItem.naslNode.editable === false ||\\n                  isViewEntity\\n                \\\"\\n                :is-view-entity=\\\"isViewEntity\\\"\\n                direction=\\\"horizontal\\\"\\n                :class=\\\"$style.rules\\\"\\n              />\\n              <!-- 小数位数 -->\\n              <el-form-item v-if=\\\"typeName === 'Decimal'\\\" label=\\\"小数位数\\\">\\n                <el-input-number\\n                  placeholder=\\\"请输入小数位数\\\"\\n                  :color=\\\"scaleErrorMsg ? 'error' : ''\\\"\\n                  v-model=\\\"model.scale\\\"\\n                  :min=\\\"scaleOption.min\\\"\\n                  :max=\\\"scaleOption.max\\\"\\n                  controls-position=\\\"right\\\"\\n                  :disabled=\\\"decimalDisabled(selectedItem) || isViewEntity\\\"\\n                  :value-on-clear=\\\"0\\\"\\n                  @keyup.enter=\\\"$event.target.blur()\\\"\\n                  @change=\\\"setScale\\\"\\n                ></el-input-number>\\n                <div v-if=\\\"scaleErrorMsg\\\" :class=\\\"$style.scaleErrorMsg\\\">\\n                  <s-others-icon name=\\\"solid-hint\\\"></s-others-icon>\\n                  {{ scaleErrorMsg }}\\n                </div>\\n              </el-form-item>\\n              <!-- 关联属性 -->\\n              <el-form-item :key=\\\"selectedItem.naslNode.name\\\">\\n                <template #label>\\n                  <div style=\\\"display: flex; align-items: center\\\">\\n                    关联属性\\n                    <s-others-icon name=\\\"link2\\\" :class=\\\"$style.iconLink2\\\"></s-others-icon>\\n                  </div>\\n                </template>\\n                <skeleton-render\\n                  name=\\\"views/data/entity-reference/index\\\"\\n                  :entity=\\\"entity\\\"\\n                  :property=\\\"selectedItem.naslNode\\\"\\n                  :value=\\\"entityReference\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  :data-type-list=\\\"selectedItem.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                  :error=\\\"isReleationEntityError(selectedItem.naslNode)\\\"\\n                  @save=\\\"onSaveReference\\\"\\n                  @clear=\\\"onClearReference\\\"\\n                />\\n              </el-form-item>\\n              <!-- 属性记录 -->\\n              <el-form-item\\n                label=\\\"关联属性实体记录删除规则\\\"\\n                v-if=\\\"selectedItem.naslNode.relationProperty\\\"\\n                layout=\\\"block\\\"\\n                class=\\\"relationDelRule\\\"\\n              >\\n                <el-select\\n                  style=\\\"width: 240px\\\"\\n                  v-model=\\\"selectedItem.naslNode.deleteRule\\\"\\n                  placeholder=\\\"请选择\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  @change=\\\"setDeleteRule\\\"\\n                >\\n                  <el-option label=\\\"不允许删除\\\" value=\\\"protect\\\"></el-option>\\n                  <el-option label=\\\"允许删除且同时删除本实体记录\\\" value=\\\"cascade\\\"></el-option>\\n                </el-select>\\n              </el-form-item>\\n              <!-- 主键生成规则 -->\\n              <el-form-item v-if=\\\"selectedItem.naslNode.primaryKey\\\" label=\\\"主键生成规则\\\" placement=\\\"bottom\\\">\\n                <skeleton-render\\n                  name=\\\"views/data/components/entity-primarykey-rules/index\\\"\\n                  :disabled=\\\"isViewEntity\\\"\\n                  :entity=\\\"entity\\\"\\n                  :selected-item=\\\"selectedItem.naslNode\\\"\\n                  @changeErrorMsgs=\\\"changeErrorMsgs\\\"\\n                />\\n              </el-form-item>\\n              <!-- 数据库列名 -->\\n              <el-form-item label=\\\"数据库列名\\\" placement=\\\"bottom\\\">\\n                <u-validator\\n                  ref=\\\"columnNameValidatorRef\\\"\\n                  style=\\\"width: 100%\\\"\\n                  :rules=\\\"entityPropertyColumnNameRules\\\"\\n                  :value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                  @blur-dirty-valid=\\\"selectedItem.naslNode.setColumnName($event.value)\\\"\\n                  v-slot=\\\"slotProps\\\"\\n                >\\n                  <s-input\\n                    :placeholder=\\\"entityPropertyColumnNamePlaceholder\\\"\\n                    :model-value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                    :disabled=\\\"isTableOrExcelOrigin || isViewEntity\\\"\\n                    @change=\\\"slotProps.blurChange\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                    @keyup.enter.stop=\\\"$event.target.blur()\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n              <!-- 描述 -->\\n              <el-form-item label=\\\"描述\\\" prop=\\\"description\\\">\\n                <u-validator\\n                  v-slot=\\\"slotProps\\\"\\n                  :value=\\\"selectedItem.naslNode.description\\\"\\n                  rules=\\\"maxLength(63)\\\"\\n                  :class=\\\"$style.validator\\\"\\n                  @blur-valid=\\\"onBlurDescription(selectedItem, $event.value)\\\"\\n                  @blur-invalid=\\\"errorScrollIntoView\\\"\\n                  @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                >\\n                  <s-input\\n                    type=\\\"textarea\\\"\\n                    ref=\\\"descriptionEditor\\\"\\n                    placeholder=\\\"请输入描述\\\"\\n                    :model-value=\\\"selectedItem.naslNode.description\\\"\\n                    :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                    @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                    @keyup.enter=\\\"slotProps.blurFn()\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n            </el-form>\\n          </div>\\n        </div>\\n        <div :class=\\\"$style.advancedWrap\\\" v-if=\\\"showDatabasetype\\\">\\n          <el-form :disabled=\\\"isViewEntity\\\" label-width=\\\"80px\\\" gap=\\\"small\\\" class=\\\"s-data-attr-designer-form\\\">\\n            <skeleton-render\\n              name=\\\"views/data/components/entity-property-databasetype/index\\\"\\n              :property=\\\"selectedItem.naslNode\\\"\\n            />\\n          </el-form>\\n        </div>\\n      </template>\\n      <div :class=\\\"$style.bodywrap1\\\" v-show=\\\"errorMsgs.length || sourceSyncErrMsgs.length\\\">\\n        <div v-for=\\\"errorMsg in errorMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n        <!-- 实体在同步数据源时产生的错误信息 -->\\n        <div v-for=\\\"errorMsg in sourceSyncErrMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- 查询弹出框 -->\\n    <el-popover\\n      :visible=\\\"reflowPopoverVisible\\\"\\n      :virtual-ref=\\\"labelEditor\\\"\\n      :show-arrow=\\\"false\\\"\\n      placement=\\\"bottom-start\\\"\\n      :width=\\\"340\\\"\\n      virtual-triggering\\n    >\\n      <div class=\\\"reflowPopover\\\" v-loading=\\\"reflowPopoverLoading\\\">\\n        <div class=\\\"reflowPopoverEmpty\\\" v-if=\\\"fieldList.length === 0\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"centerFlex\\\" style=\\\"font-size: 28px; margin-bottom: 20px\\\"></s-others-icon>\\n          <span class=\\\"centerFlex\\\">暂无推荐字段</span>\\n        </div>\\n        <div v-else>\\n          <el-scrollbar height=\\\"250px\\\">\\n            <div\\n              class=\\\"reflowPopoverItem\\\"\\n              v-for=\\\"item in fieldList\\\"\\n              :key=\\\"item.id\\\"\\n              @mouseenter=\\\"activeItem = item\\\"\\n              @mouseleave=\\\"activeItem = null\\\"\\n            >\\n              <el-row :gutter=\\\"10\\\">\\n                <el-col :span=\\\"9\\\" class=\\\"sle\\\">\\n                  <el-tooltip :content=\\\"item.name\\\" placement=\\\"top\\\" :show-after=\\\"500\\\" :disabled=\\\"!isTextOverflow\\\">\\n                    <div\\n                      class=\\\"tooltip-trigger\\\"\\n                      v-html=\\\"getFieldName(item.name, item.matchedNames)\\\"\\n                      @mouseenter=\\\"checkOverflow\\\"\\n                    ></div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col class=\\\"sle\\\" :span=\\\"8\\\">\\n                  <el-tooltip\\n                    :content=\\\"getFieldTypeTitle(item)\\\"\\n                    placement=\\\"top\\\"\\n                    :show-after=\\\"500\\\"\\n                    :disabled=\\\"!isTextOverflow\\\"\\n                  >\\n                    <div class=\\\"tooltip-trigger\\\" @mouseenter=\\\"checkOverflow\\\">{{ getFieldTypeTitle(item) }}</div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col :span=\\\"4\\\">\\n                  {{ item.required ? '必填' : '非必填' }}\\n                </el-col>\\n                <el-col :span=\\\"3\\\" v-show=\\\"activeItem?.id === item.id\\\" style=\\\"color: #2383ff\\\">使用</el-col>\\n              </el-row>\\n            </div>\\n          </el-scrollbar>\\n        </div>\\n        <div style=\\\"height: 18px; margin-top: 10px\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"warningIcon\\\"></s-others-icon>\\n          <span>输入_，可进行词根匹配</span>\\n        </div>\\n      </div>\\n    </el-popover>\\n    <!-- 添加至备选数据库字段库弹窗 -->\\n    <el-dialog v-model=\\\"reflowDialogVisible\\\" title=\\\"一键添加到备选字段库\\\" width=\\\"50%\\\">\\n      <el-table\\n        ref=\\\"reflowTableRef\\\"\\n        :data=\\\"reflowFieldList\\\"\\n        @select=\\\"handleSelectReflowField\\\"\\n        @select-all=\\\"handleSelectReflowField\\\"\\n      >\\n        <el-table-column type=\\\"selection\\\" width=\\\"40\\\" />\\n        <el-table-column label=\\\"字段注释\\\" prop=\\\"label\\\" />\\n        <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" />\\n        <el-table-column label=\\\"数据类型\\\" prop=\\\"type\\\" />\\n        <el-table-column label=\\\"是否必填\\\" prop=\\\"required\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ scope.row.required ? '是' : '否' }}</span>\\n          </template>\\n        </el-table-column>\\n        <el-table-column label=\\\"字段长度\\\" prop=\\\"length\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ getReflowFieldLength(scope.row) }}</span>\\n          </template>\\n        </el-table-column>\\n      </el-table>\\n      <template #footer>\\n        <div class=\\\"reflowDialogFooter\\\">\\n          <el-button\\n            type=\\\"primary\\\"\\n            :disabled=\\\"reflowConfirmBtnDisabled\\\"\\n            :loading=\\\"confirmLoading\\\"\\n            @click=\\\"handleUploadReflowField\\\"\\n          >\\n            确 定\\n          </el-button>\\n          <el-button @click=\\\"reflowDialogVisible = false\\\">取 消</el-button>\\n        </div>\\n      </template>\\n    </el-dialog>\\n  </div>\\n</template>\\n\\n<script setup>\\n  import { inject, onMounted, ref, nextTick } from 'vue';\\n  import { ElMessage, ClickOutside as vClickOutside } from 'element-plus';\\n  import { requestApi, getIsReflowField, getFieldList, getReflowFieldList, uploadReflowField } from '../apis';\\n  import { debounce } from '../utils';\\n\\n  const props = defineProps({\\n    entity: Object,\\n  });\\n\\n  const handleAddItem = () => {\\n    addItem();\\n    nextTick(() => {\\n      onSetItemEdit(selectedItem.value, 'label', true);\\n    });\\n  };\\n\\n  const showReflowBtn = ref(false);\\n\\n  const reflowPopoverVisible = ref(false);\\n  const fieldList = ref([]);\\n  const reflowQuery = ref('');\\n  const abortController = ref(null);\\n  const requestId = ref(0); // 用于标识当前请求\\n\\n  const debounceQueryFieldList = debounce(() => {\\n    // 设置loading状态\\n    reflowPopoverLoading.value = true;\\n\\n    // 取消之前的请求\\n    if (abortController.value) {\\n      abortController.value.abort();\\n    }\\n\\n    // 创建新的 AbortController 和请求ID\\n    abortController.value = new AbortController();\\n    const currentRequestId = ++requestId.value;\\n\\n    getFieldList({ query: reflowQuery.value }, abortController.value.signal)\\n      .then(res => {\\n        // 只有当前请求是最新的才更新数据\\n        if (currentRequestId === requestId.value) {\\n          fieldList.value = res.result || [];\\n        }\\n      })\\n      .catch(err => {\\n        if (err.name !== 'AbortError') {\\n          console.error(err);\\n        }\\n      })\\n      .finally(() => {\\n        // 只有当前请求是最新的才更新加载状态\\n        if (currentRequestId === requestId.value) {\\n          abortController.value = null;\\n          reflowPopoverLoading.value = false;\\n        }\\n      });\\n  }, 400);\\n\\n  const reflowPopoverLoading = ref(false);\\n  const activeItem = ref(null);\\n\\n  const getFieldName = (name, matchedNames) => {\\n    if (!name || typeof name !== 'string') return '';\\n    if (!Array.isArray(matchedNames)) return `<span style=\\\"color: red; font-weight: bold;\\\">${name}</span>`;\\n\\n    const matchedSet = new Set(matchedNames.filter(item => item && typeof item === 'string'));\\n    const parts = name.split(/(_+)/);\\n\\n    return parts\\n      .map(part => {\\n        if (part.startsWith('_')) return part;\\n        return matchedSet.has(part) ? part : `<span style=\\\"color: red; font-weight: bold;\\\">${part}</span>`;\\n      })\\n      .join('');\\n  };\\n\\n  const getFieldTypeTitle = item => {\\n    if (item.type === 'String') {\\n      const stringLabel = getStringLabel(item.length);\\n      return item.type + (stringLabel ? `  (${stringLabel})` : '');\\n    }\\n    return item.type;\\n  };\\n\\n  const columnNameValidatorRef = ref(null);\\n\\n  const handleUseField = item => {\\n    const target = selectedItem.value?.naslNode;\\n    if (target?.concept === 'EntityProperty') {\\n      target.app.emit('collect:start', { actionMsg: '数据建模插件更新字段名' });\\n      const newName = target.parentNode?.getPropertyUniqueName?.(item.name) || item.name; // 保证字段名唯一\\n      const typeName = item.type === 'Integer' ? 'Long' : item.type;\\n      const updateData = {\\n        name: newName,\\n        columnName: newName,\\n        required: item.required,\\n        typeAnnotation: {\\n          concept: 'TypeAnnotation',\\n          typeKind: 'primitive',\\n          typeNamespace: 'nasl.core',\\n          typeName,\\n        },\\n      };\\n      if (item.type === 'String' && item.length) {\\n        const minRule = target.toJSON().rules.find(rule => rule.startsWith('minLength'));\\n        Object.assign(updateData, {\\n          databaseTypeAnnotation: {\\n            concept: 'DatabaseTypeAnnotation',\\n            typeName: 'varchar',\\n            arguments: {\\n              length: item.length,\\n            },\\n          },\\n          rules: [minRule, `maxLength(${item.length})`].filter(Boolean),\\n        });\\n      }\\n      target.update(updateData);\\n      setTimeout(() => {\\n        // 延迟收集，把外层onBlurLabel的change也收集到这次的batchInstruct中\\n        target.app.emit('collect:end');\\n      });\\n\\n      nextTick(async () => {\\n        try {\\n          const res = await columnNameValidatorRef.value?.validate();\\n        } catch (error) {\\n          // console.error(error);\\n          // 新设置的字段名不符合规则，主动聚焦到输入框\\n          onSetItemEdit(selectedItem.value, 'name', true);\\n        }\\n      });\\n    }\\n  };\\n\\n  const handleLabelFocus = label => {\\n    reflowQuery.value = label;\\n  };\\n\\n  const handleLabelBlur = async (event, slotProps, item) => {\\n    reflowPopoverVisible.value = false;\\n    reflowQuery.value = '';\\n    fieldList.value = [];\\n\\n    event = event.replace(/_/g, ''); // event 去除掉_\\n\\n    slotProps.blurFn(event); // 触发模版中原来的失焦逻辑\\n    if (activeItem.value) {\\n      handleUseField(activeItem.value);\\n      activeItem.value = null;\\n    }\\n  };\\n\\n  const handleLabelInput = (event, slotProps) => {\\n    reflowPopoverVisible.value = true;\\n    reflowQuery.value = event;\\n    slotProps.inputChange(event); // 触发模版中原有的修改逻辑\\n    // 外置设置防抖查询loading状态\\n    reflowPopoverLoading.value = true;\\n    debounceQueryFieldList();\\n  };\\n\\n  onMounted(() => {\\n    getIsReflowField({}).then(res => {\\n      showReflowBtn.value = res.result;\\n    });\\n  });\\n\\n  // 一键添加到备选字段库\\n  const reflowLoading = ref(false);\\n  const reflowFieldList = ref([]);\\n\\n  const addReflowField = () => {\\n    reflowLoading.value = true;\\n\\n    const filterList = ['id', 'createdTime', 'updatedTime', 'createdBy', 'updatedBy'];\\n    const filterRegex = /^property\\\\d+$|^.*[\\\\u4e00-\\\\u9fa5].*$/;\\n\\n    const properties = props.entity?.toJSON()?.properties || [];\\n    const tempReflowFieldList = [];\\n    const nameSet = new Set();\\n    properties.forEach(property => {\\n      if (\\n        !property.label ||\\n        filterList.includes(property.name) ||\\n        filterRegex.test(property.name) ||\\n        property.typeAnnotation?.typeKind !== 'primitive'\\n      ) {\\n        return;\\n      }\\n      let type = property.typeAnnotation?.typeName || 'String';\\n      if (type === 'Long') type = 'Integer'; // 整数类型需要重命名为Integer\\n      const propertyName = property.name.replace(/\\\\d+$/, '') || '';\\n      if (nameSet.has(propertyName)) {\\n        return;\\n      }\\n      nameSet.add(propertyName);\\n      tempReflowFieldList.push({\\n        name: propertyName,\\n        label: property.label || '',\\n        required: property.required || false,\\n        type,\\n        length: type === 'String' ? property.databaseTypeAnnotation?.arguments?.length || 255 : void 0,\\n      });\\n    });\\n    reflowFieldList.value = tempReflowFieldList;\\n    if (reflowFieldList.length === 0) {\\n      reflowLoading.value = false;\\n      showMessage();\\n      return;\\n    }\\n\\n    // 备选库不需要校验字段唯一性，直接打开弹窗\\n    requestApi(\\n      getReflowFieldList,\\n      {\\n        list: tempReflowFieldList.map(item => ({\\n          name: item.name,\\n          label: item.label,\\n        })),\\n      },\\n      res => {\\n        if (res.result?.length === 0) {\\n          showMessage();\\n          return;\\n        } else {\\n          // 只有在res.result中的name，在tempReflowFieldList中存在，才显示\\n          const set = new Set(res.result);\\n          reflowFieldList.value = tempReflowFieldList.filter(item => set.has(item.name));\\n          reflowDialogVisible.value = true;\\n          nextTick(() => {\\n            reflowConfirmBtnDisabled.value = false;\\n            reflowTableRef.value.toggleAllSelection();\\n          });\\n        }\\n      },\\n      err => {\\n        console.error(err);\\n      },\\n      () => {\\n        reflowLoading.value = false;\\n      }\\n    );\\n    // reflowDialogVisible.value = true;\\n    // reflowLoading.value = false;\\n    // nextTick(() => {\\n    //   reflowConfirmBtnDisabled.value = false;\\n    //   reflowTableRef.value.toggleAllSelection();\\n    // });\\n  };\\n\\n  // 显示[暂无可回流到备选数据库的字段]消息\\n  const showMessage = (type = 'warning', msg = '暂无可回流到备选数据库的字段') => {\\n    ElMessage.closeAll();\\n    ElMessage[type](msg);\\n  };\\n\\n  const reflowDialogVisible = ref(false);\\n  const reflowTableRef = ref(null);\\n\\n  const getStringLabel = length => {\\n    const map = {\\n      255: '短 255',\\n      4000: '中 4000',\\n      16777215: '长 16777215',\\n    };\\n    return map[length] || length;\\n  };\\n  const getReflowFieldLength = row => {\\n    return row.type === 'String' ? getStringLabel(row.length) : '-';\\n  };\\n\\n  const reflowConfirmBtnDisabled = ref(false);\\n  const isTextOverflow = ref(false);\\n\\n  // 检测文本是否溢出\\n  const checkOverflow = event => {\\n    const element = event.target;\\n    isTextOverflow.value = element.scrollWidth > element.clientWidth;\\n  };\\n  const handleSelectReflowField = (selection, row) => {\\n    reflowConfirmBtnDisabled.value = selection.length === 0;\\n  };\\n\\n  const confirmLoading = ref(false);\\n  const handleUploadReflowField = () => {\\n    confirmLoading.value = true;\\n    const selectedList = reflowTableRef.value.getSelectionRows();\\n    requestApi(\\n      uploadReflowField,\\n      {\\n        list: selectedList,\\n      },\\n      res => {\\n        if (res.result) {\\n          showMessage('success', '添加成功');\\n          reflowDialogVisible.value = false;\\n        } else {\\n          showMessage('error', res.msg || '添加失败');\\n        }\\n      },\\n      err => {\\n        // console.error(err);\\n        showMessage('error', err);\\n      },\\n      () => {\\n        confirmLoading.value = false;\\n      }\\n    );\\n  };\\n\\n  const {\\n    /**\\n     * 名称输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    nameEditor,\\n    /**\\n     * 标题输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    labelEditor,\\n    /**\\n     * 描述输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    descriptionEditor,\\n    /**\\n     * 表格节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    tableviewRef,\\n    /**\\n     * 数据库视图导入生成的实体\\n     * entity 的 origin 属性是否是 view\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isViewEntity,\\n    /**\\n     * 添加实体属性\\n     *\\n     * @function\\n     */\\n    addItem,\\n    /**\\n     * 生成移除按钮的提示\\n     *\\n     * @function\\n     * @return string\\n     */\\n    getRemoveTooltip,\\n    /**\\n     * 表格选中的行元素\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    selectedItem,\\n    /**\\n     * 是否是官方实体属性\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntityProperty,\\n    /**\\n     * 移除实体索引\\n     *\\n     * @function\\n     * @param item - 需要删除的行元素\\n     */\\n    removeItem,\\n    /**\\n     * 表格的渲染数据\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    renderList,\\n    /**\\n     * 上移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveUpItem,\\n    /**\\n     * 下移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveDownItem,\\n    /**\\n     * 表格高度\\n     *\\n     * @type {Vue.computed<number>}\\n     */\\n    tableHeight,\\n    /**\\n     * 设置表单列的样式\\n     *\\n     * @function\\n     */\\n    setRowClassName,\\n    /**\\n     * 右键选中表格行元素\\n     *\\n     * @function\\n     */\\n    onContextMenuRow,\\n    /**\\n     * 选中行元素时触发\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    onSelectRowWithDataType,\\n    /**\\n     * 拖拽调整表格列宽度\\n     *\\n     * @function\\n     * @param newWidth - 新宽度\\n     * @param oldWidth - 旧宽度\\n     * @param column - 列元素\\n     */\\n    handleDragend,\\n    /**\\n     * 是否禁止编辑行元素\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    getDisable,\\n    /**\\n     * 设置表格列元素编辑状态\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 属性名称\\n     * @param focus - 是否选中输入框\\n     */\\n    onSetItemEdit,\\n    /**\\n     * Tab 键跳转切换下一个属性\\n     *\\n     * @function\\n     * @param event - 原生键盘事件\\n     * @param item - 行元素\\n     * @param name - 属性名称\\n     */\\n    onKeyUp,\\n    /**\\n     * 名称输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的名称\\n     */\\n    onBlurName,\\n    /**\\n     * 验证不通过时滚动到错误元素\\n     */\\n    errorScrollIntoView,\\n    /**\\n     * 存在错误\\n     *\\n     * @type {Vue.ref<boolean>}\\n     */\\n    hasInvalid,\\n    /**\\n     * 显示输入框的提示\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    tooltipOpened,\\n    /**\\n     * 属性名，暂时存储属性名，用于输入框输入等操作\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    itemNameValue,\\n    /**\\n     * 输入框获取焦点时触发\\n     *\\n     * 1. 设置tooltipOpened的值\\n     * 2. 设置itemNameValue\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     */\\n    onFocusName,\\n    /**\\n     * 标题输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的标题\\n     */\\n    onBlurLabel,\\n    /**\\n     * 是否应用正在发布\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isAppDeploying,\\n    /**\\n     * 是否实体已经发布过并且是复合类型\\n     *\\n     * 1. 实体已经发布过，在app下的depEntities可以找到该实体\\n     * 2. 实体是复合类型：'Map', 'List'，或者typeKind是reference并且namespace是'entities', 'structures'\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isPublishedComplexType,\\n    /**\\n     * 数据类型的标题\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return string\\n     */\\n    showDatatype,\\n    /**\\n     * 双击编辑数据类型输入框\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - 原生事件\\n     */\\n    onDblClickDatatype,\\n    /**\\n     * 获取可选类型\\n     *\\n     * @function\\n     * @return 可选类型\\n     */\\n    getDataTypeList,\\n    /**\\n     * 失焦时取消当前行元素编辑状态\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    handleBlur,\\n    /**\\n     * 修改实体属性类型\\n     *\\n     * @function\\n     * @param event - event.value 实际使用数据\\n     */\\n    onChangeDatatype,\\n    /**\\n     * 是否属于官方实体\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntity,\\n    /**\\n     * 复合类型\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isComplexType,\\n    /**\\n     * 修改是否必填\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkbox 原生事件\\n     */\\n    requireInput,\\n    /**\\n     * 能否设置默认值\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    canSetDefaultValue,\\n    /**\\n     * 对应节点是否有错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    IsError,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inTable,\\n    /**\\n     * 全部勾选或者取消全部勾选\\n     *\\n     * @function\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    toggleSelectAll,\\n    /**\\n     * 设置显示属性\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    setDisplay,\\n    /**\\n     * 显示在筛选\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inFilter,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inForm,\\n    /**\\n     * 显示在详情\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inDetail,\\n    /**\\n     * ElementPlus 的 popper 配置\\n     */\\n    popperOptions,\\n    /**\\n     * 右键菜单选中项\\n     *\\n     * @type {Vue.ref<object>}\\n     */\\n    menuSelectedItem,\\n    /**\\n     * 项对应的右键菜单是否存在\\n     */\\n    popperExistMap,\\n    /**\\n     * 项对应的右键菜单是否显示\\n     */\\n    popperVisibleMap,\\n    /**\\n     * 右键菜单的触发节点\\n     */\\n    triggerRef,\\n    /**\\n     * 右键菜单的出现位置\\n     */\\n    placement,\\n    /**\\n     * 右键菜单隐藏时的处理函数\\n     */\\n    onMenuPopperHide,\\n    /**\\n     * 菜单点击时\\n     */\\n    onMenuClick,\\n    /**\\n     * 菜单-查找引用\\n     *\\n     * @function\\n     */\\n    onMenuFindUsage,\\n    /**\\n     * 菜单-删除\\n     *\\n     * @function\\n     */\\n    onMenuDelete,\\n    /**\\n     * 实体属性数据类型\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    typeName,\\n    /**\\n     * 小数位数的校验错误信息\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    scaleErrorMsg,\\n    /**\\n     * 属性的响应式数据\\n     *\\n     * @type {Vue.reactive<object>}\\n     * @property scale - 小数位数\\n     */\\n    model,\\n    /**\\n     * 小数位数的范围\\n     *\\n     * @type {Vue.computed<object>}\\n     * @property min - 最小值\\n     * @property max - 最大值\\n     */\\n    scaleOption,\\n    /**\\n     * 是否禁用小数位数\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return boolean\\n     */\\n    decimalDisabled,\\n    /**\\n     * 修改小数位数\\n     *\\n     * @function\\n     */\\n    setScale,\\n    /**\\n     * 关联属性\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    entityReference,\\n    /**\\n     * 类型列表\\n     *\\n     * @type {Vue.ref<array>}\\n     */\\n    dataTypeList,\\n    /**\\n     * 关联实体存在错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    isReleationEntityError,\\n    /**\\n     * 设置关联属性\\n     *\\n     * @function\\n     * @param event - event.value 表示实际数据\\n     */\\n    onSaveReference,\\n    /**\\n     * 清除关联属性\\n     *\\n     * @function\\n     */\\n    onClearReference,\\n    /**\\n     * 设置关联属性实体记录删除规则\\n     *\\n     * @function\\n     * @param event - 选中事件对象\\n     */\\n    setDeleteRule,\\n    /**\\n     * 设置错误信息\\n     *\\n     * @function\\n     * @param errorMsgs - 错误信息\\n     */\\n    changeErrorMsgs,\\n    /**\\n     * 是否来源于数据库表/excel\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isTableOrExcelOrigin,\\n    /**\\n     * 描述输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的描述\\n     */\\n    onBlurDescription,\\n    /**\\n     * 是否显示数据库高级设置\\n     *\\n     * 1.没有设置数据源\\n     * 2.实体是excel导入或者数据源反向导入\\n     * 3.权限实体（贤宇说一直是以LCAP开头来判断的）\\n     * 这3种情况不显示数据库设置\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    showDatabasetype,\\n    /**\\n     * 实体在同步数据源时产生的错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    sourceSyncErrMsgs,\\n    /**\\n     * 错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    errorMsgs,\\n    /**\\n     * 数据库列名校验规则\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    entityPropertyColumnNameRules,\\n    /**\\n     * 数据库列名输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyColumnNamePlaceholder,\\n    /**\\n     * 生成名称校验规则\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return 名称校验规则\\n     */\\n    getEntityPropertyRules,\\n    /**\\n     * 名称输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyPlaceholder,\\n    /**\\n     * 设置选中行的数据类型\\n     *\\n     * @function\\n     * @param value - 数据类型\\n     */\\n    setDataType,\\n  } = inject('$context');\\n</script>\\n\\n<style module=\\\"$propertyDesigner\\\">\\n  .errorMsg {\\n    color: var(--designer-font-second-color);\\n    margin: 0 46px;\\n  }\\n\\n  .errorMsg + .errorMsg {\\n    margin-top: 10px;\\n  }\\n\\n  .infoicon {\\n    display: inline-block;\\n    height: 12px;\\n    width: 12px;\\n    background: var(--assets-warning-info-svg) no-repeat;\\n    background-size: 100% 100%;\\n    vertical-align: -1px;\\n    margin-right: 5px;\\n  }\\n</style>\\n\\n<style module>\\n  div.table [class^='u-input__']:focus,\\n  div.table [class^='u-input__'][focus],\\n  div.table [class^='u-input__']:hover,\\n  div.table [class^='u-select__']:focus,\\n  div.table [class^='u-select__'][focus],\\n  div.table [class^='u-select__'][opened],\\n  div.table [class^='u-select__']:hover {\\n    border-color: var(--entity-designer-table-input-focus-border-color);\\n    box-shadow: var(--entity-designer-table-input-focus-box-shadow);\\n  }\\n\\n  .head {\\n    margin: 16px;\\n    padding: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n  }\\n\\n  div.head [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  .body {\\n    margin: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n    overflow: hidden;\\n  }\\n\\n  .entityListIcon {\\n    width: 16px;\\n    height: 16px;\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .edit {\\n    display: inline-block;\\n    width: 100%;\\n    line-height: 38px;\\n  }\\n\\n  .edit:hover {\\n    cursor: pointer;\\n  }\\n\\n  .edit:focus {\\n    outline: none;\\n  }\\n\\n  .edit .text > span {\\n    color: var(--entity-designer-table-color);\\n  }\\n\\n  .edit .text {\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .editwrap {\\n    margin-left: -9px;\\n  }\\n\\n  .editwrap [class^='s-datatype-select__'] {\\n    vertical-align: middle;\\n  }\\n\\n  .text {\\n    width: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n  }\\n\\n  .textContent {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n    max-width: calc(100% - 28px);\\n    margin-right: 8px;\\n  }\\n  .textContent:empty {\\n    display: none;\\n  }\\n\\n  .text > span {\\n    display: inline-block;\\n    color: var(--entity-designer-table-disabled-color);\\n    vertical-align: middle;\\n  }\\n\\n  .validator {\\n    width: 100%;\\n  }\\n\\n  .btnnav {\\n    border-bottom: 1px solid var(--entity-designer-border-color);\\n    border-top: 1px solid var(--entity-designer-border-color);\\n    padding: 5px 24px;\\n  }\\n\\n  div.btnnav[direction='horizontal'][gap='small'] > :not(:last-child) {\\n    margin-right: 8px;\\n  }\\n\\n  .btnnav1 {\\n    border-top: none;\\n    background-color: var(--entity-designer-btnnav-background);\\n  }\\n\\n  .bodywrap {\\n    padding: 16px 24px 0;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    margin-bottom: 24px;\\n  }\\n\\n  div.bodywrap [class^='u-grid-layout_column__'] {\\n    padding-bottom: 0;\\n  }\\n\\n  .bodywrap1 {\\n    padding: 16px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .advancedWrap {\\n    padding: 10px 24px 25px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .entityfrom [class^='u-form_item_label__'] {\\n    width: 36px !important;\\n  }\\n\\n  div.input {\\n    width: 100%;\\n    margin-right: 12px;\\n  }\\n\\n  .iconBase {\\n    display: inline-block;\\n    width: 20px;\\n    height: 38px;\\n    line-height: 38px;\\n    text-align: center;\\n    font-size: var(--font-size-large);\\n    font-size: 14px;\\n  }\\n\\n  .iconKey {\\n    color: var(--designer-table-edit-icon-key-color);\\n  }\\n\\n  .iconLink {\\n    color: var(--designer-table-edit-icon-link-color);\\n  }\\n\\n  .iconEdit {\\n    color: var(--color-base);\\n    opacity: 0;\\n  }\\n\\n  .iconLink2 {\\n    display: inline-block;\\n    width: 16px;\\n    height: 16px;\\n    line-height: 16px;\\n    font-size: var(--font-size-huge);\\n    color: var(--brand-primary);\\n    cursor: pointer;\\n    position: relative;\\n    top: 2px;\\n    left: 4px;\\n  }\\n\\n  .edit:hover .iconEdit {\\n    opacity: 0.6;\\n    cursor: pointer;\\n  }\\n\\n  .edit:hover .iconEdit:hover {\\n    opacity: 1;\\n  }\\n\\n  .icon {\\n    width: 14px;\\n    height: 14px;\\n    display: inline-block;\\n    vertical-align: middle;\\n    background-repeat: no-repeat;\\n  }\\n\\n  div.normalfrom [class^='u-form_item_label__'] {\\n    width: 60px !important;\\n  }\\n\\n  div.normalfrom > div {\\n    margin-bottom: 16px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'],\\n  div.normalfrom [class^='u-select__'],\\n  div.normalfrom [class^='u-form_item_field__'],\\n  div.normalfrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom [class^='u-form_item_label__'] {\\n    width: 94px !important;\\n  }\\n\\n  div.reffrom [class^='u-input__'],\\n  div.reffrom [class^='u-tree-select__'],\\n  div.reffrom [class^='u-select__'],\\n  div.reffrom [class^='u-form_item_field__'],\\n  div.reffrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.reffrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom .text {\\n    opacity: 0.3;\\n  }\\n\\n  div.reffrom [class^='u-form_item_extra__'] {\\n    width: 12px;\\n  }\\n\\n  .flexgrid {\\n    display: flex;\\n  }\\n\\n  .gridcolumn {\\n    width: auto;\\n  }\\n\\n  .gridcolumn:not(:last-child) {\\n    margin-right: 24px;\\n  }\\n\\n  div.fixedwidthinput,\\n  div.textarea {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  .icondivider {\\n    color: var(--entity-designer-border-color);\\n  }\\n\\n  .advanced {\\n    padding-top: 10px;\\n  }\\n\\n  .scaleErrorMsg {\\n    position: absolute;\\n    color: rgb(242, 73, 87);\\n  }\\n  .typeError {\\n    border-radius: 4px;\\n    border: 1px solid var(--input-border-color-error);\\n  }\\n  .checkbox [class='el-checkbox__label'] {\\n    line-height: 23px;\\n    font-size: 12px;\\n    text-overflow: ellipsis;\\n    text-align: left;\\n    font-weight: 600;\\n    color: var(--el-table-header-text-color);\\n  }\\n  .checkbolabel [class='el-checkbox__label'] {\\n    line-height: 23px !important;\\n    font-size: 12px !important;\\n    text-overflow: ellipsis !important;\\n    text-align: left !important;\\n    font-weight: 600 !important;\\n    color: var(--el-table-header-text-color) !important;\\n  }\\n  .checkbox {\\n    height: 23px;\\n    line-height: 23px;\\n  }\\n</style>\\n<style module=\\\"$contextmenu\\\">\\n  .menu {\\n    margin-top: 0 !important;\\n  }\\n\\n  .menu .group [class^='el-menu-item-group__title'] {\\n    --el-menu-text-color: var(--el-menu-top-title-text-color);\\n    height: 32px;\\n    font-weight: bold;\\n    border-bottom: 1px solid var(--line-color-regular);\\n    background: var(--fill-color-thead);\\n    color: var(--el-menu-text-color);\\n    cursor: auto;\\n  }\\n</style>\\n\\n<style scoped>\\n  .tableCell :deep(.cell) {\\n    padding: 0;\\n    line-height: 20px;\\n    padding-left: 6px;\\n  }\\n  .theadLable {\\n    overflow: visible;\\n    width: 100%;\\n    padding-left: 6px;\\n    border-right: 1px solid var(--entity-designer-property-dragger-border-color);\\n  }\\n  .topIconGroup {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-start;\\n    gap: 8px;\\n    background-color: var(--entity-designer-icon-group-background-color);\\n    padding: 5px 24px;\\n    border-bottom: 1px solid var(--entity-designer-icon-group-border-color);\\n    position: sticky;\\n    z-index: 9;\\n    top: 64px;\\n  }\\n\\n  .icon {\\n    margin-right: 8px;\\n  }\\n\\n  .extraForm :deep(.el-form-item__label) {\\n    font-size: 12px;\\n  }\\n\\n  :deep(.row-style) {\\n    border: 1px solid #4d87fe;\\n  }\\n\\n  :deep(.cell-style) {\\n    border-bottom: 1px solid #409eff;\\n  }\\n\\n  .elFormFlex {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center;\\n    flex-wrap: wrap;\\n  }\\n</style>\\n\\n<style scoped>\\n  .reflowPopover {\\n    width: 340px;\\n    padding: 8px;\\n  }\\n\\n  .reflowPopoverEmpty {\\n    padding: 20px 0 30px;\\n  }\\n\\n  .reflowPopoverItem {\\n    height: 48px;\\n    line-height: 48px;\\n    padding: 0 12px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    &:hover {\\n      background-color: #edf2f9;\\n    }\\n  }\\n\\n  .warningIcon {\\n    margin-right: 4px;\\n  }\\n\\n  .reflowDialogFooter {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 居中对齐flex布局 */\\n  .centerFlex {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 单行文本溢出省略号 */\\n  .sle,\\n  [sle] {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n\\n  /* tooltip触发器样式 */\\n  .tooltip-trigger {\\n    width: 100%;\\n    height: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"errorMsg\": `EntityPropertyDesigner__errorMsg--U135D`,\n\t\"infoicon\": `EntityPropertyDesigner__infoicon--uVHId`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\ndiv.EntityPropertyDesigner__table--DAcgg [class^='u-input__']:focus,\n  div.EntityPropertyDesigner__table--DAcgg [class^='u-input__'][focus],\n  div.EntityPropertyDesigner__table--DAcgg [class^='u-input__']:hover,\n  div.EntityPropertyDesigner__table--DAcgg [class^='u-select__']:focus,\n  div.EntityPropertyDesigner__table--DAcgg [class^='u-select__'][focus],\n  div.EntityPropertyDesigner__table--DAcgg [class^='u-select__'][opened],\n  div.EntityPropertyDesigner__table--DAcgg [class^='u-select__']:hover {\n    border-color: var(--entity-designer-table-input-focus-border-color);\n    box-shadow: var(--entity-designer-table-input-focus-box-shadow);\n}\n.EntityPropertyDesigner__head--gPuC3 {\n    margin: 16px;\n    padding: 16px;\n    background: var(--entity-designer-panel-background-color);\n    border: 1px solid var(--entity-designer-border-color);\n}\ndiv.EntityPropertyDesigner__head--gPuC3 [class^='u-input__'] {\n    height: 32px;\n    line-height: 30px;\n}\n.EntityPropertyDesigner__body--EvBMI {\n    margin: 16px;\n    background: var(--entity-designer-panel-background-color);\n    border: 1px solid var(--entity-designer-border-color);\n    overflow: hidden;\n}\n.EntityPropertyDesigner__entityListIcon--kBERs {\n    width: 16px;\n    height: 16px;\n    display: inline-block;\n    vertical-align: middle;\n}\n.EntityPropertyDesigner__edit--ClOqV {\n    display: inline-block;\n    width: 100%;\n    line-height: 38px;\n}\n.EntityPropertyDesigner__edit--ClOqV:hover {\n    cursor: pointer;\n}\n.EntityPropertyDesigner__edit--ClOqV:focus {\n    outline: none;\n}\n.EntityPropertyDesigner__edit--ClOqV .EntityPropertyDesigner__text--qpPcJ > span {\n    color: var(--entity-designer-table-color);\n}\n.EntityPropertyDesigner__edit--ClOqV .EntityPropertyDesigner__text--qpPcJ {\n    display: inline-block;\n    vertical-align: middle;\n}\n.EntityPropertyDesigner__editwrap--ZGrYT {\n    margin-left: -9px;\n}\n.EntityPropertyDesigner__editwrap--ZGrYT [class^='s-datatype-select__'] {\n    vertical-align: middle;\n}\n.EntityPropertyDesigner__text--qpPcJ {\n    width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    word-break: break-all;\n}\n.EntityPropertyDesigner__textContent--ixaXm {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    word-break: break-all;\n    max-width: calc(100% - 28px);\n    margin-right: 8px;\n}\n.EntityPropertyDesigner__textContent--ixaXm:empty {\n    display: none;\n}\n.EntityPropertyDesigner__text--qpPcJ > span {\n    display: inline-block;\n    color: var(--entity-designer-table-disabled-color);\n    vertical-align: middle;\n}\n.EntityPropertyDesigner__validator--PFrhM {\n    width: 100%;\n}\n.EntityPropertyDesigner__btnnav--iOokw {\n    border-bottom: 1px solid var(--entity-designer-border-color);\n    border-top: 1px solid var(--entity-designer-border-color);\n    padding: 5px 24px;\n}\ndiv.EntityPropertyDesigner__btnnav--iOokw[direction='horizontal'][gap='small'] > :not(:last-child) {\n    margin-right: 8px;\n}\n.EntityPropertyDesigner__btnnav1--E5h5W {\n    border-top: none;\n    background-color: var(--entity-designer-btnnav-background);\n}\n.EntityPropertyDesigner__bodywrap--VKO0H {\n    padding: 16px 24px 0;\n    overflow-x: auto;\n    overflow-y: hidden;\n    margin-bottom: 24px;\n}\ndiv.EntityPropertyDesigner__bodywrap--VKO0H [class^='u-grid-layout_column__'] {\n    padding-bottom: 0;\n}\n.EntityPropertyDesigner__bodywrap1--zpK7G {\n    padding: 16px 24px;\n    background-color: var(--entity-designer-body-background);\n}\n.EntityPropertyDesigner__advancedWrap--ffldQ {\n    padding: 10px 24px 25px 24px;\n    background-color: var(--entity-designer-body-background);\n}\n.EntityPropertyDesigner__entityfrom--fqGAy [class^='u-form_item_label__'] {\n    width: 36px !important;\n}\ndiv.EntityPropertyDesigner__input--bg7Vc {\n    width: 100%;\n    margin-right: 12px;\n}\n.EntityPropertyDesigner__iconBase--F4Nxz {\n    display: inline-block;\n    width: 20px;\n    height: 38px;\n    line-height: 38px;\n    text-align: center;\n    font-size: var(--font-size-large);\n    font-size: 14px;\n}\n.EntityPropertyDesigner__iconKey--lPb7Y {\n    color: var(--designer-table-edit-icon-key-color);\n}\n.EntityPropertyDesigner__iconLink--lAthw {\n    color: var(--designer-table-edit-icon-link-color);\n}\n.EntityPropertyDesigner__iconEdit--jRzSd {\n    color: var(--color-base);\n    opacity: 0;\n}\n.EntityPropertyDesigner__iconLink2--EYHwI {\n    display: inline-block;\n    width: 16px;\n    height: 16px;\n    line-height: 16px;\n    font-size: var(--font-size-huge);\n    color: var(--brand-primary);\n    cursor: pointer;\n    position: relative;\n    top: 2px;\n    left: 4px;\n}\n.EntityPropertyDesigner__edit--ClOqV:hover .EntityPropertyDesigner__iconEdit--jRzSd {\n    opacity: 0.6;\n    cursor: pointer;\n}\n.EntityPropertyDesigner__edit--ClOqV:hover .EntityPropertyDesigner__iconEdit--jRzSd:hover {\n    opacity: 1;\n}\n.EntityPropertyDesigner__icon--cAvU8 {\n    width: 14px;\n    height: 14px;\n    display: inline-block;\n    vertical-align: middle;\n    background-repeat: no-repeat;\n}\ndiv.EntityPropertyDesigner__normalfrom--XxBVw [class^='u-form_item_label__'] {\n    width: 60px !important;\n}\ndiv.EntityPropertyDesigner__normalfrom--XxBVw > div {\n    margin-bottom: 16px;\n}\ndiv.EntityPropertyDesigner__normalfrom--XxBVw [class^='u-input__'],\n  div.EntityPropertyDesigner__normalfrom--XxBVw [class^='u-select__'],\n  div.EntityPropertyDesigner__normalfrom--XxBVw [class^='u-form_item_field__'],\n  div.EntityPropertyDesigner__normalfrom--XxBVw [class^='u-form_item_wrap__'] {\n    width: 240px;\n    max-width: 240px;\n}\ndiv.EntityPropertyDesigner__normalfrom--XxBVw [class^='u-input__'] {\n    height: 32px;\n    line-height: 30px;\n}\ndiv.EntityPropertyDesigner__reffrom--qgC1O [class^='u-form_item_label__'] {\n    width: 94px !important;\n}\ndiv.EntityPropertyDesigner__reffrom--qgC1O [class^='u-input__'],\n  div.EntityPropertyDesigner__reffrom--qgC1O [class^='u-tree-select__'],\n  div.EntityPropertyDesigner__reffrom--qgC1O [class^='u-select__'],\n  div.EntityPropertyDesigner__reffrom--qgC1O [class^='u-form_item_field__'],\n  div.EntityPropertyDesigner__reffrom--qgC1O [class^='u-form_item_wrap__'] {\n    width: 240px;\n    max-width: 240px;\n}\ndiv.EntityPropertyDesigner__reffrom--qgC1O [class^='u-input__'] {\n    height: 32px;\n    line-height: 30px;\n}\ndiv.EntityPropertyDesigner__reffrom--qgC1O .EntityPropertyDesigner__text--qpPcJ {\n    opacity: 0.3;\n}\ndiv.EntityPropertyDesigner__reffrom--qgC1O [class^='u-form_item_extra__'] {\n    width: 12px;\n}\n.EntityPropertyDesigner__flexgrid--vqhTk {\n    display: flex;\n}\n.EntityPropertyDesigner__gridcolumn--QtlHd {\n    width: auto;\n}\n.EntityPropertyDesigner__gridcolumn--QtlHd:not(:last-child) {\n    margin-right: 24px;\n}\ndiv.EntityPropertyDesigner__fixedwidthinput--NnYfy,\n  div.EntityPropertyDesigner__textarea--QDNlf {\n    width: 240px;\n    max-width: 240px;\n}\n.EntityPropertyDesigner__icondivider--u945n {\n    color: var(--entity-designer-border-color);\n}\n.EntityPropertyDesigner__advanced--izAOk {\n    padding-top: 10px;\n}\n.EntityPropertyDesigner__scaleErrorMsg--Z_N_y {\n    position: absolute;\n    color: rgb(242, 73, 87);\n}\n.EntityPropertyDesigner__typeError--nNcks {\n    border-radius: 4px;\n    border: 1px solid var(--input-border-color-error);\n}\n.EntityPropertyDesigner__checkbox--sXVL8 [class='el-checkbox__label'] {\n    line-height: 23px;\n    font-size: 12px;\n    text-overflow: ellipsis;\n    text-align: left;\n    font-weight: 600;\n    color: var(--el-table-header-text-color);\n}\n.EntityPropertyDesigner__checkbolabel--SDk5N [class='el-checkbox__label'] {\n    line-height: 23px !important;\n    font-size: 12px !important;\n    text-overflow: ellipsis !important;\n    text-align: left !important;\n    font-weight: 600 !important;\n    color: var(--el-table-header-text-color) !important;\n}\n.EntityPropertyDesigner__checkbox--sXVL8 {\n    height: 23px;\n    line-height: 23px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/EntityPropertyDesigner.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div\\n      v-if=\\\"!isViewEntity\\\"\\n      class=\\\"topIconGroup\\\"\\n      :class=\\\"$style.body\\\"\\n      style=\\\"margin-top: 0px; margin-bottom: 0px; border-bottom: 0px; height: 40px\\\"\\n    >\\n      <!-- 添加实体属性 -->\\n      <s-others-icon name=\\\"add\\\" tooltip=\\\"添加属性\\\" button @click=\\\"handleAddItem\\\"></s-others-icon>\\n      <!-- 删除实体属性 -->\\n      <s-others-icon\\n        name=\\\"remove\\\"\\n        button\\n        :tooltip=\\\"getRemoveTooltip()\\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          selectedItem.naslNode.primaryKey ||\\n          isOfficalEntityProperty(selectedItem)\\n        \\\"\\n        @click=\\\"removeItem(selectedItem)\\\"\\n      ></s-others-icon>\\n      <div :class=\\\"$style.icondivider\\\">|</div>\\n      <!-- 上移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-up\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置顶'\\n            : '上移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveUpItem\\\"\\n      ></s-others-icon>\\n      <!-- 下移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-down\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置底'\\n            : '下移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveDownItem\\\"\\n      ></s-others-icon>\\n      <!-- 一键添加到备选字段库 -->\\n      <el-button v-if=\\\"showReflowBtn\\\" :loading=\\\"reflowLoading\\\" @click=\\\"addReflowField\\\">一键添加到备选字段库</el-button>\\n    </div>\\n    <div :class=\\\"$style.body\\\" style=\\\"margin-top: 0px\\\">\\n      <div :class=\\\"$style.bodywrap\\\" class=\\\"tableCell\\\">\\n        <el-table\\n          ref=\\\"tableviewRef\\\"\\n          :data=\\\"renderList\\\"\\n          highlight-current-row\\n          :style=\\\"`min-width:950px;${tableHeight}`\\\"\\n          style=\\\"width: 100%\\\"\\n          :class=\\\"\\n            renderList.length > 8\\n              ? [$style.table, $style.tablescroll, 's-data-table-edit']\\n              : [$style.table, 's-data-table-edit']\\n          \\\"\\n          :value=\\\"selectedItem && selectedItem.naslNode.name\\\"\\n          value-field=\\\"name\\\"\\n          :header-row-style=\\\"{ height: '40px' }\\\"\\n          :cell-style=\\\"{ padding: '0px' }\\\"\\n          :row-style=\\\"{ height: '42px' }\\\"\\n          :row-class-name=\\\"setRowClassName\\\"\\n          empty-text=\\\"暂无数据\\\"\\n          @row-contextmenu=\\\"onContextMenuRow\\\"\\n          @row-click=\\\"onSelectRowWithDataType\\\"\\n          @header-dragend=\\\"handleDragend\\\"\\n          @click.right.prevent\\n          :border=\\\"true\\\"\\n        >\\n          <!-- 主键/关联属性的icon -->\\n          <el-table-column width=\\\"38\\\" prop=\\\"primaryKey\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.primaryKey\\\"\\n                  name=\\\"key\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconKey]\\\"\\n                ></s-others-icon>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.relationProperty\\\"\\n                  name=\\\"link\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconLink]\\\"\\n                ></s-others-icon>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 标题 -->\\n          <el-table-column prop=\\\"label\\\" min-width=\\\"107\\\" label=\\\"字段注释\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段注释</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!item.loading && !item.naslNode.parentNode.loading && !isViewEntity\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'label'\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                  tabindex=\\\"0\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'label')\\\"\\n                  :title=\\\"item.naslNode.label\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.label }}</span>\\n                    <s-others-icon\\n                      v-show=\\\"!isOfficalEntityProperty(item)\\\"\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    ref=\\\"labelValidatorRef\\\"\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.label\\\"\\n                    rules=\\\"maxLength(63)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurLabel(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <s-input\\n                      placeholder=\\\"请输入标题\\\"\\n                      :model-value=\\\"item.naslNode.label\\\"\\n                      ref=\\\"labelEditor\\\"\\n                      :class=\\\"$style.input\\\"\\n                      @focus=\\\"handleLabelFocus(item.naslNode.label)\\\"\\n                      @blur:value=\\\"handleLabelBlur($event, slotProps, item)\\\"\\n                      @input=\\\"handleLabelInput($event, slotProps)\\\"\\n                      @keyup.enter=\\\"$event.target.blur()\\\"\\n                    ></s-input>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <!-- 之前仅仅为 item.label 但是实际上在item 对象中没有label属性，恐在特殊情况下存在，故范围限制为 区分 viewEntity -->\\n                <span>{{ isViewEntity ? item.naslNode.label : item.label }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 名称 -->\\n          <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" min-width=\\\"87\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段名</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!getDisable(item)\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'name'\\\"\\n                  tabindex=\\\"0\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  :title=\\\"item.naslNode.name\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'name')\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.name }}</span>\\n                    <s-others-icon\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.name\\\"\\n                    :rules=\\\"getEntityPropertyRules(item.naslNode)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurName(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <!-- “属性名”为空是显示提示信息 -->\\n                    <el-tooltip\\n                      :visible=\\\"tooltipOpened === 'entityAttribute' && !itemNameValue\\\"\\n                      placement=\\\"top-start\\\"\\n                      content=\\\"属性为英文字母、数字和下划线，且首字母小写\\\"\\n                    >\\n                      <s-input\\n                        :placeholder=\\\"entityPropertyPlaceholder\\\"\\n                        :model-value=\\\"item.naslNode.name\\\"\\n                        ref=\\\"nameEditor\\\"\\n                        :class=\\\"$style.input\\\"\\n                        @focus=\\\"onFocusName(item)\\\"\\n                        @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                        @input=\\\"slotProps.inputChange($event)\\\"\\n                        @keyup.enter=\\\"$event.target.blur()\\\"\\n                        @update:modelValue=\\\"itemNameValue = $event\\\"\\n                      ></s-input>\\n                    </el-tooltip>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <span>{{ item.naslNode.name }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 数据类型 -->\\n          <el-table-column label=\\\"数据类型\\\" min-width=\\\"247\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">数据类型</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <el-tooltip v-if=\\\"isAppDeploying\\\" content=\\\"应用发布中，暂不能修改\\\" placement=\\\"bottom-start\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </el-tooltip>\\n                <!-- 禁用状态 / 已经发布过的复合类型 -->\\n                <template v-else-if=\\\"getDisable(item) || isPublishedComplexType(item)\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </template>\\n                <!-- 非禁用状态 -->\\n                <template v-else>\\n                  <!-- 展示态 -->\\n                  <div\\n                    v-if=\\\"item.edit !== 'datatype'\\\"\\n                    tabindex=\\\"0\\\"\\n                    :class=\\\"$style.edit\\\"\\n                    :ref=\\\"`datatype${item.naslNode.id}`\\\"\\n                    :title=\\\"showDatatype(item)\\\"\\n                    @dblclick=\\\"onDblClickDatatype(item, $event)\\\"\\n                    @keyup=\\\"onKeyUp($event, item, 'datatype')\\\"\\n                  >\\n                    <div :class=\\\"$style.text\\\">\\n                      <span :class=\\\"$style.textContent\\\">{{ showDatatype(item) }}</span>\\n                      <s-others-icon\\n                        name=\\\"edit\\\"\\n                        :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                        @click=\\\"(getDataTypeList(), onSetItemEdit(item, 'datatype', false))\\\"\\n                      ></s-others-icon>\\n                    </div>\\n                  </div>\\n                  <!-- 编辑态 -->\\n                  <div v-else :class=\\\"$style.editwrap\\\">\\n                    <el-tooltip :content=\\\"`${isAppDeploying ? '应用发布中，暂不能修改' : ''}`\\\" placement=\\\"bottom-start\\\">\\n                      <s-datatype-select\\n                        :unionable=\\\"false\\\"\\n                        :no-union-subtype=\\\"true\\\"\\n                        :data-type-list=\\\"item.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                        :last-version=\\\"item.naslNode.lastVersion\\\"\\n                        :type-annotation=\\\"item.naslNode.typeAnnotation\\\"\\n                        :concept=\\\"item.naslNode.entity.concept\\\"\\n                        :show-system-types=\\\"false\\\"\\n                        :show-generic-types=\\\"true\\\"\\n                        :show-entity=\\\"true\\\"\\n                        :show-structures=\\\"true\\\"\\n                        :emptyable=\\\"false\\\"\\n                        :hasAnonymousStructure=\\\"true\\\"\\n                        :disabled=\\\"item.naslNode.readonly || isAppDeploying || isPublishedComplexType(item)\\\"\\n                        @blur=\\\"handleBlur(item)\\\"\\n                        @change=\\\"onChangeDatatype\\\"\\n                      ></s-datatype-select>\\n                    </el-tooltip>\\n                  </div>\\n                </template>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 是否必填 -->\\n          <el-table-column label=\\\"是否必填\\\" width=\\\"70\\\" prop=\\\"required\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else style=\\\"margin-left: 16px\\\">\\n                <el-checkbox\\n                  v-model=\\\"item.naslNode.required\\\"\\n                  :disabled=\\\"getDisable(item) || isComplexType(item) || isOfficalEntity(item)\\\"\\n                  :tabindex=\\\"item.editable === false || item.loading || item.naslNode.parentNode.loading ? -1 : 0\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"requireInput(item, $event)\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 默认值 -->\\n          <el-table-column label=\\\"默认值\\\" prop=\\\"defaultValue\\\" width=\\\"120\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item }\\\">\\n              <div v-if=\\\"['createdTime', 'updatedTime'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>自动生成</span>\\n              </div>\\n              <div v-else-if=\\\"['createdBy', 'updatedBy'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>（无）</span>\\n              </div>\\n              <template v-else-if=\\\"!canSetDefaultValue(item)\\\">\\n                <div :class=\\\"$style.text\\\">\\n                  <span>（无）</span>\\n                </div>\\n              </template>\\n              <template\\n                v-else-if=\\\"\\n                  item.loading || item.naslNode.parentNode.loading || item.naslNode.generationRule !== 'manual'\\n                \\\"\\n              >\\n                <div :class=\\\"$style.text\\\">\\n                  <div :class=\\\"$style.text\\\" v-if=\\\"item.naslNode.generationRule === 'auto'\\\">\\n                    <span>自动生成</span>\\n                  </div>\\n                  <span v-else>{{ item.naslNode.defaultValue }}</span>\\n                </div>\\n              </template>\\n              <template v-else>\\n                <s-attr-input\\n                  title=\\\"默认值绑定\\\"\\n                  node-concept=\\\"defaultValue\\\"\\n                  :name=\\\"item.naslNode.name\\\"\\n                  :parent-node=\\\"item.naslNode\\\"\\n                  :node=\\\"item.naslNode.defaultValue\\\"\\n                  :class=\\\"{\\n                    [$style.typeError]: IsError(item.naslNode),\\n                  }\\\"\\n                ></s-attr-input>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表格 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inTable\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表格\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inTable\\\"\\n                @change=\\\"toggleSelectAll($event, 'inTable')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inTable\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inTable')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在筛选 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inFilter\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在筛选\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inFilter\\\"\\n                @change=\\\"toggleSelectAll($event, 'inFilter')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inFilter\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inFilter')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表单 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inForm\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表单\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inForm\\\"\\n                @change=\\\"toggleSelectAll($event, 'inForm')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inForm\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inForm')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在详情 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inDetail\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在详情\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inDetail\\\"\\n                @change=\\\"toggleSelectAll($event, 'inDetail')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inDetail\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inDetail')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n        </el-table>\\n        <!-- 右键点击 -->\\n        <el-popover\\n          :disabled-scroll=\\\"true\\\"\\n          trigger=\\\"click\\\"\\n          ref=\\\"menuPopper\\\"\\n          :popper-options=\\\"popperOptions\\\"\\n          v-if=\\\"menuSelectedItem && popperExistMap[menuSelectedItem.id]\\\"\\n          v-model:visible=\\\"popperVisibleMap[menuSelectedItem && menuSelectedItem.id]\\\"\\n          :virtual-ref=\\\"triggerRef\\\"\\n          :placement=\\\"placement\\\"\\n          :show-arrow=\\\"false\\\"\\n          @hide=\\\"onMenuPopperHide\\\"\\n        >\\n          <el-menu :class=\\\"$contextmenu.menu\\\" @click=\\\"onMenuClick\\\">\\n            <el-menu-item-group :class=\\\"$contextmenu.group\\\" title=\\\"属性\\\">\\n              <el-menu-item :class=\\\"$contextmenu.item\\\" @click=\\\"onMenuFindUsage\\\">查找引用</el-menu-item>\\n              <el-menu-item\\n                :class=\\\"$contextmenu.item\\\"\\n                @click=\\\"onMenuDelete(removeItem)\\\"\\n                :disabled=\\\"\\n                  (menuSelectedItem && menuSelectedItem.primaryKey) ||\\n                  isOfficalEntityProperty({\\n                    naslNode: menuSelectedItem,\\n                  }) ||\\n                  isViewEntity\\n                \\\"\\n              >\\n                删除\\n              </el-menu-item>\\n            </el-menu-item-group>\\n          </el-menu>\\n        </el-popover>\\n      </div>\\n      <template v-if=\\\"selectedItem\\\">\\n        <div :class=\\\"[$style.flexgrid, $style.bodywrap1]\\\">\\n          <div :class=\\\"$style.gridcolumn\\\" class=\\\"extraForm\\\">\\n            <el-form\\n              ref=\\\"selectedItemForm\\\"\\n              :model=\\\"selectedItem\\\"\\n              :class=\\\"[$style.reffrom, $style.blockFromLayout, 's-data-attr-designer-form']\\\"\\n              label-width=\\\"85px\\\"\\n              label-position=\\\"right\\\"\\n              :inline=\\\"true\\\"\\n            >\\n              <!-- 最 大/小 值/长度 -->\\n              <skeleton-render\\n                name=\\\"views/data/components/entity-field-rules/index\\\"\\n                :property=\\\"selectedItem.naslNode\\\"\\n                :key=\\\"'rules_' + selectedItem.naslNode.name\\\"\\n                :disabled=\\\"\\n                  selectedItem.loading ||\\n                  selectedItem.naslNode.parentNode.loading ||\\n                  selectedItem.naslNode.editable === false ||\\n                  isViewEntity\\n                \\\"\\n                :is-view-entity=\\\"isViewEntity\\\"\\n                direction=\\\"horizontal\\\"\\n                :class=\\\"$style.rules\\\"\\n              />\\n              <!-- 小数位数 -->\\n              <el-form-item v-if=\\\"typeName === 'Decimal'\\\" label=\\\"小数位数\\\">\\n                <el-input-number\\n                  placeholder=\\\"请输入小数位数\\\"\\n                  :color=\\\"scaleErrorMsg ? 'error' : ''\\\"\\n                  v-model=\\\"model.scale\\\"\\n                  :min=\\\"scaleOption.min\\\"\\n                  :max=\\\"scaleOption.max\\\"\\n                  controls-position=\\\"right\\\"\\n                  :disabled=\\\"decimalDisabled(selectedItem) || isViewEntity\\\"\\n                  :value-on-clear=\\\"0\\\"\\n                  @keyup.enter=\\\"$event.target.blur()\\\"\\n                  @change=\\\"setScale\\\"\\n                ></el-input-number>\\n                <div v-if=\\\"scaleErrorMsg\\\" :class=\\\"$style.scaleErrorMsg\\\">\\n                  <s-others-icon name=\\\"solid-hint\\\"></s-others-icon>\\n                  {{ scaleErrorMsg }}\\n                </div>\\n              </el-form-item>\\n              <!-- 关联属性 -->\\n              <el-form-item :key=\\\"selectedItem.naslNode.name\\\">\\n                <template #label>\\n                  <div style=\\\"display: flex; align-items: center\\\">\\n                    关联属性\\n                    <s-others-icon name=\\\"link2\\\" :class=\\\"$style.iconLink2\\\"></s-others-icon>\\n                  </div>\\n                </template>\\n                <skeleton-render\\n                  name=\\\"views/data/entity-reference/index\\\"\\n                  :entity=\\\"entity\\\"\\n                  :property=\\\"selectedItem.naslNode\\\"\\n                  :value=\\\"entityReference\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  :data-type-list=\\\"selectedItem.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                  :error=\\\"isReleationEntityError(selectedItem.naslNode)\\\"\\n                  @save=\\\"onSaveReference\\\"\\n                  @clear=\\\"onClearReference\\\"\\n                />\\n              </el-form-item>\\n              <!-- 属性记录 -->\\n              <el-form-item\\n                label=\\\"关联属性实体记录删除规则\\\"\\n                v-if=\\\"selectedItem.naslNode.relationProperty\\\"\\n                layout=\\\"block\\\"\\n                class=\\\"relationDelRule\\\"\\n              >\\n                <el-select\\n                  style=\\\"width: 240px\\\"\\n                  v-model=\\\"selectedItem.naslNode.deleteRule\\\"\\n                  placeholder=\\\"请选择\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  @change=\\\"setDeleteRule\\\"\\n                >\\n                  <el-option label=\\\"不允许删除\\\" value=\\\"protect\\\"></el-option>\\n                  <el-option label=\\\"允许删除且同时删除本实体记录\\\" value=\\\"cascade\\\"></el-option>\\n                </el-select>\\n              </el-form-item>\\n              <!-- 主键生成规则 -->\\n              <el-form-item v-if=\\\"selectedItem.naslNode.primaryKey\\\" label=\\\"主键生成规则\\\" placement=\\\"bottom\\\">\\n                <skeleton-render\\n                  name=\\\"views/data/components/entity-primarykey-rules/index\\\"\\n                  :disabled=\\\"isViewEntity\\\"\\n                  :entity=\\\"entity\\\"\\n                  :selected-item=\\\"selectedItem.naslNode\\\"\\n                  @changeErrorMsgs=\\\"changeErrorMsgs\\\"\\n                />\\n              </el-form-item>\\n              <!-- 数据库列名 -->\\n              <el-form-item label=\\\"数据库列名\\\" placement=\\\"bottom\\\">\\n                <u-validator\\n                  ref=\\\"columnNameValidatorRef\\\"\\n                  style=\\\"width: 100%\\\"\\n                  :rules=\\\"entityPropertyColumnNameRules\\\"\\n                  :value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                  @blur-dirty-valid=\\\"selectedItem.naslNode.setColumnName($event.value)\\\"\\n                  v-slot=\\\"slotProps\\\"\\n                >\\n                  <s-input\\n                    :placeholder=\\\"entityPropertyColumnNamePlaceholder\\\"\\n                    :model-value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                    :disabled=\\\"isTableOrExcelOrigin || isViewEntity\\\"\\n                    @change=\\\"slotProps.blurChange\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                    @keyup.enter.stop=\\\"$event.target.blur()\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n              <!-- 描述 -->\\n              <el-form-item label=\\\"描述\\\" prop=\\\"description\\\">\\n                <u-validator\\n                  v-slot=\\\"slotProps\\\"\\n                  :value=\\\"selectedItem.naslNode.description\\\"\\n                  rules=\\\"maxLength(63)\\\"\\n                  :class=\\\"$style.validator\\\"\\n                  @blur-valid=\\\"onBlurDescription(selectedItem, $event.value)\\\"\\n                  @blur-invalid=\\\"errorScrollIntoView\\\"\\n                  @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                >\\n                  <s-input\\n                    type=\\\"textarea\\\"\\n                    ref=\\\"descriptionEditor\\\"\\n                    placeholder=\\\"请输入描述\\\"\\n                    :model-value=\\\"selectedItem.naslNode.description\\\"\\n                    :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                    @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                    @keyup.enter=\\\"slotProps.blurFn()\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n            </el-form>\\n          </div>\\n        </div>\\n        <div :class=\\\"$style.advancedWrap\\\" v-if=\\\"showDatabasetype\\\">\\n          <el-form :disabled=\\\"isViewEntity\\\" label-width=\\\"80px\\\" gap=\\\"small\\\" class=\\\"s-data-attr-designer-form\\\">\\n            <skeleton-render\\n              name=\\\"views/data/components/entity-property-databasetype/index\\\"\\n              :property=\\\"selectedItem.naslNode\\\"\\n            />\\n          </el-form>\\n        </div>\\n      </template>\\n      <div :class=\\\"$style.bodywrap1\\\" v-show=\\\"errorMsgs.length || sourceSyncErrMsgs.length\\\">\\n        <div v-for=\\\"errorMsg in errorMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n        <!-- 实体在同步数据源时产生的错误信息 -->\\n        <div v-for=\\\"errorMsg in sourceSyncErrMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- 查询弹出框 -->\\n    <el-popover\\n      :visible=\\\"reflowPopoverVisible\\\"\\n      :virtual-ref=\\\"labelEditor\\\"\\n      :show-arrow=\\\"false\\\"\\n      placement=\\\"bottom-start\\\"\\n      :width=\\\"340\\\"\\n      virtual-triggering\\n    >\\n      <div class=\\\"reflowPopover\\\" v-loading=\\\"reflowPopoverLoading\\\">\\n        <div class=\\\"reflowPopoverEmpty\\\" v-if=\\\"fieldList.length === 0\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"centerFlex\\\" style=\\\"font-size: 28px; margin-bottom: 20px\\\"></s-others-icon>\\n          <span class=\\\"centerFlex\\\">暂无推荐字段</span>\\n        </div>\\n        <div v-else>\\n          <el-scrollbar height=\\\"250px\\\">\\n            <div\\n              class=\\\"reflowPopoverItem\\\"\\n              v-for=\\\"item in fieldList\\\"\\n              :key=\\\"item.id\\\"\\n              @mouseenter=\\\"activeItem = item\\\"\\n              @mouseleave=\\\"activeItem = null\\\"\\n            >\\n              <el-row :gutter=\\\"10\\\">\\n                <el-col :span=\\\"9\\\" class=\\\"sle\\\">\\n                  <el-tooltip :content=\\\"item.name\\\" placement=\\\"top\\\" :show-after=\\\"500\\\" :disabled=\\\"!isTextOverflow\\\">\\n                    <div\\n                      class=\\\"tooltip-trigger\\\"\\n                      v-html=\\\"getFieldName(item.name, item.matchedNames)\\\"\\n                      @mouseenter=\\\"checkOverflow\\\"\\n                    ></div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col class=\\\"sle\\\" :span=\\\"8\\\">\\n                  <el-tooltip\\n                    :content=\\\"getFieldTypeTitle(item)\\\"\\n                    placement=\\\"top\\\"\\n                    :show-after=\\\"500\\\"\\n                    :disabled=\\\"!isTextOverflow\\\"\\n                  >\\n                    <div class=\\\"tooltip-trigger\\\" @mouseenter=\\\"checkOverflow\\\">{{ getFieldTypeTitle(item) }}</div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col :span=\\\"4\\\">\\n                  {{ item.required ? '必填' : '非必填' }}\\n                </el-col>\\n                <el-col :span=\\\"3\\\" v-show=\\\"activeItem?.id === item.id\\\" style=\\\"color: #2383ff\\\">使用</el-col>\\n              </el-row>\\n            </div>\\n          </el-scrollbar>\\n        </div>\\n        <div style=\\\"height: 18px; margin-top: 10px\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"warningIcon\\\"></s-others-icon>\\n          <span>输入_，可进行词根匹配</span>\\n        </div>\\n      </div>\\n    </el-popover>\\n    <!-- 添加至备选数据库字段库弹窗 -->\\n    <el-dialog v-model=\\\"reflowDialogVisible\\\" title=\\\"一键添加到备选字段库\\\" width=\\\"50%\\\">\\n      <el-table\\n        ref=\\\"reflowTableRef\\\"\\n        :data=\\\"reflowFieldList\\\"\\n        @select=\\\"handleSelectReflowField\\\"\\n        @select-all=\\\"handleSelectReflowField\\\"\\n      >\\n        <el-table-column type=\\\"selection\\\" width=\\\"40\\\" />\\n        <el-table-column label=\\\"字段注释\\\" prop=\\\"label\\\" />\\n        <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" />\\n        <el-table-column label=\\\"数据类型\\\" prop=\\\"type\\\" />\\n        <el-table-column label=\\\"是否必填\\\" prop=\\\"required\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ scope.row.required ? '是' : '否' }}</span>\\n          </template>\\n        </el-table-column>\\n        <el-table-column label=\\\"字段长度\\\" prop=\\\"length\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ getReflowFieldLength(scope.row) }}</span>\\n          </template>\\n        </el-table-column>\\n      </el-table>\\n      <template #footer>\\n        <div class=\\\"reflowDialogFooter\\\">\\n          <el-button\\n            type=\\\"primary\\\"\\n            :disabled=\\\"reflowConfirmBtnDisabled\\\"\\n            :loading=\\\"confirmLoading\\\"\\n            @click=\\\"handleUploadReflowField\\\"\\n          >\\n            确 定\\n          </el-button>\\n          <el-button @click=\\\"reflowDialogVisible = false\\\">取 消</el-button>\\n        </div>\\n      </template>\\n    </el-dialog>\\n  </div>\\n</template>\\n\\n<script setup>\\n  import { inject, onMounted, ref, nextTick } from 'vue';\\n  import { ElMessage, ClickOutside as vClickOutside } from 'element-plus';\\n  import { requestApi, getIsReflowField, getFieldList, getReflowFieldList, uploadReflowField } from '../apis';\\n  import { debounce } from '../utils';\\n\\n  const props = defineProps({\\n    entity: Object,\\n  });\\n\\n  const handleAddItem = () => {\\n    addItem();\\n    nextTick(() => {\\n      onSetItemEdit(selectedItem.value, 'label', true);\\n    });\\n  };\\n\\n  const showReflowBtn = ref(false);\\n\\n  const reflowPopoverVisible = ref(false);\\n  const fieldList = ref([]);\\n  const reflowQuery = ref('');\\n  const abortController = ref(null);\\n  const requestId = ref(0); // 用于标识当前请求\\n\\n  const debounceQueryFieldList = debounce(() => {\\n    // 设置loading状态\\n    reflowPopoverLoading.value = true;\\n\\n    // 取消之前的请求\\n    if (abortController.value) {\\n      abortController.value.abort();\\n    }\\n\\n    // 创建新的 AbortController 和请求ID\\n    abortController.value = new AbortController();\\n    const currentRequestId = ++requestId.value;\\n\\n    getFieldList({ query: reflowQuery.value }, abortController.value.signal)\\n      .then(res => {\\n        // 只有当前请求是最新的才更新数据\\n        if (currentRequestId === requestId.value) {\\n          fieldList.value = res.result || [];\\n        }\\n      })\\n      .catch(err => {\\n        if (err.name !== 'AbortError') {\\n          console.error(err);\\n        }\\n      })\\n      .finally(() => {\\n        // 只有当前请求是最新的才更新加载状态\\n        if (currentRequestId === requestId.value) {\\n          abortController.value = null;\\n          reflowPopoverLoading.value = false;\\n        }\\n      });\\n  }, 400);\\n\\n  const reflowPopoverLoading = ref(false);\\n  const activeItem = ref(null);\\n\\n  const getFieldName = (name, matchedNames) => {\\n    if (!name || typeof name !== 'string') return '';\\n    if (!Array.isArray(matchedNames)) return `<span style=\\\"color: red; font-weight: bold;\\\">${name}</span>`;\\n\\n    const matchedSet = new Set(matchedNames.filter(item => item && typeof item === 'string'));\\n    const parts = name.split(/(_+)/);\\n\\n    return parts\\n      .map(part => {\\n        if (part.startsWith('_')) return part;\\n        return matchedSet.has(part) ? part : `<span style=\\\"color: red; font-weight: bold;\\\">${part}</span>`;\\n      })\\n      .join('');\\n  };\\n\\n  const getFieldTypeTitle = item => {\\n    if (item.type === 'String') {\\n      const stringLabel = getStringLabel(item.length);\\n      return item.type + (stringLabel ? `  (${stringLabel})` : '');\\n    }\\n    return item.type;\\n  };\\n\\n  const columnNameValidatorRef = ref(null);\\n\\n  const handleUseField = item => {\\n    const target = selectedItem.value?.naslNode;\\n    if (target?.concept === 'EntityProperty') {\\n      target.app.emit('collect:start', { actionMsg: '数据建模插件更新字段名' });\\n      const newName = target.parentNode?.getPropertyUniqueName?.(item.name) || item.name; // 保证字段名唯一\\n      const typeName = item.type === 'Integer' ? 'Long' : item.type;\\n      const updateData = {\\n        name: newName,\\n        columnName: newName,\\n        required: item.required,\\n        typeAnnotation: {\\n          concept: 'TypeAnnotation',\\n          typeKind: 'primitive',\\n          typeNamespace: 'nasl.core',\\n          typeName,\\n        },\\n      };\\n      if (item.type === 'String' && item.length) {\\n        const minRule = target.toJSON().rules.find(rule => rule.startsWith('minLength'));\\n        Object.assign(updateData, {\\n          databaseTypeAnnotation: {\\n            concept: 'DatabaseTypeAnnotation',\\n            typeName: 'varchar',\\n            arguments: {\\n              length: item.length,\\n            },\\n          },\\n          rules: [minRule, `maxLength(${item.length})`].filter(Boolean),\\n        });\\n      }\\n      target.update(updateData);\\n      setTimeout(() => {\\n        // 延迟收集，把外层onBlurLabel的change也收集到这次的batchInstruct中\\n        target.app.emit('collect:end');\\n      });\\n\\n      nextTick(async () => {\\n        try {\\n          const res = await columnNameValidatorRef.value?.validate();\\n        } catch (error) {\\n          // console.error(error);\\n          // 新设置的字段名不符合规则，主动聚焦到输入框\\n          onSetItemEdit(selectedItem.value, 'name', true);\\n        }\\n      });\\n    }\\n  };\\n\\n  const handleLabelFocus = label => {\\n    reflowQuery.value = label;\\n  };\\n\\n  const handleLabelBlur = async (event, slotProps, item) => {\\n    reflowPopoverVisible.value = false;\\n    reflowQuery.value = '';\\n    fieldList.value = [];\\n\\n    event = event.replace(/_/g, ''); // event 去除掉_\\n\\n    slotProps.blurFn(event); // 触发模版中原来的失焦逻辑\\n    if (activeItem.value) {\\n      handleUseField(activeItem.value);\\n      activeItem.value = null;\\n    }\\n  };\\n\\n  const handleLabelInput = (event, slotProps) => {\\n    reflowPopoverVisible.value = true;\\n    reflowQuery.value = event;\\n    slotProps.inputChange(event); // 触发模版中原有的修改逻辑\\n    // 外置设置防抖查询loading状态\\n    reflowPopoverLoading.value = true;\\n    debounceQueryFieldList();\\n  };\\n\\n  onMounted(() => {\\n    getIsReflowField({}).then(res => {\\n      showReflowBtn.value = res.result;\\n    });\\n  });\\n\\n  // 一键添加到备选字段库\\n  const reflowLoading = ref(false);\\n  const reflowFieldList = ref([]);\\n\\n  const addReflowField = () => {\\n    reflowLoading.value = true;\\n\\n    const filterList = ['id', 'createdTime', 'updatedTime', 'createdBy', 'updatedBy'];\\n    const filterRegex = /^property\\\\d+$|^.*[\\\\u4e00-\\\\u9fa5].*$/;\\n\\n    const properties = props.entity?.toJSON()?.properties || [];\\n    const tempReflowFieldList = [];\\n    const nameSet = new Set();\\n    properties.forEach(property => {\\n      if (\\n        !property.label ||\\n        filterList.includes(property.name) ||\\n        filterRegex.test(property.name) ||\\n        property.typeAnnotation?.typeKind !== 'primitive'\\n      ) {\\n        return;\\n      }\\n      let type = property.typeAnnotation?.typeName || 'String';\\n      if (type === 'Long') type = 'Integer'; // 整数类型需要重命名为Integer\\n      const propertyName = property.name.replace(/\\\\d+$/, '') || '';\\n      if (nameSet.has(propertyName)) {\\n        return;\\n      }\\n      nameSet.add(propertyName);\\n      tempReflowFieldList.push({\\n        name: propertyName,\\n        label: property.label || '',\\n        required: property.required || false,\\n        type,\\n        length: type === 'String' ? property.databaseTypeAnnotation?.arguments?.length || 255 : void 0,\\n      });\\n    });\\n    reflowFieldList.value = tempReflowFieldList;\\n    if (reflowFieldList.length === 0) {\\n      reflowLoading.value = false;\\n      showMessage();\\n      return;\\n    }\\n\\n    // 备选库不需要校验字段唯一性，直接打开弹窗\\n    requestApi(\\n      getReflowFieldList,\\n      {\\n        list: tempReflowFieldList.map(item => ({\\n          name: item.name,\\n          label: item.label,\\n        })),\\n      },\\n      res => {\\n        if (res.result?.length === 0) {\\n          showMessage();\\n          return;\\n        } else {\\n          // 只有在res.result中的name，在tempReflowFieldList中存在，才显示\\n          const set = new Set(res.result);\\n          reflowFieldList.value = tempReflowFieldList.filter(item => set.has(item.name));\\n          reflowDialogVisible.value = true;\\n          nextTick(() => {\\n            reflowConfirmBtnDisabled.value = false;\\n            reflowTableRef.value.toggleAllSelection();\\n          });\\n        }\\n      },\\n      err => {\\n        console.error(err);\\n      },\\n      () => {\\n        reflowLoading.value = false;\\n      }\\n    );\\n    // reflowDialogVisible.value = true;\\n    // reflowLoading.value = false;\\n    // nextTick(() => {\\n    //   reflowConfirmBtnDisabled.value = false;\\n    //   reflowTableRef.value.toggleAllSelection();\\n    // });\\n  };\\n\\n  // 显示[暂无可回流到备选数据库的字段]消息\\n  const showMessage = (type = 'warning', msg = '暂无可回流到备选数据库的字段') => {\\n    ElMessage.closeAll();\\n    ElMessage[type](msg);\\n  };\\n\\n  const reflowDialogVisible = ref(false);\\n  const reflowTableRef = ref(null);\\n\\n  const getStringLabel = length => {\\n    const map = {\\n      255: '短 255',\\n      4000: '中 4000',\\n      16777215: '长 16777215',\\n    };\\n    return map[length] || length;\\n  };\\n  const getReflowFieldLength = row => {\\n    return row.type === 'String' ? getStringLabel(row.length) : '-';\\n  };\\n\\n  const reflowConfirmBtnDisabled = ref(false);\\n  const isTextOverflow = ref(false);\\n\\n  // 检测文本是否溢出\\n  const checkOverflow = event => {\\n    const element = event.target;\\n    isTextOverflow.value = element.scrollWidth > element.clientWidth;\\n  };\\n  const handleSelectReflowField = (selection, row) => {\\n    reflowConfirmBtnDisabled.value = selection.length === 0;\\n  };\\n\\n  const confirmLoading = ref(false);\\n  const handleUploadReflowField = () => {\\n    confirmLoading.value = true;\\n    const selectedList = reflowTableRef.value.getSelectionRows();\\n    requestApi(\\n      uploadReflowField,\\n      {\\n        list: selectedList,\\n      },\\n      res => {\\n        if (res.result) {\\n          showMessage('success', '添加成功');\\n          reflowDialogVisible.value = false;\\n        } else {\\n          showMessage('error', res.msg || '添加失败');\\n        }\\n      },\\n      err => {\\n        // console.error(err);\\n        showMessage('error', err);\\n      },\\n      () => {\\n        confirmLoading.value = false;\\n      }\\n    );\\n  };\\n\\n  const {\\n    /**\\n     * 名称输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    nameEditor,\\n    /**\\n     * 标题输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    labelEditor,\\n    /**\\n     * 描述输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    descriptionEditor,\\n    /**\\n     * 表格节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    tableviewRef,\\n    /**\\n     * 数据库视图导入生成的实体\\n     * entity 的 origin 属性是否是 view\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isViewEntity,\\n    /**\\n     * 添加实体属性\\n     *\\n     * @function\\n     */\\n    addItem,\\n    /**\\n     * 生成移除按钮的提示\\n     *\\n     * @function\\n     * @return string\\n     */\\n    getRemoveTooltip,\\n    /**\\n     * 表格选中的行元素\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    selectedItem,\\n    /**\\n     * 是否是官方实体属性\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntityProperty,\\n    /**\\n     * 移除实体索引\\n     *\\n     * @function\\n     * @param item - 需要删除的行元素\\n     */\\n    removeItem,\\n    /**\\n     * 表格的渲染数据\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    renderList,\\n    /**\\n     * 上移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveUpItem,\\n    /**\\n     * 下移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveDownItem,\\n    /**\\n     * 表格高度\\n     *\\n     * @type {Vue.computed<number>}\\n     */\\n    tableHeight,\\n    /**\\n     * 设置表单列的样式\\n     *\\n     * @function\\n     */\\n    setRowClassName,\\n    /**\\n     * 右键选中表格行元素\\n     *\\n     * @function\\n     */\\n    onContextMenuRow,\\n    /**\\n     * 选中行元素时触发\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    onSelectRowWithDataType,\\n    /**\\n     * 拖拽调整表格列宽度\\n     *\\n     * @function\\n     * @param newWidth - 新宽度\\n     * @param oldWidth - 旧宽度\\n     * @param column - 列元素\\n     */\\n    handleDragend,\\n    /**\\n     * 是否禁止编辑行元素\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    getDisable,\\n    /**\\n     * 设置表格列元素编辑状态\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 属性名称\\n     * @param focus - 是否选中输入框\\n     */\\n    onSetItemEdit,\\n    /**\\n     * Tab 键跳转切换下一个属性\\n     *\\n     * @function\\n     * @param event - 原生键盘事件\\n     * @param item - 行元素\\n     * @param name - 属性名称\\n     */\\n    onKeyUp,\\n    /**\\n     * 名称输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的名称\\n     */\\n    onBlurName,\\n    /**\\n     * 验证不通过时滚动到错误元素\\n     */\\n    errorScrollIntoView,\\n    /**\\n     * 存在错误\\n     *\\n     * @type {Vue.ref<boolean>}\\n     */\\n    hasInvalid,\\n    /**\\n     * 显示输入框的提示\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    tooltipOpened,\\n    /**\\n     * 属性名，暂时存储属性名，用于输入框输入等操作\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    itemNameValue,\\n    /**\\n     * 输入框获取焦点时触发\\n     *\\n     * 1. 设置tooltipOpened的值\\n     * 2. 设置itemNameValue\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     */\\n    onFocusName,\\n    /**\\n     * 标题输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的标题\\n     */\\n    onBlurLabel,\\n    /**\\n     * 是否应用正在发布\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isAppDeploying,\\n    /**\\n     * 是否实体已经发布过并且是复合类型\\n     *\\n     * 1. 实体已经发布过，在app下的depEntities可以找到该实体\\n     * 2. 实体是复合类型：'Map', 'List'，或者typeKind是reference并且namespace是'entities', 'structures'\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isPublishedComplexType,\\n    /**\\n     * 数据类型的标题\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return string\\n     */\\n    showDatatype,\\n    /**\\n     * 双击编辑数据类型输入框\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - 原生事件\\n     */\\n    onDblClickDatatype,\\n    /**\\n     * 获取可选类型\\n     *\\n     * @function\\n     * @return 可选类型\\n     */\\n    getDataTypeList,\\n    /**\\n     * 失焦时取消当前行元素编辑状态\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    handleBlur,\\n    /**\\n     * 修改实体属性类型\\n     *\\n     * @function\\n     * @param event - event.value 实际使用数据\\n     */\\n    onChangeDatatype,\\n    /**\\n     * 是否属于官方实体\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntity,\\n    /**\\n     * 复合类型\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isComplexType,\\n    /**\\n     * 修改是否必填\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkbox 原生事件\\n     */\\n    requireInput,\\n    /**\\n     * 能否设置默认值\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    canSetDefaultValue,\\n    /**\\n     * 对应节点是否有错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    IsError,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inTable,\\n    /**\\n     * 全部勾选或者取消全部勾选\\n     *\\n     * @function\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    toggleSelectAll,\\n    /**\\n     * 设置显示属性\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    setDisplay,\\n    /**\\n     * 显示在筛选\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inFilter,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inForm,\\n    /**\\n     * 显示在详情\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inDetail,\\n    /**\\n     * ElementPlus 的 popper 配置\\n     */\\n    popperOptions,\\n    /**\\n     * 右键菜单选中项\\n     *\\n     * @type {Vue.ref<object>}\\n     */\\n    menuSelectedItem,\\n    /**\\n     * 项对应的右键菜单是否存在\\n     */\\n    popperExistMap,\\n    /**\\n     * 项对应的右键菜单是否显示\\n     */\\n    popperVisibleMap,\\n    /**\\n     * 右键菜单的触发节点\\n     */\\n    triggerRef,\\n    /**\\n     * 右键菜单的出现位置\\n     */\\n    placement,\\n    /**\\n     * 右键菜单隐藏时的处理函数\\n     */\\n    onMenuPopperHide,\\n    /**\\n     * 菜单点击时\\n     */\\n    onMenuClick,\\n    /**\\n     * 菜单-查找引用\\n     *\\n     * @function\\n     */\\n    onMenuFindUsage,\\n    /**\\n     * 菜单-删除\\n     *\\n     * @function\\n     */\\n    onMenuDelete,\\n    /**\\n     * 实体属性数据类型\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    typeName,\\n    /**\\n     * 小数位数的校验错误信息\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    scaleErrorMsg,\\n    /**\\n     * 属性的响应式数据\\n     *\\n     * @type {Vue.reactive<object>}\\n     * @property scale - 小数位数\\n     */\\n    model,\\n    /**\\n     * 小数位数的范围\\n     *\\n     * @type {Vue.computed<object>}\\n     * @property min - 最小值\\n     * @property max - 最大值\\n     */\\n    scaleOption,\\n    /**\\n     * 是否禁用小数位数\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return boolean\\n     */\\n    decimalDisabled,\\n    /**\\n     * 修改小数位数\\n     *\\n     * @function\\n     */\\n    setScale,\\n    /**\\n     * 关联属性\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    entityReference,\\n    /**\\n     * 类型列表\\n     *\\n     * @type {Vue.ref<array>}\\n     */\\n    dataTypeList,\\n    /**\\n     * 关联实体存在错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    isReleationEntityError,\\n    /**\\n     * 设置关联属性\\n     *\\n     * @function\\n     * @param event - event.value 表示实际数据\\n     */\\n    onSaveReference,\\n    /**\\n     * 清除关联属性\\n     *\\n     * @function\\n     */\\n    onClearReference,\\n    /**\\n     * 设置关联属性实体记录删除规则\\n     *\\n     * @function\\n     * @param event - 选中事件对象\\n     */\\n    setDeleteRule,\\n    /**\\n     * 设置错误信息\\n     *\\n     * @function\\n     * @param errorMsgs - 错误信息\\n     */\\n    changeErrorMsgs,\\n    /**\\n     * 是否来源于数据库表/excel\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isTableOrExcelOrigin,\\n    /**\\n     * 描述输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的描述\\n     */\\n    onBlurDescription,\\n    /**\\n     * 是否显示数据库高级设置\\n     *\\n     * 1.没有设置数据源\\n     * 2.实体是excel导入或者数据源反向导入\\n     * 3.权限实体（贤宇说一直是以LCAP开头来判断的）\\n     * 这3种情况不显示数据库设置\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    showDatabasetype,\\n    /**\\n     * 实体在同步数据源时产生的错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    sourceSyncErrMsgs,\\n    /**\\n     * 错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    errorMsgs,\\n    /**\\n     * 数据库列名校验规则\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    entityPropertyColumnNameRules,\\n    /**\\n     * 数据库列名输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyColumnNamePlaceholder,\\n    /**\\n     * 生成名称校验规则\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return 名称校验规则\\n     */\\n    getEntityPropertyRules,\\n    /**\\n     * 名称输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyPlaceholder,\\n    /**\\n     * 设置选中行的数据类型\\n     *\\n     * @function\\n     * @param value - 数据类型\\n     */\\n    setDataType,\\n  } = inject('$context');\\n</script>\\n\\n<style module=\\\"$propertyDesigner\\\">\\n  .errorMsg {\\n    color: var(--designer-font-second-color);\\n    margin: 0 46px;\\n  }\\n\\n  .errorMsg + .errorMsg {\\n    margin-top: 10px;\\n  }\\n\\n  .infoicon {\\n    display: inline-block;\\n    height: 12px;\\n    width: 12px;\\n    background: var(--assets-warning-info-svg) no-repeat;\\n    background-size: 100% 100%;\\n    vertical-align: -1px;\\n    margin-right: 5px;\\n  }\\n</style>\\n\\n<style module>\\n  div.table [class^='u-input__']:focus,\\n  div.table [class^='u-input__'][focus],\\n  div.table [class^='u-input__']:hover,\\n  div.table [class^='u-select__']:focus,\\n  div.table [class^='u-select__'][focus],\\n  div.table [class^='u-select__'][opened],\\n  div.table [class^='u-select__']:hover {\\n    border-color: var(--entity-designer-table-input-focus-border-color);\\n    box-shadow: var(--entity-designer-table-input-focus-box-shadow);\\n  }\\n\\n  .head {\\n    margin: 16px;\\n    padding: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n  }\\n\\n  div.head [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  .body {\\n    margin: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n    overflow: hidden;\\n  }\\n\\n  .entityListIcon {\\n    width: 16px;\\n    height: 16px;\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .edit {\\n    display: inline-block;\\n    width: 100%;\\n    line-height: 38px;\\n  }\\n\\n  .edit:hover {\\n    cursor: pointer;\\n  }\\n\\n  .edit:focus {\\n    outline: none;\\n  }\\n\\n  .edit .text > span {\\n    color: var(--entity-designer-table-color);\\n  }\\n\\n  .edit .text {\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .editwrap {\\n    margin-left: -9px;\\n  }\\n\\n  .editwrap [class^='s-datatype-select__'] {\\n    vertical-align: middle;\\n  }\\n\\n  .text {\\n    width: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n  }\\n\\n  .textContent {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n    max-width: calc(100% - 28px);\\n    margin-right: 8px;\\n  }\\n  .textContent:empty {\\n    display: none;\\n  }\\n\\n  .text > span {\\n    display: inline-block;\\n    color: var(--entity-designer-table-disabled-color);\\n    vertical-align: middle;\\n  }\\n\\n  .validator {\\n    width: 100%;\\n  }\\n\\n  .btnnav {\\n    border-bottom: 1px solid var(--entity-designer-border-color);\\n    border-top: 1px solid var(--entity-designer-border-color);\\n    padding: 5px 24px;\\n  }\\n\\n  div.btnnav[direction='horizontal'][gap='small'] > :not(:last-child) {\\n    margin-right: 8px;\\n  }\\n\\n  .btnnav1 {\\n    border-top: none;\\n    background-color: var(--entity-designer-btnnav-background);\\n  }\\n\\n  .bodywrap {\\n    padding: 16px 24px 0;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    margin-bottom: 24px;\\n  }\\n\\n  div.bodywrap [class^='u-grid-layout_column__'] {\\n    padding-bottom: 0;\\n  }\\n\\n  .bodywrap1 {\\n    padding: 16px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .advancedWrap {\\n    padding: 10px 24px 25px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .entityfrom [class^='u-form_item_label__'] {\\n    width: 36px !important;\\n  }\\n\\n  div.input {\\n    width: 100%;\\n    margin-right: 12px;\\n  }\\n\\n  .iconBase {\\n    display: inline-block;\\n    width: 20px;\\n    height: 38px;\\n    line-height: 38px;\\n    text-align: center;\\n    font-size: var(--font-size-large);\\n    font-size: 14px;\\n  }\\n\\n  .iconKey {\\n    color: var(--designer-table-edit-icon-key-color);\\n  }\\n\\n  .iconLink {\\n    color: var(--designer-table-edit-icon-link-color);\\n  }\\n\\n  .iconEdit {\\n    color: var(--color-base);\\n    opacity: 0;\\n  }\\n\\n  .iconLink2 {\\n    display: inline-block;\\n    width: 16px;\\n    height: 16px;\\n    line-height: 16px;\\n    font-size: var(--font-size-huge);\\n    color: var(--brand-primary);\\n    cursor: pointer;\\n    position: relative;\\n    top: 2px;\\n    left: 4px;\\n  }\\n\\n  .edit:hover .iconEdit {\\n    opacity: 0.6;\\n    cursor: pointer;\\n  }\\n\\n  .edit:hover .iconEdit:hover {\\n    opacity: 1;\\n  }\\n\\n  .icon {\\n    width: 14px;\\n    height: 14px;\\n    display: inline-block;\\n    vertical-align: middle;\\n    background-repeat: no-repeat;\\n  }\\n\\n  div.normalfrom [class^='u-form_item_label__'] {\\n    width: 60px !important;\\n  }\\n\\n  div.normalfrom > div {\\n    margin-bottom: 16px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'],\\n  div.normalfrom [class^='u-select__'],\\n  div.normalfrom [class^='u-form_item_field__'],\\n  div.normalfrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom [class^='u-form_item_label__'] {\\n    width: 94px !important;\\n  }\\n\\n  div.reffrom [class^='u-input__'],\\n  div.reffrom [class^='u-tree-select__'],\\n  div.reffrom [class^='u-select__'],\\n  div.reffrom [class^='u-form_item_field__'],\\n  div.reffrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.reffrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom .text {\\n    opacity: 0.3;\\n  }\\n\\n  div.reffrom [class^='u-form_item_extra__'] {\\n    width: 12px;\\n  }\\n\\n  .flexgrid {\\n    display: flex;\\n  }\\n\\n  .gridcolumn {\\n    width: auto;\\n  }\\n\\n  .gridcolumn:not(:last-child) {\\n    margin-right: 24px;\\n  }\\n\\n  div.fixedwidthinput,\\n  div.textarea {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  .icondivider {\\n    color: var(--entity-designer-border-color);\\n  }\\n\\n  .advanced {\\n    padding-top: 10px;\\n  }\\n\\n  .scaleErrorMsg {\\n    position: absolute;\\n    color: rgb(242, 73, 87);\\n  }\\n  .typeError {\\n    border-radius: 4px;\\n    border: 1px solid var(--input-border-color-error);\\n  }\\n  .checkbox [class='el-checkbox__label'] {\\n    line-height: 23px;\\n    font-size: 12px;\\n    text-overflow: ellipsis;\\n    text-align: left;\\n    font-weight: 600;\\n    color: var(--el-table-header-text-color);\\n  }\\n  .checkbolabel [class='el-checkbox__label'] {\\n    line-height: 23px !important;\\n    font-size: 12px !important;\\n    text-overflow: ellipsis !important;\\n    text-align: left !important;\\n    font-weight: 600 !important;\\n    color: var(--el-table-header-text-color) !important;\\n  }\\n  .checkbox {\\n    height: 23px;\\n    line-height: 23px;\\n  }\\n</style>\\n<style module=\\\"$contextmenu\\\">\\n  .menu {\\n    margin-top: 0 !important;\\n  }\\n\\n  .menu .group [class^='el-menu-item-group__title'] {\\n    --el-menu-text-color: var(--el-menu-top-title-text-color);\\n    height: 32px;\\n    font-weight: bold;\\n    border-bottom: 1px solid var(--line-color-regular);\\n    background: var(--fill-color-thead);\\n    color: var(--el-menu-text-color);\\n    cursor: auto;\\n  }\\n</style>\\n\\n<style scoped>\\n  .tableCell :deep(.cell) {\\n    padding: 0;\\n    line-height: 20px;\\n    padding-left: 6px;\\n  }\\n  .theadLable {\\n    overflow: visible;\\n    width: 100%;\\n    padding-left: 6px;\\n    border-right: 1px solid var(--entity-designer-property-dragger-border-color);\\n  }\\n  .topIconGroup {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-start;\\n    gap: 8px;\\n    background-color: var(--entity-designer-icon-group-background-color);\\n    padding: 5px 24px;\\n    border-bottom: 1px solid var(--entity-designer-icon-group-border-color);\\n    position: sticky;\\n    z-index: 9;\\n    top: 64px;\\n  }\\n\\n  .icon {\\n    margin-right: 8px;\\n  }\\n\\n  .extraForm :deep(.el-form-item__label) {\\n    font-size: 12px;\\n  }\\n\\n  :deep(.row-style) {\\n    border: 1px solid #4d87fe;\\n  }\\n\\n  :deep(.cell-style) {\\n    border-bottom: 1px solid #409eff;\\n  }\\n\\n  .elFormFlex {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center;\\n    flex-wrap: wrap;\\n  }\\n</style>\\n\\n<style scoped>\\n  .reflowPopover {\\n    width: 340px;\\n    padding: 8px;\\n  }\\n\\n  .reflowPopoverEmpty {\\n    padding: 20px 0 30px;\\n  }\\n\\n  .reflowPopoverItem {\\n    height: 48px;\\n    line-height: 48px;\\n    padding: 0 12px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    &:hover {\\n      background-color: #edf2f9;\\n    }\\n  }\\n\\n  .warningIcon {\\n    margin-right: 4px;\\n  }\\n\\n  .reflowDialogFooter {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 居中对齐flex布局 */\\n  .centerFlex {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 单行文本溢出省略号 */\\n  .sle,\\n  [sle] {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n\\n  /* tooltip触发器样式 */\\n  .tooltip-trigger {\\n    width: 100%;\\n    height: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"table\": `EntityPropertyDesigner__table--DAcgg`,\n\t\"head\": `EntityPropertyDesigner__head--gPuC3`,\n\t\"body\": `EntityPropertyDesigner__body--EvBMI`,\n\t\"entityListIcon\": `EntityPropertyDesigner__entityListIcon--kBERs`,\n\t\"edit\": `EntityPropertyDesigner__edit--ClOqV`,\n\t\"text\": `EntityPropertyDesigner__text--qpPcJ`,\n\t\"editwrap\": `EntityPropertyDesigner__editwrap--ZGrYT`,\n\t\"textContent\": `EntityPropertyDesigner__textContent--ixaXm`,\n\t\"validator\": `EntityPropertyDesigner__validator--PFrhM`,\n\t\"btnnav\": `EntityPropertyDesigner__btnnav--iOokw`,\n\t\"btnnav1\": `EntityPropertyDesigner__btnnav1--E5h5W`,\n\t\"bodywrap\": `EntityPropertyDesigner__bodywrap--VKO0H`,\n\t\"bodywrap1\": `EntityPropertyDesigner__bodywrap1--zpK7G`,\n\t\"advancedWrap\": `EntityPropertyDesigner__advancedWrap--ffldQ`,\n\t\"entityfrom\": `EntityPropertyDesigner__entityfrom--fqGAy`,\n\t\"input\": `EntityPropertyDesigner__input--bg7Vc`,\n\t\"iconBase\": `EntityPropertyDesigner__iconBase--F4Nxz`,\n\t\"iconKey\": `EntityPropertyDesigner__iconKey--lPb7Y`,\n\t\"iconLink\": `EntityPropertyDesigner__iconLink--lAthw`,\n\t\"iconEdit\": `EntityPropertyDesigner__iconEdit--jRzSd`,\n\t\"iconLink2\": `EntityPropertyDesigner__iconLink2--EYHwI`,\n\t\"icon\": `EntityPropertyDesigner__icon--cAvU8`,\n\t\"normalfrom\": `EntityPropertyDesigner__normalfrom--XxBVw`,\n\t\"reffrom\": `EntityPropertyDesigner__reffrom--qgC1O`,\n\t\"flexgrid\": `EntityPropertyDesigner__flexgrid--vqhTk`,\n\t\"gridcolumn\": `EntityPropertyDesigner__gridcolumn--QtlHd`,\n\t\"fixedwidthinput\": `EntityPropertyDesigner__fixedwidthinput--NnYfy`,\n\t\"textarea\": `EntityPropertyDesigner__textarea--QDNlf`,\n\t\"icondivider\": `EntityPropertyDesigner__icondivider--u945n`,\n\t\"advanced\": `EntityPropertyDesigner__advanced--izAOk`,\n\t\"scaleErrorMsg\": `EntityPropertyDesigner__scaleErrorMsg--Z_N_y`,\n\t\"typeError\": `EntityPropertyDesigner__typeError--nNcks`,\n\t\"checkbox\": `EntityPropertyDesigner__checkbox--sXVL8`,\n\t\"checkbolabel\": `EntityPropertyDesigner__checkbolabel--SDk5N`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.EntityPropertyDesigner__menu--JM97v {\n    margin-top: 0 !important;\n}\n.EntityPropertyDesigner__menu--JM97v .EntityPropertyDesigner__group--QOObs [class^='el-menu-item-group__title'] {\n    --el-menu-text-color: var(--el-menu-top-title-text-color);\n    height: 32px;\n    font-weight: bold;\n    border-bottom: 1px solid var(--line-color-regular);\n    background: var(--fill-color-thead);\n    color: var(--el-menu-text-color);\n    cursor: auto;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/EntityPropertyDesigner.vue\"],\"names\":[],\"mappings\":\";AAs3DE;IACE,wBAAwB;AAC1B;AAEA;IACE,yDAAyD;IACzD,YAAY;IACZ,iBAAiB;IACjB,kDAAkD;IAClD,mCAAmC;IACnC,gCAAgC;IAChC,YAAY;AACd\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div\\n      v-if=\\\"!isViewEntity\\\"\\n      class=\\\"topIconGroup\\\"\\n      :class=\\\"$style.body\\\"\\n      style=\\\"margin-top: 0px; margin-bottom: 0px; border-bottom: 0px; height: 40px\\\"\\n    >\\n      <!-- 添加实体属性 -->\\n      <s-others-icon name=\\\"add\\\" tooltip=\\\"添加属性\\\" button @click=\\\"handleAddItem\\\"></s-others-icon>\\n      <!-- 删除实体属性 -->\\n      <s-others-icon\\n        name=\\\"remove\\\"\\n        button\\n        :tooltip=\\\"getRemoveTooltip()\\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          selectedItem.naslNode.primaryKey ||\\n          isOfficalEntityProperty(selectedItem)\\n        \\\"\\n        @click=\\\"removeItem(selectedItem)\\\"\\n      ></s-others-icon>\\n      <div :class=\\\"$style.icondivider\\\">|</div>\\n      <!-- 上移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-up\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置顶'\\n            : '上移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[0].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveUpItem\\\"\\n      ></s-others-icon>\\n      <!-- 下移实体属性 -->\\n      <s-others-icon\\n        name=\\\"position-down\\\"\\n        button\\n        :tooltip=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n            ? '当前属性已置底'\\n            : '下移'\\n        \\\"\\n        :disabled=\\\"\\n          !selectedItem ||\\n          !selectedItem.naslNode ||\\n          selectedItem.loading ||\\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\\n        \\\"\\n        @click=\\\"moveDownItem\\\"\\n      ></s-others-icon>\\n      <!-- 一键添加到备选字段库 -->\\n      <el-button v-if=\\\"showReflowBtn\\\" :loading=\\\"reflowLoading\\\" @click=\\\"addReflowField\\\">一键添加到备选字段库</el-button>\\n    </div>\\n    <div :class=\\\"$style.body\\\" style=\\\"margin-top: 0px\\\">\\n      <div :class=\\\"$style.bodywrap\\\" class=\\\"tableCell\\\">\\n        <el-table\\n          ref=\\\"tableviewRef\\\"\\n          :data=\\\"renderList\\\"\\n          highlight-current-row\\n          :style=\\\"`min-width:950px;${tableHeight}`\\\"\\n          style=\\\"width: 100%\\\"\\n          :class=\\\"\\n            renderList.length > 8\\n              ? [$style.table, $style.tablescroll, 's-data-table-edit']\\n              : [$style.table, 's-data-table-edit']\\n          \\\"\\n          :value=\\\"selectedItem && selectedItem.naslNode.name\\\"\\n          value-field=\\\"name\\\"\\n          :header-row-style=\\\"{ height: '40px' }\\\"\\n          :cell-style=\\\"{ padding: '0px' }\\\"\\n          :row-style=\\\"{ height: '42px' }\\\"\\n          :row-class-name=\\\"setRowClassName\\\"\\n          empty-text=\\\"暂无数据\\\"\\n          @row-contextmenu=\\\"onContextMenuRow\\\"\\n          @row-click=\\\"onSelectRowWithDataType\\\"\\n          @header-dragend=\\\"handleDragend\\\"\\n          @click.right.prevent\\n          :border=\\\"true\\\"\\n        >\\n          <!-- 主键/关联属性的icon -->\\n          <el-table-column width=\\\"38\\\" prop=\\\"primaryKey\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.primaryKey\\\"\\n                  name=\\\"key\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconKey]\\\"\\n                ></s-others-icon>\\n                <s-others-icon\\n                  v-if=\\\"item.naslNode.relationProperty\\\"\\n                  name=\\\"link\\\"\\n                  :class=\\\"[$style.iconBase, $style.iconLink]\\\"\\n                ></s-others-icon>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 标题 -->\\n          <el-table-column prop=\\\"label\\\" min-width=\\\"107\\\" label=\\\"字段注释\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段注释</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!item.loading && !item.naslNode.parentNode.loading && !isViewEntity\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'label'\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                  tabindex=\\\"0\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'label')\\\"\\n                  :title=\\\"item.naslNode.label\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.label }}</span>\\n                    <s-others-icon\\n                      v-show=\\\"!isOfficalEntityProperty(item)\\\"\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'label', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    ref=\\\"labelValidatorRef\\\"\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.label\\\"\\n                    rules=\\\"maxLength(63)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurLabel(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <s-input\\n                      placeholder=\\\"请输入标题\\\"\\n                      :model-value=\\\"item.naslNode.label\\\"\\n                      ref=\\\"labelEditor\\\"\\n                      :class=\\\"$style.input\\\"\\n                      @focus=\\\"handleLabelFocus(item.naslNode.label)\\\"\\n                      @blur:value=\\\"handleLabelBlur($event, slotProps, item)\\\"\\n                      @input=\\\"handleLabelInput($event, slotProps)\\\"\\n                      @keyup.enter=\\\"$event.target.blur()\\\"\\n                    ></s-input>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <!-- 之前仅仅为 item.label 但是实际上在item 对象中没有label属性，恐在特殊情况下存在，故范围限制为 区分 viewEntity -->\\n                <span>{{ isViewEntity ? item.naslNode.label : item.label }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 名称 -->\\n          <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" min-width=\\\"87\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">字段名</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <!-- 非禁用状态 -->\\n              <template v-else-if=\\\"!getDisable(item)\\\">\\n                <!-- 展示态 -->\\n                <div\\n                  v-if=\\\"item.edit !== 'name'\\\"\\n                  tabindex=\\\"0\\\"\\n                  :class=\\\"$style.edit\\\"\\n                  :title=\\\"item.naslNode.name\\\"\\n                  @dblclick=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                  @keyup=\\\"onKeyUp($event, item, 'name')\\\"\\n                >\\n                  <div :class=\\\"$style.text\\\">\\n                    <span :class=\\\"$style.textContent\\\">{{ item.naslNode.name }}</span>\\n                    <s-others-icon\\n                      name=\\\"edit\\\"\\n                      :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                      @click=\\\"onSetItemEdit(item, 'name', true)\\\"\\n                    ></s-others-icon>\\n                  </div>\\n                </div>\\n                <!-- 编辑态 -->\\n                <div v-else :class=\\\"$style.editwrap\\\">\\n                  <!-- value 传入的是被验证的值 -->\\n                  <!-- validate-result 来调整 是否存在非法项 -->\\n                  <u-validator\\n                    v-slot=\\\"slotProps\\\"\\n                    :value=\\\"item.naslNode.name\\\"\\n                    :rules=\\\"getEntityPropertyRules(item.naslNode)\\\"\\n                    :class=\\\"$style.validator\\\"\\n                    error-display=\\\"appear\\\"\\n                    error-append-to-body\\n                    @blur-valid=\\\"onBlurName(item, $event.value)\\\"\\n                    @blur-invalid=\\\"errorScrollIntoView\\\"\\n                    @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                  >\\n                    <!-- “属性名”为空是显示提示信息 -->\\n                    <el-tooltip\\n                      :visible=\\\"tooltipOpened === 'entityAttribute' && !itemNameValue\\\"\\n                      placement=\\\"top-start\\\"\\n                      content=\\\"属性为英文字母、数字和下划线，且首字母小写\\\"\\n                    >\\n                      <s-input\\n                        :placeholder=\\\"entityPropertyPlaceholder\\\"\\n                        :model-value=\\\"item.naslNode.name\\\"\\n                        ref=\\\"nameEditor\\\"\\n                        :class=\\\"$style.input\\\"\\n                        @focus=\\\"onFocusName(item)\\\"\\n                        @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                        @input=\\\"slotProps.inputChange($event)\\\"\\n                        @keyup.enter=\\\"$event.target.blur()\\\"\\n                        @update:modelValue=\\\"itemNameValue = $event\\\"\\n                      ></s-input>\\n                    </el-tooltip>\\n                  </u-validator>\\n                </div>\\n              </template>\\n              <!-- 禁用状态 -->\\n              <div v-else :class=\\\"$style.text\\\">\\n                <span>{{ item.naslNode.name }}</span>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 数据类型 -->\\n          <el-table-column label=\\\"数据类型\\\" min-width=\\\"247\\\">\\n            <template #header>\\n              <div class=\\\"theadLable\\\">数据类型</div>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <template v-else>\\n                <el-tooltip v-if=\\\"isAppDeploying\\\" content=\\\"应用发布中，暂不能修改\\\" placement=\\\"bottom-start\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </el-tooltip>\\n                <!-- 禁用状态 / 已经发布过的复合类型 -->\\n                <template v-else-if=\\\"getDisable(item) || isPublishedComplexType(item)\\\">\\n                  <div :class=\\\"$style.text\\\">\\n                    <span>{{ showDatatype(item) }}</span>\\n                  </div>\\n                </template>\\n                <!-- 非禁用状态 -->\\n                <template v-else>\\n                  <!-- 展示态 -->\\n                  <div\\n                    v-if=\\\"item.edit !== 'datatype'\\\"\\n                    tabindex=\\\"0\\\"\\n                    :class=\\\"$style.edit\\\"\\n                    :ref=\\\"`datatype${item.naslNode.id}`\\\"\\n                    :title=\\\"showDatatype(item)\\\"\\n                    @dblclick=\\\"onDblClickDatatype(item, $event)\\\"\\n                    @keyup=\\\"onKeyUp($event, item, 'datatype')\\\"\\n                  >\\n                    <div :class=\\\"$style.text\\\">\\n                      <span :class=\\\"$style.textContent\\\">{{ showDatatype(item) }}</span>\\n                      <s-others-icon\\n                        name=\\\"edit\\\"\\n                        :class=\\\"[$style.iconBase, $style.iconEdit]\\\"\\n                        @click=\\\"(getDataTypeList(), onSetItemEdit(item, 'datatype', false))\\\"\\n                      ></s-others-icon>\\n                    </div>\\n                  </div>\\n                  <!-- 编辑态 -->\\n                  <div v-else :class=\\\"$style.editwrap\\\">\\n                    <el-tooltip :content=\\\"`${isAppDeploying ? '应用发布中，暂不能修改' : ''}`\\\" placement=\\\"bottom-start\\\">\\n                      <s-datatype-select\\n                        :unionable=\\\"false\\\"\\n                        :no-union-subtype=\\\"true\\\"\\n                        :data-type-list=\\\"item.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                        :last-version=\\\"item.naslNode.lastVersion\\\"\\n                        :type-annotation=\\\"item.naslNode.typeAnnotation\\\"\\n                        :concept=\\\"item.naslNode.entity.concept\\\"\\n                        :show-system-types=\\\"false\\\"\\n                        :show-generic-types=\\\"true\\\"\\n                        :show-entity=\\\"true\\\"\\n                        :show-structures=\\\"true\\\"\\n                        :emptyable=\\\"false\\\"\\n                        :hasAnonymousStructure=\\\"true\\\"\\n                        :disabled=\\\"item.naslNode.readonly || isAppDeploying || isPublishedComplexType(item)\\\"\\n                        @blur=\\\"handleBlur(item)\\\"\\n                        @change=\\\"onChangeDatatype\\\"\\n                      ></s-datatype-select>\\n                    </el-tooltip>\\n                  </div>\\n                </template>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 是否必填 -->\\n          <el-table-column label=\\\"是否必填\\\" width=\\\"70\\\" prop=\\\"required\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else style=\\\"margin-left: 16px\\\">\\n                <el-checkbox\\n                  v-model=\\\"item.naslNode.required\\\"\\n                  :disabled=\\\"getDisable(item) || isComplexType(item) || isOfficalEntity(item)\\\"\\n                  :tabindex=\\\"item.editable === false || item.loading || item.naslNode.parentNode.loading ? -1 : 0\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"requireInput(item, $event)\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 默认值 -->\\n          <el-table-column label=\\\"默认值\\\" prop=\\\"defaultValue\\\" width=\\\"120\\\" :resizable=\\\"false\\\">\\n            <template #default=\\\"{ row: item }\\\">\\n              <div v-if=\\\"['createdTime', 'updatedTime'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>自动生成</span>\\n              </div>\\n              <div v-else-if=\\\"['createdBy', 'updatedBy'].includes(item.naslNode.name)\\\" :class=\\\"$style.text\\\">\\n                <span>（无）</span>\\n              </div>\\n              <template v-else-if=\\\"!canSetDefaultValue(item)\\\">\\n                <div :class=\\\"$style.text\\\">\\n                  <span>（无）</span>\\n                </div>\\n              </template>\\n              <template\\n                v-else-if=\\\"\\n                  item.loading || item.naslNode.parentNode.loading || item.naslNode.generationRule !== 'manual'\\n                \\\"\\n              >\\n                <div :class=\\\"$style.text\\\">\\n                  <div :class=\\\"$style.text\\\" v-if=\\\"item.naslNode.generationRule === 'auto'\\\">\\n                    <span>自动生成</span>\\n                  </div>\\n                  <span v-else>{{ item.naslNode.defaultValue }}</span>\\n                </div>\\n              </template>\\n              <template v-else>\\n                <s-attr-input\\n                  title=\\\"默认值绑定\\\"\\n                  node-concept=\\\"defaultValue\\\"\\n                  :name=\\\"item.naslNode.name\\\"\\n                  :parent-node=\\\"item.naslNode\\\"\\n                  :node=\\\"item.naslNode.defaultValue\\\"\\n                  :class=\\\"{\\n                    [$style.typeError]: IsError(item.naslNode),\\n                  }\\\"\\n                ></s-attr-input>\\n              </template>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表格 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inTable\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表格\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inTable\\\"\\n                @change=\\\"toggleSelectAll($event, 'inTable')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inTable\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inTable')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在筛选 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inFilter\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在筛选\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inFilter\\\"\\n                @change=\\\"toggleSelectAll($event, 'inFilter')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inFilter\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inFilter')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在表单 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inForm\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在表单\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inForm\\\"\\n                @change=\\\"toggleSelectAll($event, 'inForm')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inForm\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inForm')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n          <!-- 显示在详情 -->\\n          <el-table-column width=\\\"100\\\" prop=\\\"display.inDetail\\\" :resizable=\\\"false\\\">\\n            <template #header>\\n              <el-checkbox\\n                label=\\\"显示在详情\\\"\\n                :class=\\\"$style.checkbolabel\\\"\\n                :model-value=\\\"inDetail\\\"\\n                @change=\\\"toggleSelectAll($event, 'inDetail')\\\"\\n              ></el-checkbox>\\n            </template>\\n            <template #default=\\\"{ row: item, $index }\\\">\\n              <template v-if=\\\"$index === -1\\\" />\\n              <div v-else :data-item-id=\\\"item.id\\\">\\n                <el-checkbox\\n                  :model-value=\\\"item.naslNode.display.inDetail\\\"\\n                  :disabled=\\\"item.loading || item.naslNode.parentNode.loading\\\"\\n                  :class=\\\"$style.checkbox\\\"\\n                  @change=\\\"setDisplay(item, $event, 'inDetail')\\\"\\n                ></el-checkbox>\\n              </div>\\n            </template>\\n          </el-table-column>\\n        </el-table>\\n        <!-- 右键点击 -->\\n        <el-popover\\n          :disabled-scroll=\\\"true\\\"\\n          trigger=\\\"click\\\"\\n          ref=\\\"menuPopper\\\"\\n          :popper-options=\\\"popperOptions\\\"\\n          v-if=\\\"menuSelectedItem && popperExistMap[menuSelectedItem.id]\\\"\\n          v-model:visible=\\\"popperVisibleMap[menuSelectedItem && menuSelectedItem.id]\\\"\\n          :virtual-ref=\\\"triggerRef\\\"\\n          :placement=\\\"placement\\\"\\n          :show-arrow=\\\"false\\\"\\n          @hide=\\\"onMenuPopperHide\\\"\\n        >\\n          <el-menu :class=\\\"$contextmenu.menu\\\" @click=\\\"onMenuClick\\\">\\n            <el-menu-item-group :class=\\\"$contextmenu.group\\\" title=\\\"属性\\\">\\n              <el-menu-item :class=\\\"$contextmenu.item\\\" @click=\\\"onMenuFindUsage\\\">查找引用</el-menu-item>\\n              <el-menu-item\\n                :class=\\\"$contextmenu.item\\\"\\n                @click=\\\"onMenuDelete(removeItem)\\\"\\n                :disabled=\\\"\\n                  (menuSelectedItem && menuSelectedItem.primaryKey) ||\\n                  isOfficalEntityProperty({\\n                    naslNode: menuSelectedItem,\\n                  }) ||\\n                  isViewEntity\\n                \\\"\\n              >\\n                删除\\n              </el-menu-item>\\n            </el-menu-item-group>\\n          </el-menu>\\n        </el-popover>\\n      </div>\\n      <template v-if=\\\"selectedItem\\\">\\n        <div :class=\\\"[$style.flexgrid, $style.bodywrap1]\\\">\\n          <div :class=\\\"$style.gridcolumn\\\" class=\\\"extraForm\\\">\\n            <el-form\\n              ref=\\\"selectedItemForm\\\"\\n              :model=\\\"selectedItem\\\"\\n              :class=\\\"[$style.reffrom, $style.blockFromLayout, 's-data-attr-designer-form']\\\"\\n              label-width=\\\"85px\\\"\\n              label-position=\\\"right\\\"\\n              :inline=\\\"true\\\"\\n            >\\n              <!-- 最 大/小 值/长度 -->\\n              <skeleton-render\\n                name=\\\"views/data/components/entity-field-rules/index\\\"\\n                :property=\\\"selectedItem.naslNode\\\"\\n                :key=\\\"'rules_' + selectedItem.naslNode.name\\\"\\n                :disabled=\\\"\\n                  selectedItem.loading ||\\n                  selectedItem.naslNode.parentNode.loading ||\\n                  selectedItem.naslNode.editable === false ||\\n                  isViewEntity\\n                \\\"\\n                :is-view-entity=\\\"isViewEntity\\\"\\n                direction=\\\"horizontal\\\"\\n                :class=\\\"$style.rules\\\"\\n              />\\n              <!-- 小数位数 -->\\n              <el-form-item v-if=\\\"typeName === 'Decimal'\\\" label=\\\"小数位数\\\">\\n                <el-input-number\\n                  placeholder=\\\"请输入小数位数\\\"\\n                  :color=\\\"scaleErrorMsg ? 'error' : ''\\\"\\n                  v-model=\\\"model.scale\\\"\\n                  :min=\\\"scaleOption.min\\\"\\n                  :max=\\\"scaleOption.max\\\"\\n                  controls-position=\\\"right\\\"\\n                  :disabled=\\\"decimalDisabled(selectedItem) || isViewEntity\\\"\\n                  :value-on-clear=\\\"0\\\"\\n                  @keyup.enter=\\\"$event.target.blur()\\\"\\n                  @change=\\\"setScale\\\"\\n                ></el-input-number>\\n                <div v-if=\\\"scaleErrorMsg\\\" :class=\\\"$style.scaleErrorMsg\\\">\\n                  <s-others-icon name=\\\"solid-hint\\\"></s-others-icon>\\n                  {{ scaleErrorMsg }}\\n                </div>\\n              </el-form-item>\\n              <!-- 关联属性 -->\\n              <el-form-item :key=\\\"selectedItem.naslNode.name\\\">\\n                <template #label>\\n                  <div style=\\\"display: flex; align-items: center\\\">\\n                    关联属性\\n                    <s-others-icon name=\\\"link2\\\" :class=\\\"$style.iconLink2\\\"></s-others-icon>\\n                  </div>\\n                </template>\\n                <skeleton-render\\n                  name=\\\"views/data/entity-reference/index\\\"\\n                  :entity=\\\"entity\\\"\\n                  :property=\\\"selectedItem.naslNode\\\"\\n                  :value=\\\"entityReference\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  :data-type-list=\\\"selectedItem.naslNode.lastVersion ? dataTypeList : undefined\\\"\\n                  :error=\\\"isReleationEntityError(selectedItem.naslNode)\\\"\\n                  @save=\\\"onSaveReference\\\"\\n                  @clear=\\\"onClearReference\\\"\\n                />\\n              </el-form-item>\\n              <!-- 属性记录 -->\\n              <el-form-item\\n                label=\\\"关联属性实体记录删除规则\\\"\\n                v-if=\\\"selectedItem.naslNode.relationProperty\\\"\\n                layout=\\\"block\\\"\\n                class=\\\"relationDelRule\\\"\\n              >\\n                <el-select\\n                  style=\\\"width: 240px\\\"\\n                  v-model=\\\"selectedItem.naslNode.deleteRule\\\"\\n                  placeholder=\\\"请选择\\\"\\n                  :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                  @change=\\\"setDeleteRule\\\"\\n                >\\n                  <el-option label=\\\"不允许删除\\\" value=\\\"protect\\\"></el-option>\\n                  <el-option label=\\\"允许删除且同时删除本实体记录\\\" value=\\\"cascade\\\"></el-option>\\n                </el-select>\\n              </el-form-item>\\n              <!-- 主键生成规则 -->\\n              <el-form-item v-if=\\\"selectedItem.naslNode.primaryKey\\\" label=\\\"主键生成规则\\\" placement=\\\"bottom\\\">\\n                <skeleton-render\\n                  name=\\\"views/data/components/entity-primarykey-rules/index\\\"\\n                  :disabled=\\\"isViewEntity\\\"\\n                  :entity=\\\"entity\\\"\\n                  :selected-item=\\\"selectedItem.naslNode\\\"\\n                  @changeErrorMsgs=\\\"changeErrorMsgs\\\"\\n                />\\n              </el-form-item>\\n              <!-- 数据库列名 -->\\n              <el-form-item label=\\\"数据库列名\\\" placement=\\\"bottom\\\">\\n                <u-validator\\n                  ref=\\\"columnNameValidatorRef\\\"\\n                  style=\\\"width: 100%\\\"\\n                  :rules=\\\"entityPropertyColumnNameRules\\\"\\n                  :value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                  @blur-dirty-valid=\\\"selectedItem.naslNode.setColumnName($event.value)\\\"\\n                  v-slot=\\\"slotProps\\\"\\n                >\\n                  <s-input\\n                    :placeholder=\\\"entityPropertyColumnNamePlaceholder\\\"\\n                    :model-value=\\\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\\\"\\n                    :disabled=\\\"isTableOrExcelOrigin || isViewEntity\\\"\\n                    @change=\\\"slotProps.blurChange\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                    @keyup.enter.stop=\\\"$event.target.blur()\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n              <!-- 描述 -->\\n              <el-form-item label=\\\"描述\\\" prop=\\\"description\\\">\\n                <u-validator\\n                  v-slot=\\\"slotProps\\\"\\n                  :value=\\\"selectedItem.naslNode.description\\\"\\n                  rules=\\\"maxLength(63)\\\"\\n                  :class=\\\"$style.validator\\\"\\n                  @blur-valid=\\\"onBlurDescription(selectedItem, $event.value)\\\"\\n                  @blur-invalid=\\\"errorScrollIntoView\\\"\\n                  @validate-result=\\\"hasInvalid = !$event.valid\\\"\\n                >\\n                  <s-input\\n                    type=\\\"textarea\\\"\\n                    ref=\\\"descriptionEditor\\\"\\n                    placeholder=\\\"请输入描述\\\"\\n                    :model-value=\\\"selectedItem.naslNode.description\\\"\\n                    :disabled=\\\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\\\"\\n                    @blur:value=\\\"slotProps.blurFn($event)\\\"\\n                    @keyup.enter=\\\"slotProps.blurFn()\\\"\\n                    @input=\\\"slotProps.inputChange($event)\\\"\\n                  ></s-input>\\n                </u-validator>\\n              </el-form-item>\\n            </el-form>\\n          </div>\\n        </div>\\n        <div :class=\\\"$style.advancedWrap\\\" v-if=\\\"showDatabasetype\\\">\\n          <el-form :disabled=\\\"isViewEntity\\\" label-width=\\\"80px\\\" gap=\\\"small\\\" class=\\\"s-data-attr-designer-form\\\">\\n            <skeleton-render\\n              name=\\\"views/data/components/entity-property-databasetype/index\\\"\\n              :property=\\\"selectedItem.naslNode\\\"\\n            />\\n          </el-form>\\n        </div>\\n      </template>\\n      <div :class=\\\"$style.bodywrap1\\\" v-show=\\\"errorMsgs.length || sourceSyncErrMsgs.length\\\">\\n        <div v-for=\\\"errorMsg in errorMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n        <!-- 实体在同步数据源时产生的错误信息 -->\\n        <div v-for=\\\"errorMsg in sourceSyncErrMsgs\\\" :key=\\\"errorMsg\\\" :class=\\\"$propertyDesigner.errorMsg\\\">\\n          <i :class=\\\"$propertyDesigner.infoicon\\\"></i>\\n          <span>{{ errorMsg }}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- 查询弹出框 -->\\n    <el-popover\\n      :visible=\\\"reflowPopoverVisible\\\"\\n      :virtual-ref=\\\"labelEditor\\\"\\n      :show-arrow=\\\"false\\\"\\n      placement=\\\"bottom-start\\\"\\n      :width=\\\"340\\\"\\n      virtual-triggering\\n    >\\n      <div class=\\\"reflowPopover\\\" v-loading=\\\"reflowPopoverLoading\\\">\\n        <div class=\\\"reflowPopoverEmpty\\\" v-if=\\\"fieldList.length === 0\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"centerFlex\\\" style=\\\"font-size: 28px; margin-bottom: 20px\\\"></s-others-icon>\\n          <span class=\\\"centerFlex\\\">暂无推荐字段</span>\\n        </div>\\n        <div v-else>\\n          <el-scrollbar height=\\\"250px\\\">\\n            <div\\n              class=\\\"reflowPopoverItem\\\"\\n              v-for=\\\"item in fieldList\\\"\\n              :key=\\\"item.id\\\"\\n              @mouseenter=\\\"activeItem = item\\\"\\n              @mouseleave=\\\"activeItem = null\\\"\\n            >\\n              <el-row :gutter=\\\"10\\\">\\n                <el-col :span=\\\"9\\\" class=\\\"sle\\\">\\n                  <el-tooltip :content=\\\"item.name\\\" placement=\\\"top\\\" :show-after=\\\"500\\\" :disabled=\\\"!isTextOverflow\\\">\\n                    <div\\n                      class=\\\"tooltip-trigger\\\"\\n                      v-html=\\\"getFieldName(item.name, item.matchedNames)\\\"\\n                      @mouseenter=\\\"checkOverflow\\\"\\n                    ></div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col class=\\\"sle\\\" :span=\\\"8\\\">\\n                  <el-tooltip\\n                    :content=\\\"getFieldTypeTitle(item)\\\"\\n                    placement=\\\"top\\\"\\n                    :show-after=\\\"500\\\"\\n                    :disabled=\\\"!isTextOverflow\\\"\\n                  >\\n                    <div class=\\\"tooltip-trigger\\\" @mouseenter=\\\"checkOverflow\\\">{{ getFieldTypeTitle(item) }}</div>\\n                  </el-tooltip>\\n                </el-col>\\n                <el-col :span=\\\"4\\\">\\n                  {{ item.required ? '必填' : '非必填' }}\\n                </el-col>\\n                <el-col :span=\\\"3\\\" v-show=\\\"activeItem?.id === item.id\\\" style=\\\"color: #2383ff\\\">使用</el-col>\\n              </el-row>\\n            </div>\\n          </el-scrollbar>\\n        </div>\\n        <div style=\\\"height: 18px; margin-top: 10px\\\">\\n          <s-others-icon name=\\\"hint\\\" class=\\\"warningIcon\\\"></s-others-icon>\\n          <span>输入_，可进行词根匹配</span>\\n        </div>\\n      </div>\\n    </el-popover>\\n    <!-- 添加至备选数据库字段库弹窗 -->\\n    <el-dialog v-model=\\\"reflowDialogVisible\\\" title=\\\"一键添加到备选字段库\\\" width=\\\"50%\\\">\\n      <el-table\\n        ref=\\\"reflowTableRef\\\"\\n        :data=\\\"reflowFieldList\\\"\\n        @select=\\\"handleSelectReflowField\\\"\\n        @select-all=\\\"handleSelectReflowField\\\"\\n      >\\n        <el-table-column type=\\\"selection\\\" width=\\\"40\\\" />\\n        <el-table-column label=\\\"字段注释\\\" prop=\\\"label\\\" />\\n        <el-table-column label=\\\"字段名\\\" prop=\\\"name\\\" />\\n        <el-table-column label=\\\"数据类型\\\" prop=\\\"type\\\" />\\n        <el-table-column label=\\\"是否必填\\\" prop=\\\"required\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ scope.row.required ? '是' : '否' }}</span>\\n          </template>\\n        </el-table-column>\\n        <el-table-column label=\\\"字段长度\\\" prop=\\\"length\\\">\\n          <template #default=\\\"scope\\\">\\n            <span>{{ getReflowFieldLength(scope.row) }}</span>\\n          </template>\\n        </el-table-column>\\n      </el-table>\\n      <template #footer>\\n        <div class=\\\"reflowDialogFooter\\\">\\n          <el-button\\n            type=\\\"primary\\\"\\n            :disabled=\\\"reflowConfirmBtnDisabled\\\"\\n            :loading=\\\"confirmLoading\\\"\\n            @click=\\\"handleUploadReflowField\\\"\\n          >\\n            确 定\\n          </el-button>\\n          <el-button @click=\\\"reflowDialogVisible = false\\\">取 消</el-button>\\n        </div>\\n      </template>\\n    </el-dialog>\\n  </div>\\n</template>\\n\\n<script setup>\\n  import { inject, onMounted, ref, nextTick } from 'vue';\\n  import { ElMessage, ClickOutside as vClickOutside } from 'element-plus';\\n  import { requestApi, getIsReflowField, getFieldList, getReflowFieldList, uploadReflowField } from '../apis';\\n  import { debounce } from '../utils';\\n\\n  const props = defineProps({\\n    entity: Object,\\n  });\\n\\n  const handleAddItem = () => {\\n    addItem();\\n    nextTick(() => {\\n      onSetItemEdit(selectedItem.value, 'label', true);\\n    });\\n  };\\n\\n  const showReflowBtn = ref(false);\\n\\n  const reflowPopoverVisible = ref(false);\\n  const fieldList = ref([]);\\n  const reflowQuery = ref('');\\n  const abortController = ref(null);\\n  const requestId = ref(0); // 用于标识当前请求\\n\\n  const debounceQueryFieldList = debounce(() => {\\n    // 设置loading状态\\n    reflowPopoverLoading.value = true;\\n\\n    // 取消之前的请求\\n    if (abortController.value) {\\n      abortController.value.abort();\\n    }\\n\\n    // 创建新的 AbortController 和请求ID\\n    abortController.value = new AbortController();\\n    const currentRequestId = ++requestId.value;\\n\\n    getFieldList({ query: reflowQuery.value }, abortController.value.signal)\\n      .then(res => {\\n        // 只有当前请求是最新的才更新数据\\n        if (currentRequestId === requestId.value) {\\n          fieldList.value = res.result || [];\\n        }\\n      })\\n      .catch(err => {\\n        if (err.name !== 'AbortError') {\\n          console.error(err);\\n        }\\n      })\\n      .finally(() => {\\n        // 只有当前请求是最新的才更新加载状态\\n        if (currentRequestId === requestId.value) {\\n          abortController.value = null;\\n          reflowPopoverLoading.value = false;\\n        }\\n      });\\n  }, 400);\\n\\n  const reflowPopoverLoading = ref(false);\\n  const activeItem = ref(null);\\n\\n  const getFieldName = (name, matchedNames) => {\\n    if (!name || typeof name !== 'string') return '';\\n    if (!Array.isArray(matchedNames)) return `<span style=\\\"color: red; font-weight: bold;\\\">${name}</span>`;\\n\\n    const matchedSet = new Set(matchedNames.filter(item => item && typeof item === 'string'));\\n    const parts = name.split(/(_+)/);\\n\\n    return parts\\n      .map(part => {\\n        if (part.startsWith('_')) return part;\\n        return matchedSet.has(part) ? part : `<span style=\\\"color: red; font-weight: bold;\\\">${part}</span>`;\\n      })\\n      .join('');\\n  };\\n\\n  const getFieldTypeTitle = item => {\\n    if (item.type === 'String') {\\n      const stringLabel = getStringLabel(item.length);\\n      return item.type + (stringLabel ? `  (${stringLabel})` : '');\\n    }\\n    return item.type;\\n  };\\n\\n  const columnNameValidatorRef = ref(null);\\n\\n  const handleUseField = item => {\\n    const target = selectedItem.value?.naslNode;\\n    if (target?.concept === 'EntityProperty') {\\n      target.app.emit('collect:start', { actionMsg: '数据建模插件更新字段名' });\\n      const newName = target.parentNode?.getPropertyUniqueName?.(item.name) || item.name; // 保证字段名唯一\\n      const typeName = item.type === 'Integer' ? 'Long' : item.type;\\n      const updateData = {\\n        name: newName,\\n        columnName: newName,\\n        required: item.required,\\n        typeAnnotation: {\\n          concept: 'TypeAnnotation',\\n          typeKind: 'primitive',\\n          typeNamespace: 'nasl.core',\\n          typeName,\\n        },\\n      };\\n      if (item.type === 'String' && item.length) {\\n        const minRule = target.toJSON().rules.find(rule => rule.startsWith('minLength'));\\n        Object.assign(updateData, {\\n          databaseTypeAnnotation: {\\n            concept: 'DatabaseTypeAnnotation',\\n            typeName: 'varchar',\\n            arguments: {\\n              length: item.length,\\n            },\\n          },\\n          rules: [minRule, `maxLength(${item.length})`].filter(Boolean),\\n        });\\n      }\\n      target.update(updateData);\\n      setTimeout(() => {\\n        // 延迟收集，把外层onBlurLabel的change也收集到这次的batchInstruct中\\n        target.app.emit('collect:end');\\n      });\\n\\n      nextTick(async () => {\\n        try {\\n          const res = await columnNameValidatorRef.value?.validate();\\n        } catch (error) {\\n          // console.error(error);\\n          // 新设置的字段名不符合规则，主动聚焦到输入框\\n          onSetItemEdit(selectedItem.value, 'name', true);\\n        }\\n      });\\n    }\\n  };\\n\\n  const handleLabelFocus = label => {\\n    reflowQuery.value = label;\\n  };\\n\\n  const handleLabelBlur = async (event, slotProps, item) => {\\n    reflowPopoverVisible.value = false;\\n    reflowQuery.value = '';\\n    fieldList.value = [];\\n\\n    event = event.replace(/_/g, ''); // event 去除掉_\\n\\n    slotProps.blurFn(event); // 触发模版中原来的失焦逻辑\\n    if (activeItem.value) {\\n      handleUseField(activeItem.value);\\n      activeItem.value = null;\\n    }\\n  };\\n\\n  const handleLabelInput = (event, slotProps) => {\\n    reflowPopoverVisible.value = true;\\n    reflowQuery.value = event;\\n    slotProps.inputChange(event); // 触发模版中原有的修改逻辑\\n    // 外置设置防抖查询loading状态\\n    reflowPopoverLoading.value = true;\\n    debounceQueryFieldList();\\n  };\\n\\n  onMounted(() => {\\n    getIsReflowField({}).then(res => {\\n      showReflowBtn.value = res.result;\\n    });\\n  });\\n\\n  // 一键添加到备选字段库\\n  const reflowLoading = ref(false);\\n  const reflowFieldList = ref([]);\\n\\n  const addReflowField = () => {\\n    reflowLoading.value = true;\\n\\n    const filterList = ['id', 'createdTime', 'updatedTime', 'createdBy', 'updatedBy'];\\n    const filterRegex = /^property\\\\d+$|^.*[\\\\u4e00-\\\\u9fa5].*$/;\\n\\n    const properties = props.entity?.toJSON()?.properties || [];\\n    const tempReflowFieldList = [];\\n    const nameSet = new Set();\\n    properties.forEach(property => {\\n      if (\\n        !property.label ||\\n        filterList.includes(property.name) ||\\n        filterRegex.test(property.name) ||\\n        property.typeAnnotation?.typeKind !== 'primitive'\\n      ) {\\n        return;\\n      }\\n      let type = property.typeAnnotation?.typeName || 'String';\\n      if (type === 'Long') type = 'Integer'; // 整数类型需要重命名为Integer\\n      const propertyName = property.name.replace(/\\\\d+$/, '') || '';\\n      if (nameSet.has(propertyName)) {\\n        return;\\n      }\\n      nameSet.add(propertyName);\\n      tempReflowFieldList.push({\\n        name: propertyName,\\n        label: property.label || '',\\n        required: property.required || false,\\n        type,\\n        length: type === 'String' ? property.databaseTypeAnnotation?.arguments?.length || 255 : void 0,\\n      });\\n    });\\n    reflowFieldList.value = tempReflowFieldList;\\n    if (reflowFieldList.length === 0) {\\n      reflowLoading.value = false;\\n      showMessage();\\n      return;\\n    }\\n\\n    // 备选库不需要校验字段唯一性，直接打开弹窗\\n    requestApi(\\n      getReflowFieldList,\\n      {\\n        list: tempReflowFieldList.map(item => ({\\n          name: item.name,\\n          label: item.label,\\n        })),\\n      },\\n      res => {\\n        if (res.result?.length === 0) {\\n          showMessage();\\n          return;\\n        } else {\\n          // 只有在res.result中的name，在tempReflowFieldList中存在，才显示\\n          const set = new Set(res.result);\\n          reflowFieldList.value = tempReflowFieldList.filter(item => set.has(item.name));\\n          reflowDialogVisible.value = true;\\n          nextTick(() => {\\n            reflowConfirmBtnDisabled.value = false;\\n            reflowTableRef.value.toggleAllSelection();\\n          });\\n        }\\n      },\\n      err => {\\n        console.error(err);\\n      },\\n      () => {\\n        reflowLoading.value = false;\\n      }\\n    );\\n    // reflowDialogVisible.value = true;\\n    // reflowLoading.value = false;\\n    // nextTick(() => {\\n    //   reflowConfirmBtnDisabled.value = false;\\n    //   reflowTableRef.value.toggleAllSelection();\\n    // });\\n  };\\n\\n  // 显示[暂无可回流到备选数据库的字段]消息\\n  const showMessage = (type = 'warning', msg = '暂无可回流到备选数据库的字段') => {\\n    ElMessage.closeAll();\\n    ElMessage[type](msg);\\n  };\\n\\n  const reflowDialogVisible = ref(false);\\n  const reflowTableRef = ref(null);\\n\\n  const getStringLabel = length => {\\n    const map = {\\n      255: '短 255',\\n      4000: '中 4000',\\n      16777215: '长 16777215',\\n    };\\n    return map[length] || length;\\n  };\\n  const getReflowFieldLength = row => {\\n    return row.type === 'String' ? getStringLabel(row.length) : '-';\\n  };\\n\\n  const reflowConfirmBtnDisabled = ref(false);\\n  const isTextOverflow = ref(false);\\n\\n  // 检测文本是否溢出\\n  const checkOverflow = event => {\\n    const element = event.target;\\n    isTextOverflow.value = element.scrollWidth > element.clientWidth;\\n  };\\n  const handleSelectReflowField = (selection, row) => {\\n    reflowConfirmBtnDisabled.value = selection.length === 0;\\n  };\\n\\n  const confirmLoading = ref(false);\\n  const handleUploadReflowField = () => {\\n    confirmLoading.value = true;\\n    const selectedList = reflowTableRef.value.getSelectionRows();\\n    requestApi(\\n      uploadReflowField,\\n      {\\n        list: selectedList,\\n      },\\n      res => {\\n        if (res.result) {\\n          showMessage('success', '添加成功');\\n          reflowDialogVisible.value = false;\\n        } else {\\n          showMessage('error', res.msg || '添加失败');\\n        }\\n      },\\n      err => {\\n        // console.error(err);\\n        showMessage('error', err);\\n      },\\n      () => {\\n        confirmLoading.value = false;\\n      }\\n    );\\n  };\\n\\n  const {\\n    /**\\n     * 名称输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    nameEditor,\\n    /**\\n     * 标题输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    labelEditor,\\n    /**\\n     * 描述输入框节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    descriptionEditor,\\n    /**\\n     * 表格节点\\n     *\\n     * @type {Vue.ref<HTMLElement>}\\n     */\\n    tableviewRef,\\n    /**\\n     * 数据库视图导入生成的实体\\n     * entity 的 origin 属性是否是 view\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isViewEntity,\\n    /**\\n     * 添加实体属性\\n     *\\n     * @function\\n     */\\n    addItem,\\n    /**\\n     * 生成移除按钮的提示\\n     *\\n     * @function\\n     * @return string\\n     */\\n    getRemoveTooltip,\\n    /**\\n     * 表格选中的行元素\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    selectedItem,\\n    /**\\n     * 是否是官方实体属性\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntityProperty,\\n    /**\\n     * 移除实体索引\\n     *\\n     * @function\\n     * @param item - 需要删除的行元素\\n     */\\n    removeItem,\\n    /**\\n     * 表格的渲染数据\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    renderList,\\n    /**\\n     * 上移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveUpItem,\\n    /**\\n     * 下移当前选中的实体索引\\n     *\\n     * @function\\n     */\\n    moveDownItem,\\n    /**\\n     * 表格高度\\n     *\\n     * @type {Vue.computed<number>}\\n     */\\n    tableHeight,\\n    /**\\n     * 设置表单列的样式\\n     *\\n     * @function\\n     */\\n    setRowClassName,\\n    /**\\n     * 右键选中表格行元素\\n     *\\n     * @function\\n     */\\n    onContextMenuRow,\\n    /**\\n     * 选中行元素时触发\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    onSelectRowWithDataType,\\n    /**\\n     * 拖拽调整表格列宽度\\n     *\\n     * @function\\n     * @param newWidth - 新宽度\\n     * @param oldWidth - 旧宽度\\n     * @param column - 列元素\\n     */\\n    handleDragend,\\n    /**\\n     * 是否禁止编辑行元素\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    getDisable,\\n    /**\\n     * 设置表格列元素编辑状态\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 属性名称\\n     * @param focus - 是否选中输入框\\n     */\\n    onSetItemEdit,\\n    /**\\n     * Tab 键跳转切换下一个属性\\n     *\\n     * @function\\n     * @param event - 原生键盘事件\\n     * @param item - 行元素\\n     * @param name - 属性名称\\n     */\\n    onKeyUp,\\n    /**\\n     * 名称输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的名称\\n     */\\n    onBlurName,\\n    /**\\n     * 验证不通过时滚动到错误元素\\n     */\\n    errorScrollIntoView,\\n    /**\\n     * 存在错误\\n     *\\n     * @type {Vue.ref<boolean>}\\n     */\\n    hasInvalid,\\n    /**\\n     * 显示输入框的提示\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    tooltipOpened,\\n    /**\\n     * 属性名，暂时存储属性名，用于输入框输入等操作\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    itemNameValue,\\n    /**\\n     * 输入框获取焦点时触发\\n     *\\n     * 1. 设置tooltipOpened的值\\n     * 2. 设置itemNameValue\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     */\\n    onFocusName,\\n    /**\\n     * 标题输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的标题\\n     */\\n    onBlurLabel,\\n    /**\\n     * 是否应用正在发布\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isAppDeploying,\\n    /**\\n     * 是否实体已经发布过并且是复合类型\\n     *\\n     * 1. 实体已经发布过，在app下的depEntities可以找到该实体\\n     * 2. 实体是复合类型：'Map', 'List'，或者typeKind是reference并且namespace是'entities', 'structures'\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isPublishedComplexType,\\n    /**\\n     * 数据类型的标题\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return string\\n     */\\n    showDatatype,\\n    /**\\n     * 双击编辑数据类型输入框\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - 原生事件\\n     */\\n    onDblClickDatatype,\\n    /**\\n     * 获取可选类型\\n     *\\n     * @function\\n     * @return 可选类型\\n     */\\n    getDataTypeList,\\n    /**\\n     * 失焦时取消当前行元素编辑状态\\n     *\\n     * @function\\n     * @param item - 行元素\\n     */\\n    handleBlur,\\n    /**\\n     * 修改实体属性类型\\n     *\\n     * @function\\n     * @param event - event.value 实际使用数据\\n     */\\n    onChangeDatatype,\\n    /**\\n     * 是否属于官方实体\\n     *\\n     * @function\\n     * @param entityProperty - 实体属性\\n     * @return boolean\\n     */\\n    isOfficalEntity,\\n    /**\\n     * 复合类型\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    isComplexType,\\n    /**\\n     * 修改是否必填\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkbox 原生事件\\n     */\\n    requireInput,\\n    /**\\n     * 能否设置默认值\\n     *\\n     * @function\\n     * @param property - 实体属性\\n     * @return boolean\\n     */\\n    canSetDefaultValue,\\n    /**\\n     * 对应节点是否有错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    IsError,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inTable,\\n    /**\\n     * 全部勾选或者取消全部勾选\\n     *\\n     * @function\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    toggleSelectAll,\\n    /**\\n     * 设置显示属性\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @param event - el-checkhox 原生事件\\n     * @param key - 属性名\\n     */\\n    setDisplay,\\n    /**\\n     * 显示在筛选\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inFilter,\\n    /**\\n     * 显示在表格\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inForm,\\n    /**\\n     * 显示在详情\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    inDetail,\\n    /**\\n     * ElementPlus 的 popper 配置\\n     */\\n    popperOptions,\\n    /**\\n     * 右键菜单选中项\\n     *\\n     * @type {Vue.ref<object>}\\n     */\\n    menuSelectedItem,\\n    /**\\n     * 项对应的右键菜单是否存在\\n     */\\n    popperExistMap,\\n    /**\\n     * 项对应的右键菜单是否显示\\n     */\\n    popperVisibleMap,\\n    /**\\n     * 右键菜单的触发节点\\n     */\\n    triggerRef,\\n    /**\\n     * 右键菜单的出现位置\\n     */\\n    placement,\\n    /**\\n     * 右键菜单隐藏时的处理函数\\n     */\\n    onMenuPopperHide,\\n    /**\\n     * 菜单点击时\\n     */\\n    onMenuClick,\\n    /**\\n     * 菜单-查找引用\\n     *\\n     * @function\\n     */\\n    onMenuFindUsage,\\n    /**\\n     * 菜单-删除\\n     *\\n     * @function\\n     */\\n    onMenuDelete,\\n    /**\\n     * 实体属性数据类型\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    typeName,\\n    /**\\n     * 小数位数的校验错误信息\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    scaleErrorMsg,\\n    /**\\n     * 属性的响应式数据\\n     *\\n     * @type {Vue.reactive<object>}\\n     * @property scale - 小数位数\\n     */\\n    model,\\n    /**\\n     * 小数位数的范围\\n     *\\n     * @type {Vue.computed<object>}\\n     * @property min - 最小值\\n     * @property max - 最大值\\n     */\\n    scaleOption,\\n    /**\\n     * 是否禁用小数位数\\n     *\\n     * @function\\n     * @param item - 行元素\\n     * @return boolean\\n     */\\n    decimalDisabled,\\n    /**\\n     * 修改小数位数\\n     *\\n     * @function\\n     */\\n    setScale,\\n    /**\\n     * 关联属性\\n     *\\n     * @type {Vue.ref<string>}\\n     */\\n    entityReference,\\n    /**\\n     * 类型列表\\n     *\\n     * @type {Vue.ref<array>}\\n     */\\n    dataTypeList,\\n    /**\\n     * 关联实体存在错误\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return boolean\\n     */\\n    isReleationEntityError,\\n    /**\\n     * 设置关联属性\\n     *\\n     * @function\\n     * @param event - event.value 表示实际数据\\n     */\\n    onSaveReference,\\n    /**\\n     * 清除关联属性\\n     *\\n     * @function\\n     */\\n    onClearReference,\\n    /**\\n     * 设置关联属性实体记录删除规则\\n     *\\n     * @function\\n     * @param event - 选中事件对象\\n     */\\n    setDeleteRule,\\n    /**\\n     * 设置错误信息\\n     *\\n     * @function\\n     * @param errorMsgs - 错误信息\\n     */\\n    changeErrorMsgs,\\n    /**\\n     * 是否来源于数据库表/excel\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    isTableOrExcelOrigin,\\n    /**\\n     * 描述输入框失焦并保存数据\\n     *\\n     * @function\\n     * @param item - 当前行元素\\n     * @param name - 需要保存的描述\\n     */\\n    onBlurDescription,\\n    /**\\n     * 是否显示数据库高级设置\\n     *\\n     * 1.没有设置数据源\\n     * 2.实体是excel导入或者数据源反向导入\\n     * 3.权限实体（贤宇说一直是以LCAP开头来判断的）\\n     * 这3种情况不显示数据库设置\\n     *\\n     * @type {Vue.computed<boolean>}\\n     */\\n    showDatabasetype,\\n    /**\\n     * 实体在同步数据源时产生的错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    sourceSyncErrMsgs,\\n    /**\\n     * 错误信息\\n     *\\n     * @type {Vue.computed<array>}\\n     */\\n    errorMsgs,\\n    /**\\n     * 数据库列名校验规则\\n     *\\n     * @type {Vue.computed<object>}\\n     */\\n    entityPropertyColumnNameRules,\\n    /**\\n     * 数据库列名输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyColumnNamePlaceholder,\\n    /**\\n     * 生成名称校验规则\\n     *\\n     * @function\\n     * @param node - 节点\\n     * @return 名称校验规则\\n     */\\n    getEntityPropertyRules,\\n    /**\\n     * 名称输入框占位符\\n     *\\n     * @type {Vue.computed<string>}\\n     */\\n    entityPropertyPlaceholder,\\n    /**\\n     * 设置选中行的数据类型\\n     *\\n     * @function\\n     * @param value - 数据类型\\n     */\\n    setDataType,\\n  } = inject('$context');\\n</script>\\n\\n<style module=\\\"$propertyDesigner\\\">\\n  .errorMsg {\\n    color: var(--designer-font-second-color);\\n    margin: 0 46px;\\n  }\\n\\n  .errorMsg + .errorMsg {\\n    margin-top: 10px;\\n  }\\n\\n  .infoicon {\\n    display: inline-block;\\n    height: 12px;\\n    width: 12px;\\n    background: var(--assets-warning-info-svg) no-repeat;\\n    background-size: 100% 100%;\\n    vertical-align: -1px;\\n    margin-right: 5px;\\n  }\\n</style>\\n\\n<style module>\\n  div.table [class^='u-input__']:focus,\\n  div.table [class^='u-input__'][focus],\\n  div.table [class^='u-input__']:hover,\\n  div.table [class^='u-select__']:focus,\\n  div.table [class^='u-select__'][focus],\\n  div.table [class^='u-select__'][opened],\\n  div.table [class^='u-select__']:hover {\\n    border-color: var(--entity-designer-table-input-focus-border-color);\\n    box-shadow: var(--entity-designer-table-input-focus-box-shadow);\\n  }\\n\\n  .head {\\n    margin: 16px;\\n    padding: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n  }\\n\\n  div.head [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  .body {\\n    margin: 16px;\\n    background: var(--entity-designer-panel-background-color);\\n    border: 1px solid var(--entity-designer-border-color);\\n    overflow: hidden;\\n  }\\n\\n  .entityListIcon {\\n    width: 16px;\\n    height: 16px;\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .edit {\\n    display: inline-block;\\n    width: 100%;\\n    line-height: 38px;\\n  }\\n\\n  .edit:hover {\\n    cursor: pointer;\\n  }\\n\\n  .edit:focus {\\n    outline: none;\\n  }\\n\\n  .edit .text > span {\\n    color: var(--entity-designer-table-color);\\n  }\\n\\n  .edit .text {\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n\\n  .editwrap {\\n    margin-left: -9px;\\n  }\\n\\n  .editwrap [class^='s-datatype-select__'] {\\n    vertical-align: middle;\\n  }\\n\\n  .text {\\n    width: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n  }\\n\\n  .textContent {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    word-break: break-all;\\n    max-width: calc(100% - 28px);\\n    margin-right: 8px;\\n  }\\n  .textContent:empty {\\n    display: none;\\n  }\\n\\n  .text > span {\\n    display: inline-block;\\n    color: var(--entity-designer-table-disabled-color);\\n    vertical-align: middle;\\n  }\\n\\n  .validator {\\n    width: 100%;\\n  }\\n\\n  .btnnav {\\n    border-bottom: 1px solid var(--entity-designer-border-color);\\n    border-top: 1px solid var(--entity-designer-border-color);\\n    padding: 5px 24px;\\n  }\\n\\n  div.btnnav[direction='horizontal'][gap='small'] > :not(:last-child) {\\n    margin-right: 8px;\\n  }\\n\\n  .btnnav1 {\\n    border-top: none;\\n    background-color: var(--entity-designer-btnnav-background);\\n  }\\n\\n  .bodywrap {\\n    padding: 16px 24px 0;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    margin-bottom: 24px;\\n  }\\n\\n  div.bodywrap [class^='u-grid-layout_column__'] {\\n    padding-bottom: 0;\\n  }\\n\\n  .bodywrap1 {\\n    padding: 16px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .advancedWrap {\\n    padding: 10px 24px 25px 24px;\\n    background-color: var(--entity-designer-body-background);\\n  }\\n\\n  .entityfrom [class^='u-form_item_label__'] {\\n    width: 36px !important;\\n  }\\n\\n  div.input {\\n    width: 100%;\\n    margin-right: 12px;\\n  }\\n\\n  .iconBase {\\n    display: inline-block;\\n    width: 20px;\\n    height: 38px;\\n    line-height: 38px;\\n    text-align: center;\\n    font-size: var(--font-size-large);\\n    font-size: 14px;\\n  }\\n\\n  .iconKey {\\n    color: var(--designer-table-edit-icon-key-color);\\n  }\\n\\n  .iconLink {\\n    color: var(--designer-table-edit-icon-link-color);\\n  }\\n\\n  .iconEdit {\\n    color: var(--color-base);\\n    opacity: 0;\\n  }\\n\\n  .iconLink2 {\\n    display: inline-block;\\n    width: 16px;\\n    height: 16px;\\n    line-height: 16px;\\n    font-size: var(--font-size-huge);\\n    color: var(--brand-primary);\\n    cursor: pointer;\\n    position: relative;\\n    top: 2px;\\n    left: 4px;\\n  }\\n\\n  .edit:hover .iconEdit {\\n    opacity: 0.6;\\n    cursor: pointer;\\n  }\\n\\n  .edit:hover .iconEdit:hover {\\n    opacity: 1;\\n  }\\n\\n  .icon {\\n    width: 14px;\\n    height: 14px;\\n    display: inline-block;\\n    vertical-align: middle;\\n    background-repeat: no-repeat;\\n  }\\n\\n  div.normalfrom [class^='u-form_item_label__'] {\\n    width: 60px !important;\\n  }\\n\\n  div.normalfrom > div {\\n    margin-bottom: 16px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'],\\n  div.normalfrom [class^='u-select__'],\\n  div.normalfrom [class^='u-form_item_field__'],\\n  div.normalfrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.normalfrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom [class^='u-form_item_label__'] {\\n    width: 94px !important;\\n  }\\n\\n  div.reffrom [class^='u-input__'],\\n  div.reffrom [class^='u-tree-select__'],\\n  div.reffrom [class^='u-select__'],\\n  div.reffrom [class^='u-form_item_field__'],\\n  div.reffrom [class^='u-form_item_wrap__'] {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  div.reffrom [class^='u-input__'] {\\n    height: 32px;\\n    line-height: 30px;\\n  }\\n\\n  div.reffrom .text {\\n    opacity: 0.3;\\n  }\\n\\n  div.reffrom [class^='u-form_item_extra__'] {\\n    width: 12px;\\n  }\\n\\n  .flexgrid {\\n    display: flex;\\n  }\\n\\n  .gridcolumn {\\n    width: auto;\\n  }\\n\\n  .gridcolumn:not(:last-child) {\\n    margin-right: 24px;\\n  }\\n\\n  div.fixedwidthinput,\\n  div.textarea {\\n    width: 240px;\\n    max-width: 240px;\\n  }\\n\\n  .icondivider {\\n    color: var(--entity-designer-border-color);\\n  }\\n\\n  .advanced {\\n    padding-top: 10px;\\n  }\\n\\n  .scaleErrorMsg {\\n    position: absolute;\\n    color: rgb(242, 73, 87);\\n  }\\n  .typeError {\\n    border-radius: 4px;\\n    border: 1px solid var(--input-border-color-error);\\n  }\\n  .checkbox [class='el-checkbox__label'] {\\n    line-height: 23px;\\n    font-size: 12px;\\n    text-overflow: ellipsis;\\n    text-align: left;\\n    font-weight: 600;\\n    color: var(--el-table-header-text-color);\\n  }\\n  .checkbolabel [class='el-checkbox__label'] {\\n    line-height: 23px !important;\\n    font-size: 12px !important;\\n    text-overflow: ellipsis !important;\\n    text-align: left !important;\\n    font-weight: 600 !important;\\n    color: var(--el-table-header-text-color) !important;\\n  }\\n  .checkbox {\\n    height: 23px;\\n    line-height: 23px;\\n  }\\n</style>\\n<style module=\\\"$contextmenu\\\">\\n  .menu {\\n    margin-top: 0 !important;\\n  }\\n\\n  .menu .group [class^='el-menu-item-group__title'] {\\n    --el-menu-text-color: var(--el-menu-top-title-text-color);\\n    height: 32px;\\n    font-weight: bold;\\n    border-bottom: 1px solid var(--line-color-regular);\\n    background: var(--fill-color-thead);\\n    color: var(--el-menu-text-color);\\n    cursor: auto;\\n  }\\n</style>\\n\\n<style scoped>\\n  .tableCell :deep(.cell) {\\n    padding: 0;\\n    line-height: 20px;\\n    padding-left: 6px;\\n  }\\n  .theadLable {\\n    overflow: visible;\\n    width: 100%;\\n    padding-left: 6px;\\n    border-right: 1px solid var(--entity-designer-property-dragger-border-color);\\n  }\\n  .topIconGroup {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-start;\\n    gap: 8px;\\n    background-color: var(--entity-designer-icon-group-background-color);\\n    padding: 5px 24px;\\n    border-bottom: 1px solid var(--entity-designer-icon-group-border-color);\\n    position: sticky;\\n    z-index: 9;\\n    top: 64px;\\n  }\\n\\n  .icon {\\n    margin-right: 8px;\\n  }\\n\\n  .extraForm :deep(.el-form-item__label) {\\n    font-size: 12px;\\n  }\\n\\n  :deep(.row-style) {\\n    border: 1px solid #4d87fe;\\n  }\\n\\n  :deep(.cell-style) {\\n    border-bottom: 1px solid #409eff;\\n  }\\n\\n  .elFormFlex {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center;\\n    flex-wrap: wrap;\\n  }\\n</style>\\n\\n<style scoped>\\n  .reflowPopover {\\n    width: 340px;\\n    padding: 8px;\\n  }\\n\\n  .reflowPopoverEmpty {\\n    padding: 20px 0 30px;\\n  }\\n\\n  .reflowPopoverItem {\\n    height: 48px;\\n    line-height: 48px;\\n    padding: 0 12px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    &:hover {\\n      background-color: #edf2f9;\\n    }\\n  }\\n\\n  .warningIcon {\\n    margin-right: 4px;\\n  }\\n\\n  .reflowDialogFooter {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 居中对齐flex布局 */\\n  .centerFlex {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  /* 单行文本溢出省略号 */\\n  .sle,\\n  [sle] {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n\\n  /* tooltip触发器样式 */\\n  .tooltip-trigger {\\n    width: 100%;\\n    height: 100%;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"menu\": `EntityPropertyDesigner__menu--JM97v`,\n\t\"group\": `EntityPropertyDesigner__group--QOObs`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.index__button--UGVYE {\n    margin: 5px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/render/index.vue\"],\"names\":[],\"mappings\":\";AAiBE;IACE,WAAW;AACb\",\"sourcesContent\":[\"<template>\\n  <!-- 实体属性编辑器 -->\\n  <skeleton-portal name=\\\"views/data/entity-property-designer/render\\\" method=\\\"insert\\\">\\n    <template v-slot=\\\"props\\\">\\n      <EntityPropertyDesigner v-bind=\\\"props\\\" />\\n    </template>\\n  </skeleton-portal>\\n</template>\\n\\n<script setup>\\n  import EntityPropertyDesigner from '../EntityPropertyDesigner.vue'\\n  import { useAttrs } from 'vue'\\n\\n  const attrs = useAttrs()\\n</script>\\n\\n<style module>\\n  .button {\\n    margin: 5px;\\n  }\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"button\": `index__button--UGVYE`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"oppTools\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"Vue\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ElementPlus\"];","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is an empty object (safely handles Buffers)\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an empty object, otherwise false\n */\nconst isEmptyObject = (val) => {\n  // Early return for non-objects or Buffers to prevent RangeError\n  if (!isObject(val) || isBuffer(val)) {\n    return false;\n  }\n  \n  try {\n    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n  } catch (e) {\n    // Fallback for any other objects that might cause RangeError with Object.keys()\n    return false;\n  }\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Buffer check\n    if (isBuffer(obj)) {\n      return;\n    }\n\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  if (isBuffer(obj)){\n    return null;\n  }\n\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      //Buffer check\n      if (isBuffer(source)) {\n        return source;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isEmptyObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), {\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    },\n    ...options\n  });\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isObject(header) && utils.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn(...args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys({...config1, ...config2}), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request, fetchOptions);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.11.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift(...requestInterceptorChain);\n      chain.push(...responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from 'axios';\n\n// 创建axios实例\nconst instance = axios.create({\n//   baseURL: '/api', // 设置API的基础URL\n});\n\n// 请求拦截器\ninstance.interceptors.request.use(\n  (config) => {\n    // 可在请求发送前对config进行修改，如添加请求头等\n    return config;\n  },\n  (error) => {\n    // 处理请求错误\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n  (response) => {\n    // 对响应数据进行处理\n    return response;\n  },\n  (error) => {\n    // 处理响应错误\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n","import instance from './http';\n\n// 封装GET请求\nexport function get(url, params, signal = null) {\n  const config = signal ? { signal } : {};\n  return instance\n    .get(url, { params, ...config })\n    .then(response => response.data)\n    .catch(error => {\n      throw error;\n    });\n}\n\n// 封装POST请求\nexport function post(url, data) {\n  return instance\n    .post(url, data)\n    .then(response => response.data)\n    .catch(error => {\n      throw error;\n    });\n}\n\n// put\nexport function put(url, data) {\n  return instance\n    .put(url, data)\n    .then(response => response.data)\n    .catch(error => {\n      throw error;\n    });\n}\n//delete\nexport function del(url) {\n  return instance\n    .delete(url)\n    .then(response => response.data)\n    .catch(error => {\n      throw error;\n    });\n}\n","// 字段库管理应用制品地址\n// const baseUrl = 'https://m1.apifoxmock.com/m1/7023493-6742263-default'; // mock\n// const baseUrl = 'https://dev-auxdatamodel-shengji.app.codewave.163.com';\nconst baseUrl = 'https://data-defaulttenant.lcp.auxgroup.com';\n\n// 获取是否回流字段\nexport const apiGetIsReflowField = `${baseUrl}/rest/getIsReflowField`;\n\n// 查询字段列表\nexport const apiGetFieldList = `${baseUrl}/rest/getFieldList`;\n\n// 可回流字段查询接口（弃用，改为直接上传）\nexport const apiGetReflowFieldList = `${baseUrl}/rest/getReflowFieldList`;\n\n// 上传回流字段接口\nexport const apiUploadReflowField = `${baseUrl}/rest/uploadReflowField`;\n","import { get, post } from '../utils/methods';\nimport { apiGetIsReflowField, apiGetFieldList, apiGetReflowFieldList, apiUploadReflowField } from '../config';\n\n/**\n * 通用API请求封装函数\n * @param {Function} api - API请求函数\n * @param {Object} params - 请求参数对象\n * @param {Function} success - 请求成功回调函数\n * @param {Function} fail - 请求失败回调函数\n * @param {Function} finallyFn - 请求完成回调函数\n */\nfunction noop() {}\n\nexport function requestApi(api, params, success = noop, fail = noop, finallyFn = noop) {\n  api(params)\n    .then(res => {\n      success(res);\n    })\n    .catch(err => {\n      fail(err);\n    })\n    .finally(() => {\n      finallyFn();\n    });\n}\n\n// 获取是否回流字段\nexport function getIsReflowField(params) {\n  return get(apiGetIsReflowField, { ...params });\n}\n\n// 查询字段列表\nexport function getFieldList(params, signal = null) {\n  return get(apiGetFieldList, { ...params }, signal);\n}\n\n// 可回流字段查询接口\nexport function getReflowFieldList(params) {\n  return post(apiGetReflowFieldList, { ...params });\n}\n\n// 上传回流字段接口\nexport function uploadReflowField(params) {\n  return post(apiUploadReflowField, { ...params });\n}\n","<template>\n  <div>\n    <div\n      v-if=\"!isViewEntity\"\n      class=\"topIconGroup\"\n      :class=\"$style.body\"\n      style=\"margin-top: 0px; margin-bottom: 0px; border-bottom: 0px; height: 40px\"\n    >\n      <!-- 添加实体属性 -->\n      <s-others-icon name=\"add\" tooltip=\"添加属性\" button @click=\"handleAddItem\"></s-others-icon>\n      <!-- 删除实体属性 -->\n      <s-others-icon\n        name=\"remove\"\n        button\n        :tooltip=\"getRemoveTooltip()\"\n        :disabled=\"\n          !selectedItem ||\n          !selectedItem.naslNode ||\n          selectedItem.loading ||\n          selectedItem.naslNode.primaryKey ||\n          isOfficalEntityProperty(selectedItem)\n        \"\n        @click=\"removeItem(selectedItem)\"\n      ></s-others-icon>\n      <div :class=\"$style.icondivider\">|</div>\n      <!-- 上移实体属性 -->\n      <s-others-icon\n        name=\"position-up\"\n        button\n        :tooltip=\"\n          !selectedItem ||\n          !selectedItem.naslNode ||\n          selectedItem.loading ||\n          renderList[0].naslNode.name === selectedItem.naslNode.name\n            ? '当前属性已置顶'\n            : '上移'\n        \"\n        :disabled=\"\n          !selectedItem ||\n          !selectedItem.naslNode ||\n          selectedItem.loading ||\n          renderList[0].naslNode.name === selectedItem.naslNode.name\n        \"\n        @click=\"moveUpItem\"\n      ></s-others-icon>\n      <!-- 下移实体属性 -->\n      <s-others-icon\n        name=\"position-down\"\n        button\n        :tooltip=\"\n          !selectedItem ||\n          !selectedItem.naslNode ||\n          selectedItem.loading ||\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\n            ? '当前属性已置底'\n            : '下移'\n        \"\n        :disabled=\"\n          !selectedItem ||\n          !selectedItem.naslNode ||\n          selectedItem.loading ||\n          renderList[renderList.length - 1].naslNode.name === selectedItem.naslNode.name\n        \"\n        @click=\"moveDownItem\"\n      ></s-others-icon>\n      <!-- 一键添加到备选字段库 -->\n      <el-button v-if=\"showReflowBtn\" :loading=\"reflowLoading\" @click=\"addReflowField\">一键添加到备选字段库</el-button>\n    </div>\n    <div :class=\"$style.body\" style=\"margin-top: 0px\">\n      <div :class=\"$style.bodywrap\" class=\"tableCell\">\n        <el-table\n          ref=\"tableviewRef\"\n          :data=\"renderList\"\n          highlight-current-row\n          :style=\"`min-width:950px;${tableHeight}`\"\n          style=\"width: 100%\"\n          :class=\"\n            renderList.length > 8\n              ? [$style.table, $style.tablescroll, 's-data-table-edit']\n              : [$style.table, 's-data-table-edit']\n          \"\n          :value=\"selectedItem && selectedItem.naslNode.name\"\n          value-field=\"name\"\n          :header-row-style=\"{ height: '40px' }\"\n          :cell-style=\"{ padding: '0px' }\"\n          :row-style=\"{ height: '42px' }\"\n          :row-class-name=\"setRowClassName\"\n          empty-text=\"暂无数据\"\n          @row-contextmenu=\"onContextMenuRow\"\n          @row-click=\"onSelectRowWithDataType\"\n          @header-dragend=\"handleDragend\"\n          @click.right.prevent\n          :border=\"true\"\n        >\n          <!-- 主键/关联属性的icon -->\n          <el-table-column width=\"38\" prop=\"primaryKey\" :resizable=\"false\">\n            <template #default=\"{ row: item, $index }\">\n              <template v-if=\"$index === -1\" />\n              <template v-else>\n                <s-others-icon\n                  v-if=\"item.naslNode.primaryKey\"\n                  name=\"key\"\n                  :class=\"[$style.iconBase, $style.iconKey]\"\n                ></s-others-icon>\n                <s-others-icon\n                  v-if=\"item.naslNode.relationProperty\"\n                  name=\"link\"\n                  :class=\"[$style.iconBase, $style.iconLink]\"\n                ></s-others-icon>\n              </template>\n            </template>\n          </el-table-column>\n          <!-- 标题 -->\n          <el-table-column prop=\"label\" min-width=\"107\" label=\"字段注释\">\n            <template #header>\n              <div class=\"theadLable\">字段注释</div>\n            </template>\n            <template #default=\"{ row: item, $index }\">\n              <template v-if=\"$index === -1\" />\n              <!-- 非禁用状态 -->\n              <template v-else-if=\"!item.loading && !item.naslNode.parentNode.loading && !isViewEntity\">\n                <!-- 展示态 -->\n                <div\n                  v-if=\"item.edit !== 'label'\"\n                  :class=\"$style.edit\"\n                  @dblclick=\"onSetItemEdit(item, 'label', true)\"\n                  tabindex=\"0\"\n                  @keyup=\"onKeyUp($event, item, 'label')\"\n                  :title=\"item.naslNode.label\"\n                >\n                  <div :class=\"$style.text\">\n                    <span :class=\"$style.textContent\">{{ item.naslNode.label }}</span>\n                    <s-others-icon\n                      v-show=\"!isOfficalEntityProperty(item)\"\n                      name=\"edit\"\n                      :class=\"[$style.iconBase, $style.iconEdit]\"\n                      @click=\"onSetItemEdit(item, 'label', true)\"\n                    ></s-others-icon>\n                  </div>\n                </div>\n                <!-- 编辑态 -->\n                <div v-else :class=\"$style.editwrap\">\n                  <!-- value 传入的是被验证的值 -->\n                  <!-- validate-result 来调整 是否存在非法项 -->\n                  <u-validator\n                    ref=\"labelValidatorRef\"\n                    v-slot=\"slotProps\"\n                    :value=\"item.naslNode.label\"\n                    rules=\"maxLength(63)\"\n                    :class=\"$style.validator\"\n                    error-display=\"appear\"\n                    error-append-to-body\n                    @blur-valid=\"onBlurLabel(item, $event.value)\"\n                    @blur-invalid=\"errorScrollIntoView\"\n                    @validate-result=\"hasInvalid = !$event.valid\"\n                  >\n                    <s-input\n                      placeholder=\"请输入标题\"\n                      :model-value=\"item.naslNode.label\"\n                      ref=\"labelEditor\"\n                      :class=\"$style.input\"\n                      @focus=\"handleLabelFocus(item.naslNode.label)\"\n                      @blur:value=\"handleLabelBlur($event, slotProps, item)\"\n                      @input=\"handleLabelInput($event, slotProps)\"\n                      @keyup.enter=\"$event.target.blur()\"\n                    ></s-input>\n                  </u-validator>\n                </div>\n              </template>\n              <!-- 禁用状态 -->\n              <div v-else :class=\"$style.text\">\n                <!-- 之前仅仅为 item.label 但是实际上在item 对象中没有label属性，恐在特殊情况下存在，故范围限制为 区分 viewEntity -->\n                <span>{{ isViewEntity ? item.naslNode.label : item.label }}</span>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 名称 -->\n          <el-table-column label=\"字段名\" prop=\"name\" min-width=\"87\">\n            <template #header>\n              <div class=\"theadLable\">字段名</div>\n            </template>\n            <template #default=\"{ row: item, $index }\">\n              <template v-if=\"$index === -1\" />\n              <!-- 非禁用状态 -->\n              <template v-else-if=\"!getDisable(item)\">\n                <!-- 展示态 -->\n                <div\n                  v-if=\"item.edit !== 'name'\"\n                  tabindex=\"0\"\n                  :class=\"$style.edit\"\n                  :title=\"item.naslNode.name\"\n                  @dblclick=\"onSetItemEdit(item, 'name', true)\"\n                  @keyup=\"onKeyUp($event, item, 'name')\"\n                >\n                  <div :class=\"$style.text\">\n                    <span :class=\"$style.textContent\">{{ item.naslNode.name }}</span>\n                    <s-others-icon\n                      name=\"edit\"\n                      :class=\"[$style.iconBase, $style.iconEdit]\"\n                      @click=\"onSetItemEdit(item, 'name', true)\"\n                    ></s-others-icon>\n                  </div>\n                </div>\n                <!-- 编辑态 -->\n                <div v-else :class=\"$style.editwrap\">\n                  <!-- value 传入的是被验证的值 -->\n                  <!-- validate-result 来调整 是否存在非法项 -->\n                  <u-validator\n                    v-slot=\"slotProps\"\n                    :value=\"item.naslNode.name\"\n                    :rules=\"getEntityPropertyRules(item.naslNode)\"\n                    :class=\"$style.validator\"\n                    error-display=\"appear\"\n                    error-append-to-body\n                    @blur-valid=\"onBlurName(item, $event.value)\"\n                    @blur-invalid=\"errorScrollIntoView\"\n                    @validate-result=\"hasInvalid = !$event.valid\"\n                  >\n                    <!-- “属性名”为空是显示提示信息 -->\n                    <el-tooltip\n                      :visible=\"tooltipOpened === 'entityAttribute' && !itemNameValue\"\n                      placement=\"top-start\"\n                      content=\"属性为英文字母、数字和下划线，且首字母小写\"\n                    >\n                      <s-input\n                        :placeholder=\"entityPropertyPlaceholder\"\n                        :model-value=\"item.naslNode.name\"\n                        ref=\"nameEditor\"\n                        :class=\"$style.input\"\n                        @focus=\"onFocusName(item)\"\n                        @blur:value=\"slotProps.blurFn($event)\"\n                        @input=\"slotProps.inputChange($event)\"\n                        @keyup.enter=\"$event.target.blur()\"\n                        @update:modelValue=\"itemNameValue = $event\"\n                      ></s-input>\n                    </el-tooltip>\n                  </u-validator>\n                </div>\n              </template>\n              <!-- 禁用状态 -->\n              <div v-else :class=\"$style.text\">\n                <span>{{ item.naslNode.name }}</span>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 数据类型 -->\n          <el-table-column label=\"数据类型\" min-width=\"247\">\n            <template #header>\n              <div class=\"theadLable\">数据类型</div>\n            </template>\n            <template #default=\"{ row: item, $index }\">\n              <template v-if=\"$index === -1\" />\n              <template v-else>\n                <el-tooltip v-if=\"isAppDeploying\" content=\"应用发布中，暂不能修改\" placement=\"bottom-start\">\n                  <div :class=\"$style.text\">\n                    <span>{{ showDatatype(item) }}</span>\n                  </div>\n                </el-tooltip>\n                <!-- 禁用状态 / 已经发布过的复合类型 -->\n                <template v-else-if=\"getDisable(item) || isPublishedComplexType(item)\">\n                  <div :class=\"$style.text\">\n                    <span>{{ showDatatype(item) }}</span>\n                  </div>\n                </template>\n                <!-- 非禁用状态 -->\n                <template v-else>\n                  <!-- 展示态 -->\n                  <div\n                    v-if=\"item.edit !== 'datatype'\"\n                    tabindex=\"0\"\n                    :class=\"$style.edit\"\n                    :ref=\"`datatype${item.naslNode.id}`\"\n                    :title=\"showDatatype(item)\"\n                    @dblclick=\"onDblClickDatatype(item, $event)\"\n                    @keyup=\"onKeyUp($event, item, 'datatype')\"\n                  >\n                    <div :class=\"$style.text\">\n                      <span :class=\"$style.textContent\">{{ showDatatype(item) }}</span>\n                      <s-others-icon\n                        name=\"edit\"\n                        :class=\"[$style.iconBase, $style.iconEdit]\"\n                        @click=\"(getDataTypeList(), onSetItemEdit(item, 'datatype', false))\"\n                      ></s-others-icon>\n                    </div>\n                  </div>\n                  <!-- 编辑态 -->\n                  <div v-else :class=\"$style.editwrap\">\n                    <el-tooltip :content=\"`${isAppDeploying ? '应用发布中，暂不能修改' : ''}`\" placement=\"bottom-start\">\n                      <s-datatype-select\n                        :unionable=\"false\"\n                        :no-union-subtype=\"true\"\n                        :data-type-list=\"item.naslNode.lastVersion ? dataTypeList : undefined\"\n                        :last-version=\"item.naslNode.lastVersion\"\n                        :type-annotation=\"item.naslNode.typeAnnotation\"\n                        :concept=\"item.naslNode.entity.concept\"\n                        :show-system-types=\"false\"\n                        :show-generic-types=\"true\"\n                        :show-entity=\"true\"\n                        :show-structures=\"true\"\n                        :emptyable=\"false\"\n                        :hasAnonymousStructure=\"true\"\n                        :disabled=\"item.naslNode.readonly || isAppDeploying || isPublishedComplexType(item)\"\n                        @blur=\"handleBlur(item)\"\n                        @change=\"onChangeDatatype\"\n                      ></s-datatype-select>\n                    </el-tooltip>\n                  </div>\n                </template>\n              </template>\n            </template>\n          </el-table-column>\n          <!-- 是否必填 -->\n          <el-table-column label=\"是否必填\" width=\"70\" prop=\"required\" :resizable=\"false\">\n            <template #default=\"{ row: item, $index }\">\n              <template v-if=\"$index === -1\" />\n              <div v-else style=\"margin-left: 16px\">\n                <el-checkbox\n                  v-model=\"item.naslNode.required\"\n                  :disabled=\"getDisable(item) || isComplexType(item) || isOfficalEntity(item)\"\n                  :tabindex=\"item.editable === false || item.loading || item.naslNode.parentNode.loading ? -1 : 0\"\n                  :class=\"$style.checkbox\"\n                  @change=\"requireInput(item, $event)\"\n                ></el-checkbox>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 默认值 -->\n          <el-table-column label=\"默认值\" prop=\"defaultValue\" width=\"120\" :resizable=\"false\">\n            <template #default=\"{ row: item }\">\n              <div v-if=\"['createdTime', 'updatedTime'].includes(item.naslNode.name)\" :class=\"$style.text\">\n                <span>自动生成</span>\n              </div>\n              <div v-else-if=\"['createdBy', 'updatedBy'].includes(item.naslNode.name)\" :class=\"$style.text\">\n                <span>（无）</span>\n              </div>\n              <template v-else-if=\"!canSetDefaultValue(item)\">\n                <div :class=\"$style.text\">\n                  <span>（无）</span>\n                </div>\n              </template>\n              <template\n                v-else-if=\"\n                  item.loading || item.naslNode.parentNode.loading || item.naslNode.generationRule !== 'manual'\n                \"\n              >\n                <div :class=\"$style.text\">\n                  <div :class=\"$style.text\" v-if=\"item.naslNode.generationRule === 'auto'\">\n                    <span>自动生成</span>\n                  </div>\n                  <span v-else>{{ item.naslNode.defaultValue }}</span>\n                </div>\n              </template>\n              <template v-else>\n                <s-attr-input\n                  title=\"默认值绑定\"\n                  node-concept=\"defaultValue\"\n                  :name=\"item.naslNode.name\"\n                  :parent-node=\"item.naslNode\"\n                  :node=\"item.naslNode.defaultValue\"\n                  :class=\"{\n                    [$style.typeError]: IsError(item.naslNode),\n                  }\"\n                ></s-attr-input>\n              </template>\n            </template>\n          </el-table-column>\n          <!-- 显示在表格 -->\n          <el-table-column width=\"100\" prop=\"display.inTable\" :resizable=\"false\">\n            <template #header>\n              <el-checkbox\n                label=\"显示在表格\"\n                :class=\"$style.checkbolabel\"\n                :model-value=\"inTable\"\n                @change=\"toggleSelectAll($event, 'inTable')\"\n              ></el-checkbox>\n            </template>\n            <template #default=\"{ row: item, $index }\">\n              <template v-if=\"$index === -1\" />\n              <div v-else :data-item-id=\"item.id\">\n                <el-checkbox\n                  :model-value=\"item.naslNode.display.inTable\"\n                  :disabled=\"item.loading || item.naslNode.parentNode.loading\"\n                  :class=\"$style.checkbox\"\n                  @change=\"setDisplay(item, $event, 'inTable')\"\n                ></el-checkbox>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 显示在筛选 -->\n          <el-table-column width=\"100\" prop=\"display.inFilter\" :resizable=\"false\">\n            <template #header>\n              <el-checkbox\n                label=\"显示在筛选\"\n                :class=\"$style.checkbolabel\"\n                :model-value=\"inFilter\"\n                @change=\"toggleSelectAll($event, 'inFilter')\"\n              ></el-checkbox>\n            </template>\n            <template #default=\"{ row: item, $index }\">\n              <template v-if=\"$index === -1\" />\n              <div v-else :data-item-id=\"item.id\">\n                <el-checkbox\n                  :model-value=\"item.naslNode.display.inFilter\"\n                  :disabled=\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\"\n                  :class=\"$style.checkbox\"\n                  @change=\"setDisplay(item, $event, 'inFilter')\"\n                ></el-checkbox>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 显示在表单 -->\n          <el-table-column width=\"100\" prop=\"display.inForm\" :resizable=\"false\">\n            <template #header>\n              <el-checkbox\n                label=\"显示在表单\"\n                :class=\"$style.checkbolabel\"\n                :model-value=\"inForm\"\n                @change=\"toggleSelectAll($event, 'inForm')\"\n              ></el-checkbox>\n            </template>\n            <template #default=\"{ row: item, $index }\">\n              <template v-if=\"$index === -1\" />\n              <div v-else :data-item-id=\"item.id\">\n                <el-checkbox\n                  :model-value=\"item.naslNode.display.inForm\"\n                  :class=\"$style.checkbox\"\n                  :disabled=\"item.loading || item.naslNode.parentNode.loading || isComplexType(item)\"\n                  @change=\"setDisplay(item, $event, 'inForm')\"\n                ></el-checkbox>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 显示在详情 -->\n          <el-table-column width=\"100\" prop=\"display.inDetail\" :resizable=\"false\">\n            <template #header>\n              <el-checkbox\n                label=\"显示在详情\"\n                :class=\"$style.checkbolabel\"\n                :model-value=\"inDetail\"\n                @change=\"toggleSelectAll($event, 'inDetail')\"\n              ></el-checkbox>\n            </template>\n            <template #default=\"{ row: item, $index }\">\n              <template v-if=\"$index === -1\" />\n              <div v-else :data-item-id=\"item.id\">\n                <el-checkbox\n                  :model-value=\"item.naslNode.display.inDetail\"\n                  :disabled=\"item.loading || item.naslNode.parentNode.loading\"\n                  :class=\"$style.checkbox\"\n                  @change=\"setDisplay(item, $event, 'inDetail')\"\n                ></el-checkbox>\n              </div>\n            </template>\n          </el-table-column>\n        </el-table>\n        <!-- 右键点击 -->\n        <el-popover\n          :disabled-scroll=\"true\"\n          trigger=\"click\"\n          ref=\"menuPopper\"\n          :popper-options=\"popperOptions\"\n          v-if=\"menuSelectedItem && popperExistMap[menuSelectedItem.id]\"\n          v-model:visible=\"popperVisibleMap[menuSelectedItem && menuSelectedItem.id]\"\n          :virtual-ref=\"triggerRef\"\n          :placement=\"placement\"\n          :show-arrow=\"false\"\n          @hide=\"onMenuPopperHide\"\n        >\n          <el-menu :class=\"$contextmenu.menu\" @click=\"onMenuClick\">\n            <el-menu-item-group :class=\"$contextmenu.group\" title=\"属性\">\n              <el-menu-item :class=\"$contextmenu.item\" @click=\"onMenuFindUsage\">查找引用</el-menu-item>\n              <el-menu-item\n                :class=\"$contextmenu.item\"\n                @click=\"onMenuDelete(removeItem)\"\n                :disabled=\"\n                  (menuSelectedItem && menuSelectedItem.primaryKey) ||\n                  isOfficalEntityProperty({\n                    naslNode: menuSelectedItem,\n                  }) ||\n                  isViewEntity\n                \"\n              >\n                删除\n              </el-menu-item>\n            </el-menu-item-group>\n          </el-menu>\n        </el-popover>\n      </div>\n      <template v-if=\"selectedItem\">\n        <div :class=\"[$style.flexgrid, $style.bodywrap1]\">\n          <div :class=\"$style.gridcolumn\" class=\"extraForm\">\n            <el-form\n              ref=\"selectedItemForm\"\n              :model=\"selectedItem\"\n              :class=\"[$style.reffrom, $style.blockFromLayout, 's-data-attr-designer-form']\"\n              label-width=\"85px\"\n              label-position=\"right\"\n              :inline=\"true\"\n            >\n              <!-- 最 大/小 值/长度 -->\n              <skeleton-render\n                name=\"views/data/components/entity-field-rules/index\"\n                :property=\"selectedItem.naslNode\"\n                :key=\"'rules_' + selectedItem.naslNode.name\"\n                :disabled=\"\n                  selectedItem.loading ||\n                  selectedItem.naslNode.parentNode.loading ||\n                  selectedItem.naslNode.editable === false ||\n                  isViewEntity\n                \"\n                :is-view-entity=\"isViewEntity\"\n                direction=\"horizontal\"\n                :class=\"$style.rules\"\n              />\n              <!-- 小数位数 -->\n              <el-form-item v-if=\"typeName === 'Decimal'\" label=\"小数位数\">\n                <el-input-number\n                  placeholder=\"请输入小数位数\"\n                  :color=\"scaleErrorMsg ? 'error' : ''\"\n                  v-model=\"model.scale\"\n                  :min=\"scaleOption.min\"\n                  :max=\"scaleOption.max\"\n                  controls-position=\"right\"\n                  :disabled=\"decimalDisabled(selectedItem) || isViewEntity\"\n                  :value-on-clear=\"0\"\n                  @keyup.enter=\"$event.target.blur()\"\n                  @change=\"setScale\"\n                ></el-input-number>\n                <div v-if=\"scaleErrorMsg\" :class=\"$style.scaleErrorMsg\">\n                  <s-others-icon name=\"solid-hint\"></s-others-icon>\n                  {{ scaleErrorMsg }}\n                </div>\n              </el-form-item>\n              <!-- 关联属性 -->\n              <el-form-item :key=\"selectedItem.naslNode.name\">\n                <template #label>\n                  <div style=\"display: flex; align-items: center\">\n                    关联属性\n                    <s-others-icon name=\"link2\" :class=\"$style.iconLink2\"></s-others-icon>\n                  </div>\n                </template>\n                <skeleton-render\n                  name=\"views/data/entity-reference/index\"\n                  :entity=\"entity\"\n                  :property=\"selectedItem.naslNode\"\n                  :value=\"entityReference\"\n                  :disabled=\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\"\n                  :data-type-list=\"selectedItem.naslNode.lastVersion ? dataTypeList : undefined\"\n                  :error=\"isReleationEntityError(selectedItem.naslNode)\"\n                  @save=\"onSaveReference\"\n                  @clear=\"onClearReference\"\n                />\n              </el-form-item>\n              <!-- 属性记录 -->\n              <el-form-item\n                label=\"关联属性实体记录删除规则\"\n                v-if=\"selectedItem.naslNode.relationProperty\"\n                layout=\"block\"\n                class=\"relationDelRule\"\n              >\n                <el-select\n                  style=\"width: 240px\"\n                  v-model=\"selectedItem.naslNode.deleteRule\"\n                  placeholder=\"请选择\"\n                  :disabled=\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\"\n                  @change=\"setDeleteRule\"\n                >\n                  <el-option label=\"不允许删除\" value=\"protect\"></el-option>\n                  <el-option label=\"允许删除且同时删除本实体记录\" value=\"cascade\"></el-option>\n                </el-select>\n              </el-form-item>\n              <!-- 主键生成规则 -->\n              <el-form-item v-if=\"selectedItem.naslNode.primaryKey\" label=\"主键生成规则\" placement=\"bottom\">\n                <skeleton-render\n                  name=\"views/data/components/entity-primarykey-rules/index\"\n                  :disabled=\"isViewEntity\"\n                  :entity=\"entity\"\n                  :selected-item=\"selectedItem.naslNode\"\n                  @changeErrorMsgs=\"changeErrorMsgs\"\n                />\n              </el-form-item>\n              <!-- 数据库列名 -->\n              <el-form-item label=\"数据库列名\" placement=\"bottom\">\n                <u-validator\n                  ref=\"columnNameValidatorRef\"\n                  style=\"width: 100%\"\n                  :rules=\"entityPropertyColumnNameRules\"\n                  :value=\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\"\n                  @blur-dirty-valid=\"selectedItem.naslNode.setColumnName($event.value)\"\n                  v-slot=\"slotProps\"\n                >\n                  <s-input\n                    :placeholder=\"entityPropertyColumnNamePlaceholder\"\n                    :model-value=\"selectedItem.naslNode.columnName || selectedItem.naslNode.name\"\n                    :disabled=\"isTableOrExcelOrigin || isViewEntity\"\n                    @change=\"slotProps.blurChange\"\n                    @input=\"slotProps.inputChange($event)\"\n                    @keyup.enter.stop=\"$event.target.blur()\"\n                  ></s-input>\n                </u-validator>\n              </el-form-item>\n              <!-- 描述 -->\n              <el-form-item label=\"描述\" prop=\"description\">\n                <u-validator\n                  v-slot=\"slotProps\"\n                  :value=\"selectedItem.naslNode.description\"\n                  rules=\"maxLength(63)\"\n                  :class=\"$style.validator\"\n                  @blur-valid=\"onBlurDescription(selectedItem, $event.value)\"\n                  @blur-invalid=\"errorScrollIntoView\"\n                  @validate-result=\"hasInvalid = !$event.valid\"\n                >\n                  <s-input\n                    type=\"textarea\"\n                    ref=\"descriptionEditor\"\n                    placeholder=\"请输入描述\"\n                    :model-value=\"selectedItem.naslNode.description\"\n                    :disabled=\"selectedItem.loading || selectedItem.naslNode.parentNode.loading || isViewEntity\"\n                    @blur:value=\"slotProps.blurFn($event)\"\n                    @keyup.enter=\"slotProps.blurFn()\"\n                    @input=\"slotProps.inputChange($event)\"\n                  ></s-input>\n                </u-validator>\n              </el-form-item>\n            </el-form>\n          </div>\n        </div>\n        <div :class=\"$style.advancedWrap\" v-if=\"showDatabasetype\">\n          <el-form :disabled=\"isViewEntity\" label-width=\"80px\" gap=\"small\" class=\"s-data-attr-designer-form\">\n            <skeleton-render\n              name=\"views/data/components/entity-property-databasetype/index\"\n              :property=\"selectedItem.naslNode\"\n            />\n          </el-form>\n        </div>\n      </template>\n      <div :class=\"$style.bodywrap1\" v-show=\"errorMsgs.length || sourceSyncErrMsgs.length\">\n        <div v-for=\"errorMsg in errorMsgs\" :key=\"errorMsg\" :class=\"$propertyDesigner.errorMsg\">\n          <i :class=\"$propertyDesigner.infoicon\"></i>\n          <span>{{ errorMsg }}</span>\n        </div>\n        <!-- 实体在同步数据源时产生的错误信息 -->\n        <div v-for=\"errorMsg in sourceSyncErrMsgs\" :key=\"errorMsg\" :class=\"$propertyDesigner.errorMsg\">\n          <i :class=\"$propertyDesigner.infoicon\"></i>\n          <span>{{ errorMsg }}</span>\n        </div>\n      </div>\n    </div>\n    <!-- 查询弹出框 -->\n    <el-popover\n      :visible=\"reflowPopoverVisible\"\n      :virtual-ref=\"labelEditor\"\n      :show-arrow=\"false\"\n      placement=\"bottom-start\"\n      :width=\"340\"\n      virtual-triggering\n    >\n      <div class=\"reflowPopover\" v-loading=\"reflowPopoverLoading\">\n        <div class=\"reflowPopoverEmpty\" v-if=\"fieldList.length === 0\">\n          <s-others-icon name=\"hint\" class=\"centerFlex\" style=\"font-size: 28px; margin-bottom: 20px\"></s-others-icon>\n          <span class=\"centerFlex\">暂无推荐字段</span>\n        </div>\n        <div v-else>\n          <el-scrollbar height=\"250px\">\n            <div\n              class=\"reflowPopoverItem\"\n              v-for=\"item in fieldList\"\n              :key=\"item.id\"\n              @mouseenter=\"activeItem = item\"\n              @mouseleave=\"activeItem = null\"\n            >\n              <el-row :gutter=\"10\">\n                <el-col :span=\"9\" class=\"sle\">\n                  <el-tooltip :content=\"item.name\" placement=\"top\" :show-after=\"500\" :disabled=\"!isTextOverflow\">\n                    <div\n                      class=\"tooltip-trigger\"\n                      v-html=\"getFieldName(item.name, item.matchedNames)\"\n                      @mouseenter=\"checkOverflow\"\n                    ></div>\n                  </el-tooltip>\n                </el-col>\n                <el-col class=\"sle\" :span=\"8\">\n                  <el-tooltip\n                    :content=\"getFieldTypeTitle(item)\"\n                    placement=\"top\"\n                    :show-after=\"500\"\n                    :disabled=\"!isTextOverflow\"\n                  >\n                    <div class=\"tooltip-trigger\" @mouseenter=\"checkOverflow\">{{ getFieldTypeTitle(item) }}</div>\n                  </el-tooltip>\n                </el-col>\n                <el-col :span=\"4\">\n                  {{ item.required ? '必填' : '非必填' }}\n                </el-col>\n                <el-col :span=\"3\" v-show=\"activeItem?.id === item.id\" style=\"color: #2383ff\">使用</el-col>\n              </el-row>\n            </div>\n          </el-scrollbar>\n        </div>\n        <div style=\"height: 18px; margin-top: 10px\">\n          <s-others-icon name=\"hint\" class=\"warningIcon\"></s-others-icon>\n          <span>输入_，可进行词根匹配</span>\n        </div>\n      </div>\n    </el-popover>\n    <!-- 添加至备选数据库字段库弹窗 -->\n    <el-dialog v-model=\"reflowDialogVisible\" title=\"一键添加到备选字段库\" width=\"50%\">\n      <el-table\n        ref=\"reflowTableRef\"\n        :data=\"reflowFieldList\"\n        @select=\"handleSelectReflowField\"\n        @select-all=\"handleSelectReflowField\"\n      >\n        <el-table-column type=\"selection\" width=\"40\" />\n        <el-table-column label=\"字段注释\" prop=\"label\" />\n        <el-table-column label=\"字段名\" prop=\"name\" />\n        <el-table-column label=\"数据类型\" prop=\"type\" />\n        <el-table-column label=\"是否必填\" prop=\"required\">\n          <template #default=\"scope\">\n            <span>{{ scope.row.required ? '是' : '否' }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"字段长度\" prop=\"length\">\n          <template #default=\"scope\">\n            <span>{{ getReflowFieldLength(scope.row) }}</span>\n          </template>\n        </el-table-column>\n      </el-table>\n      <template #footer>\n        <div class=\"reflowDialogFooter\">\n          <el-button\n            type=\"primary\"\n            :disabled=\"reflowConfirmBtnDisabled\"\n            :loading=\"confirmLoading\"\n            @click=\"handleUploadReflowField\"\n          >\n            确 定\n          </el-button>\n          <el-button @click=\"reflowDialogVisible = false\">取 消</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { inject, onMounted, ref, nextTick } from 'vue';\n  import { ElMessage, ClickOutside as vClickOutside } from 'element-plus';\n  import { requestApi, getIsReflowField, getFieldList, getReflowFieldList, uploadReflowField } from '../apis';\n  import { debounce } from '../utils';\n\n  const props = defineProps({\n    entity: Object,\n  });\n\n  const handleAddItem = () => {\n    addItem();\n    nextTick(() => {\n      onSetItemEdit(selectedItem.value, 'label', true);\n    });\n  };\n\n  const showReflowBtn = ref(false);\n\n  const reflowPopoverVisible = ref(false);\n  const fieldList = ref([]);\n  const reflowQuery = ref('');\n  const abortController = ref(null);\n  const requestId = ref(0); // 用于标识当前请求\n\n  const debounceQueryFieldList = debounce(() => {\n    // 设置loading状态\n    reflowPopoverLoading.value = true;\n\n    // 取消之前的请求\n    if (abortController.value) {\n      abortController.value.abort();\n    }\n\n    // 创建新的 AbortController 和请求ID\n    abortController.value = new AbortController();\n    const currentRequestId = ++requestId.value;\n\n    getFieldList({ query: reflowQuery.value }, abortController.value.signal)\n      .then(res => {\n        // 只有当前请求是最新的才更新数据\n        if (currentRequestId === requestId.value) {\n          fieldList.value = res.result || [];\n        }\n      })\n      .catch(err => {\n        if (err.name !== 'AbortError') {\n          console.error(err);\n        }\n      })\n      .finally(() => {\n        // 只有当前请求是最新的才更新加载状态\n        if (currentRequestId === requestId.value) {\n          abortController.value = null;\n          reflowPopoverLoading.value = false;\n        }\n      });\n  }, 400);\n\n  const reflowPopoverLoading = ref(false);\n  const activeItem = ref(null);\n\n  const getFieldName = (name, matchedNames) => {\n    if (!name || typeof name !== 'string') return '';\n    if (!Array.isArray(matchedNames)) return `<span style=\"color: red; font-weight: bold;\">${name}</span>`;\n\n    const matchedSet = new Set(matchedNames.filter(item => item && typeof item === 'string'));\n    const parts = name.split(/(_+)/);\n\n    return parts\n      .map(part => {\n        if (part.startsWith('_')) return part;\n        return matchedSet.has(part) ? part : `<span style=\"color: red; font-weight: bold;\">${part}</span>`;\n      })\n      .join('');\n  };\n\n  const getFieldTypeTitle = item => {\n    if (item.type === 'String') {\n      const stringLabel = getStringLabel(item.length);\n      return item.type + (stringLabel ? `  (${stringLabel})` : '');\n    }\n    return item.type;\n  };\n\n  const columnNameValidatorRef = ref(null);\n\n  const handleUseField = item => {\n    const target = selectedItem.value?.naslNode;\n    if (target?.concept === 'EntityProperty') {\n      target.app.emit('collect:start', { actionMsg: '数据建模插件更新字段名' });\n      const newName = target.parentNode?.getPropertyUniqueName?.(item.name) || item.name; // 保证字段名唯一\n      const typeName = item.type === 'Integer' ? 'Long' : item.type;\n      const updateData = {\n        name: newName,\n        columnName: newName,\n        required: item.required,\n        typeAnnotation: {\n          concept: 'TypeAnnotation',\n          typeKind: 'primitive',\n          typeNamespace: 'nasl.core',\n          typeName,\n        },\n      };\n      if (item.type === 'String' && item.length) {\n        const minRule = target.toJSON().rules.find(rule => rule.startsWith('minLength'));\n        Object.assign(updateData, {\n          databaseTypeAnnotation: {\n            concept: 'DatabaseTypeAnnotation',\n            typeName: 'varchar',\n            arguments: {\n              length: item.length,\n            },\n          },\n          rules: [minRule, `maxLength(${item.length})`].filter(Boolean),\n        });\n      }\n      target.update(updateData);\n      setTimeout(() => {\n        // 延迟收集，把外层onBlurLabel的change也收集到这次的batchInstruct中\n        target.app.emit('collect:end');\n      });\n\n      nextTick(async () => {\n        try {\n          const res = await columnNameValidatorRef.value?.validate();\n        } catch (error) {\n          // console.error(error);\n          // 新设置的字段名不符合规则，主动聚焦到输入框\n          onSetItemEdit(selectedItem.value, 'name', true);\n        }\n      });\n    }\n  };\n\n  const handleLabelFocus = label => {\n    reflowQuery.value = label;\n  };\n\n  const handleLabelBlur = async (event, slotProps, item) => {\n    reflowPopoverVisible.value = false;\n    reflowQuery.value = '';\n    fieldList.value = [];\n\n    event = event.replace(/_/g, ''); // event 去除掉_\n\n    slotProps.blurFn(event); // 触发模版中原来的失焦逻辑\n    if (activeItem.value) {\n      handleUseField(activeItem.value);\n      activeItem.value = null;\n    }\n  };\n\n  const handleLabelInput = (event, slotProps) => {\n    reflowPopoverVisible.value = true;\n    reflowQuery.value = event;\n    slotProps.inputChange(event); // 触发模版中原有的修改逻辑\n    // 外置设置防抖查询loading状态\n    reflowPopoverLoading.value = true;\n    debounceQueryFieldList();\n  };\n\n  onMounted(() => {\n    getIsReflowField({}).then(res => {\n      showReflowBtn.value = res.result;\n    });\n  });\n\n  // 一键添加到备选字段库\n  const reflowLoading = ref(false);\n  const reflowFieldList = ref([]);\n\n  const addReflowField = () => {\n    reflowLoading.value = true;\n\n    const filterList = ['id', 'createdTime', 'updatedTime', 'createdBy', 'updatedBy'];\n    const filterRegex = /^property\\d+$|^.*[\\u4e00-\\u9fa5].*$/;\n\n    const properties = props.entity?.toJSON()?.properties || [];\n    const tempReflowFieldList = [];\n    const nameSet = new Set();\n    properties.forEach(property => {\n      if (\n        !property.label ||\n        filterList.includes(property.name) ||\n        filterRegex.test(property.name) ||\n        property.typeAnnotation?.typeKind !== 'primitive'\n      ) {\n        return;\n      }\n      let type = property.typeAnnotation?.typeName || 'String';\n      if (type === 'Long') type = 'Integer'; // 整数类型需要重命名为Integer\n      const propertyName = property.name.replace(/\\d+$/, '') || '';\n      if (nameSet.has(propertyName)) {\n        return;\n      }\n      nameSet.add(propertyName);\n      tempReflowFieldList.push({\n        name: propertyName,\n        label: property.label || '',\n        required: property.required || false,\n        type,\n        length: type === 'String' ? property.databaseTypeAnnotation?.arguments?.length || 255 : void 0,\n      });\n    });\n    reflowFieldList.value = tempReflowFieldList;\n    if (reflowFieldList.length === 0) {\n      reflowLoading.value = false;\n      showMessage();\n      return;\n    }\n\n    // 备选库不需要校验字段唯一性，直接打开弹窗\n    requestApi(\n      getReflowFieldList,\n      {\n        list: tempReflowFieldList.map(item => ({\n          name: item.name,\n          label: item.label,\n        })),\n      },\n      res => {\n        if (res.result?.length === 0) {\n          showMessage();\n          return;\n        } else {\n          // 只有在res.result中的name，在tempReflowFieldList中存在，才显示\n          const set = new Set(res.result);\n          reflowFieldList.value = tempReflowFieldList.filter(item => set.has(item.name));\n          reflowDialogVisible.value = true;\n          nextTick(() => {\n            reflowConfirmBtnDisabled.value = false;\n            reflowTableRef.value.toggleAllSelection();\n          });\n        }\n      },\n      err => {\n        console.error(err);\n      },\n      () => {\n        reflowLoading.value = false;\n      }\n    );\n    // reflowDialogVisible.value = true;\n    // reflowLoading.value = false;\n    // nextTick(() => {\n    //   reflowConfirmBtnDisabled.value = false;\n    //   reflowTableRef.value.toggleAllSelection();\n    // });\n  };\n\n  // 显示[暂无可回流到备选数据库的字段]消息\n  const showMessage = (type = 'warning', msg = '暂无可回流到备选数据库的字段') => {\n    ElMessage.closeAll();\n    ElMessage[type](msg);\n  };\n\n  const reflowDialogVisible = ref(false);\n  const reflowTableRef = ref(null);\n\n  const getStringLabel = length => {\n    const map = {\n      255: '短 255',\n      4000: '中 4000',\n      16777215: '长 16777215',\n    };\n    return map[length] || length;\n  };\n  const getReflowFieldLength = row => {\n    return row.type === 'String' ? getStringLabel(row.length) : '-';\n  };\n\n  const reflowConfirmBtnDisabled = ref(false);\n  const isTextOverflow = ref(false);\n\n  // 检测文本是否溢出\n  const checkOverflow = event => {\n    const element = event.target;\n    isTextOverflow.value = element.scrollWidth > element.clientWidth;\n  };\n  const handleSelectReflowField = (selection, row) => {\n    reflowConfirmBtnDisabled.value = selection.length === 0;\n  };\n\n  const confirmLoading = ref(false);\n  const handleUploadReflowField = () => {\n    confirmLoading.value = true;\n    const selectedList = reflowTableRef.value.getSelectionRows();\n    requestApi(\n      uploadReflowField,\n      {\n        list: selectedList,\n      },\n      res => {\n        if (res.result) {\n          showMessage('success', '添加成功');\n          reflowDialogVisible.value = false;\n        } else {\n          showMessage('error', res.msg || '添加失败');\n        }\n      },\n      err => {\n        // console.error(err);\n        showMessage('error', err);\n      },\n      () => {\n        confirmLoading.value = false;\n      }\n    );\n  };\n\n  const {\n    /**\n     * 名称输入框节点\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    nameEditor,\n    /**\n     * 标题输入框节点\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    labelEditor,\n    /**\n     * 描述输入框节点\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    descriptionEditor,\n    /**\n     * 表格节点\n     *\n     * @type {Vue.ref<HTMLElement>}\n     */\n    tableviewRef,\n    /**\n     * 数据库视图导入生成的实体\n     * entity 的 origin 属性是否是 view\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    isViewEntity,\n    /**\n     * 添加实体属性\n     *\n     * @function\n     */\n    addItem,\n    /**\n     * 生成移除按钮的提示\n     *\n     * @function\n     * @return string\n     */\n    getRemoveTooltip,\n    /**\n     * 表格选中的行元素\n     *\n     * @type {Vue.computed<object>}\n     */\n    selectedItem,\n    /**\n     * 是否是官方实体属性\n     *\n     * @function\n     * @param entityProperty - 实体属性\n     * @return boolean\n     */\n    isOfficalEntityProperty,\n    /**\n     * 移除实体索引\n     *\n     * @function\n     * @param item - 需要删除的行元素\n     */\n    removeItem,\n    /**\n     * 表格的渲染数据\n     *\n     * @type {Vue.computed<array>}\n     */\n    renderList,\n    /**\n     * 上移当前选中的实体索引\n     *\n     * @function\n     */\n    moveUpItem,\n    /**\n     * 下移当前选中的实体索引\n     *\n     * @function\n     */\n    moveDownItem,\n    /**\n     * 表格高度\n     *\n     * @type {Vue.computed<number>}\n     */\n    tableHeight,\n    /**\n     * 设置表单列的样式\n     *\n     * @function\n     */\n    setRowClassName,\n    /**\n     * 右键选中表格行元素\n     *\n     * @function\n     */\n    onContextMenuRow,\n    /**\n     * 选中行元素时触发\n     *\n     * @function\n     * @param item - 行元素\n     */\n    onSelectRowWithDataType,\n    /**\n     * 拖拽调整表格列宽度\n     *\n     * @function\n     * @param newWidth - 新宽度\n     * @param oldWidth - 旧宽度\n     * @param column - 列元素\n     */\n    handleDragend,\n    /**\n     * 是否禁止编辑行元素\n     *\n     * @function\n     * @param item - 行元素\n     */\n    getDisable,\n    /**\n     * 设置表格列元素编辑状态\n     *\n     * @function\n     * @param item - 当前行元素\n     * @param name - 属性名称\n     * @param focus - 是否选中输入框\n     */\n    onSetItemEdit,\n    /**\n     * Tab 键跳转切换下一个属性\n     *\n     * @function\n     * @param event - 原生键盘事件\n     * @param item - 行元素\n     * @param name - 属性名称\n     */\n    onKeyUp,\n    /**\n     * 名称输入框失焦并保存数据\n     *\n     * @function\n     * @param item - 当前行元素\n     * @param name - 需要保存的名称\n     */\n    onBlurName,\n    /**\n     * 验证不通过时滚动到错误元素\n     */\n    errorScrollIntoView,\n    /**\n     * 存在错误\n     *\n     * @type {Vue.ref<boolean>}\n     */\n    hasInvalid,\n    /**\n     * 显示输入框的提示\n     *\n     * @type {Vue.ref<string>}\n     */\n    tooltipOpened,\n    /**\n     * 属性名，暂时存储属性名，用于输入框输入等操作\n     *\n     * @type {Vue.ref<string>}\n     */\n    itemNameValue,\n    /**\n     * 输入框获取焦点时触发\n     *\n     * 1. 设置tooltipOpened的值\n     * 2. 设置itemNameValue\n     *\n     * @function\n     * @param item - 当前行元素\n     */\n    onFocusName,\n    /**\n     * 标题输入框失焦并保存数据\n     *\n     * @function\n     * @param item - 当前行元素\n     * @param name - 需要保存的标题\n     */\n    onBlurLabel,\n    /**\n     * 是否应用正在发布\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    isAppDeploying,\n    /**\n     * 是否实体已经发布过并且是复合类型\n     *\n     * 1. 实体已经发布过，在app下的depEntities可以找到该实体\n     * 2. 实体是复合类型：'Map', 'List'，或者typeKind是reference并且namespace是'entities', 'structures'\n     *\n     * @function\n     * @param property - 实体属性\n     * @return boolean\n     */\n    isPublishedComplexType,\n    /**\n     * 数据类型的标题\n     *\n     * @function\n     * @param item - 行元素\n     * @return string\n     */\n    showDatatype,\n    /**\n     * 双击编辑数据类型输入框\n     *\n     * @function\n     * @param item - 行元素\n     * @param event - 原生事件\n     */\n    onDblClickDatatype,\n    /**\n     * 获取可选类型\n     *\n     * @function\n     * @return 可选类型\n     */\n    getDataTypeList,\n    /**\n     * 失焦时取消当前行元素编辑状态\n     *\n     * @function\n     * @param item - 行元素\n     */\n    handleBlur,\n    /**\n     * 修改实体属性类型\n     *\n     * @function\n     * @param event - event.value 实际使用数据\n     */\n    onChangeDatatype,\n    /**\n     * 是否属于官方实体\n     *\n     * @function\n     * @param entityProperty - 实体属性\n     * @return boolean\n     */\n    isOfficalEntity,\n    /**\n     * 复合类型\n     *\n     * @function\n     * @param property - 实体属性\n     * @return boolean\n     */\n    isComplexType,\n    /**\n     * 修改是否必填\n     *\n     * @function\n     * @param item - 行元素\n     * @param event - el-checkbox 原生事件\n     */\n    requireInput,\n    /**\n     * 能否设置默认值\n     *\n     * @function\n     * @param property - 实体属性\n     * @return boolean\n     */\n    canSetDefaultValue,\n    /**\n     * 对应节点是否有错误\n     *\n     * @function\n     * @param node - 节点\n     * @return boolean\n     */\n    IsError,\n    /**\n     * 显示在表格\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    inTable,\n    /**\n     * 全部勾选或者取消全部勾选\n     *\n     * @function\n     * @param event - el-checkhox 原生事件\n     * @param key - 属性名\n     */\n    toggleSelectAll,\n    /**\n     * 设置显示属性\n     *\n     * @function\n     * @param item - 行元素\n     * @param event - el-checkhox 原生事件\n     * @param key - 属性名\n     */\n    setDisplay,\n    /**\n     * 显示在筛选\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    inFilter,\n    /**\n     * 显示在表格\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    inForm,\n    /**\n     * 显示在详情\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    inDetail,\n    /**\n     * ElementPlus 的 popper 配置\n     */\n    popperOptions,\n    /**\n     * 右键菜单选中项\n     *\n     * @type {Vue.ref<object>}\n     */\n    menuSelectedItem,\n    /**\n     * 项对应的右键菜单是否存在\n     */\n    popperExistMap,\n    /**\n     * 项对应的右键菜单是否显示\n     */\n    popperVisibleMap,\n    /**\n     * 右键菜单的触发节点\n     */\n    triggerRef,\n    /**\n     * 右键菜单的出现位置\n     */\n    placement,\n    /**\n     * 右键菜单隐藏时的处理函数\n     */\n    onMenuPopperHide,\n    /**\n     * 菜单点击时\n     */\n    onMenuClick,\n    /**\n     * 菜单-查找引用\n     *\n     * @function\n     */\n    onMenuFindUsage,\n    /**\n     * 菜单-删除\n     *\n     * @function\n     */\n    onMenuDelete,\n    /**\n     * 实体属性数据类型\n     *\n     * @type {Vue.computed<string>}\n     */\n    typeName,\n    /**\n     * 小数位数的校验错误信息\n     *\n     * @type {Vue.computed<string>}\n     */\n    scaleErrorMsg,\n    /**\n     * 属性的响应式数据\n     *\n     * @type {Vue.reactive<object>}\n     * @property scale - 小数位数\n     */\n    model,\n    /**\n     * 小数位数的范围\n     *\n     * @type {Vue.computed<object>}\n     * @property min - 最小值\n     * @property max - 最大值\n     */\n    scaleOption,\n    /**\n     * 是否禁用小数位数\n     *\n     * @function\n     * @param item - 行元素\n     * @return boolean\n     */\n    decimalDisabled,\n    /**\n     * 修改小数位数\n     *\n     * @function\n     */\n    setScale,\n    /**\n     * 关联属性\n     *\n     * @type {Vue.ref<string>}\n     */\n    entityReference,\n    /**\n     * 类型列表\n     *\n     * @type {Vue.ref<array>}\n     */\n    dataTypeList,\n    /**\n     * 关联实体存在错误\n     *\n     * @function\n     * @param node - 节点\n     * @return boolean\n     */\n    isReleationEntityError,\n    /**\n     * 设置关联属性\n     *\n     * @function\n     * @param event - event.value 表示实际数据\n     */\n    onSaveReference,\n    /**\n     * 清除关联属性\n     *\n     * @function\n     */\n    onClearReference,\n    /**\n     * 设置关联属性实体记录删除规则\n     *\n     * @function\n     * @param event - 选中事件对象\n     */\n    setDeleteRule,\n    /**\n     * 设置错误信息\n     *\n     * @function\n     * @param errorMsgs - 错误信息\n     */\n    changeErrorMsgs,\n    /**\n     * 是否来源于数据库表/excel\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    isTableOrExcelOrigin,\n    /**\n     * 描述输入框失焦并保存数据\n     *\n     * @function\n     * @param item - 当前行元素\n     * @param name - 需要保存的描述\n     */\n    onBlurDescription,\n    /**\n     * 是否显示数据库高级设置\n     *\n     * 1.没有设置数据源\n     * 2.实体是excel导入或者数据源反向导入\n     * 3.权限实体（贤宇说一直是以LCAP开头来判断的）\n     * 这3种情况不显示数据库设置\n     *\n     * @type {Vue.computed<boolean>}\n     */\n    showDatabasetype,\n    /**\n     * 实体在同步数据源时产生的错误信息\n     *\n     * @type {Vue.computed<array>}\n     */\n    sourceSyncErrMsgs,\n    /**\n     * 错误信息\n     *\n     * @type {Vue.computed<array>}\n     */\n    errorMsgs,\n    /**\n     * 数据库列名校验规则\n     *\n     * @type {Vue.computed<object>}\n     */\n    entityPropertyColumnNameRules,\n    /**\n     * 数据库列名输入框占位符\n     *\n     * @type {Vue.computed<string>}\n     */\n    entityPropertyColumnNamePlaceholder,\n    /**\n     * 生成名称校验规则\n     *\n     * @function\n     * @param node - 节点\n     * @return 名称校验规则\n     */\n    getEntityPropertyRules,\n    /**\n     * 名称输入框占位符\n     *\n     * @type {Vue.computed<string>}\n     */\n    entityPropertyPlaceholder,\n    /**\n     * 设置选中行的数据类型\n     *\n     * @function\n     * @param value - 数据类型\n     */\n    setDataType,\n  } = inject('$context');\n</script>\n\n<style module=\"$propertyDesigner\">\n  .errorMsg {\n    color: var(--designer-font-second-color);\n    margin: 0 46px;\n  }\n\n  .errorMsg + .errorMsg {\n    margin-top: 10px;\n  }\n\n  .infoicon {\n    display: inline-block;\n    height: 12px;\n    width: 12px;\n    background: var(--assets-warning-info-svg) no-repeat;\n    background-size: 100% 100%;\n    vertical-align: -1px;\n    margin-right: 5px;\n  }\n</style>\n\n<style module>\n  div.table [class^='u-input__']:focus,\n  div.table [class^='u-input__'][focus],\n  div.table [class^='u-input__']:hover,\n  div.table [class^='u-select__']:focus,\n  div.table [class^='u-select__'][focus],\n  div.table [class^='u-select__'][opened],\n  div.table [class^='u-select__']:hover {\n    border-color: var(--entity-designer-table-input-focus-border-color);\n    box-shadow: var(--entity-designer-table-input-focus-box-shadow);\n  }\n\n  .head {\n    margin: 16px;\n    padding: 16px;\n    background: var(--entity-designer-panel-background-color);\n    border: 1px solid var(--entity-designer-border-color);\n  }\n\n  div.head [class^='u-input__'] {\n    height: 32px;\n    line-height: 30px;\n  }\n\n  .body {\n    margin: 16px;\n    background: var(--entity-designer-panel-background-color);\n    border: 1px solid var(--entity-designer-border-color);\n    overflow: hidden;\n  }\n\n  .entityListIcon {\n    width: 16px;\n    height: 16px;\n    display: inline-block;\n    vertical-align: middle;\n  }\n\n  .edit {\n    display: inline-block;\n    width: 100%;\n    line-height: 38px;\n  }\n\n  .edit:hover {\n    cursor: pointer;\n  }\n\n  .edit:focus {\n    outline: none;\n  }\n\n  .edit .text > span {\n    color: var(--entity-designer-table-color);\n  }\n\n  .edit .text {\n    display: inline-block;\n    vertical-align: middle;\n  }\n\n  .editwrap {\n    margin-left: -9px;\n  }\n\n  .editwrap [class^='s-datatype-select__'] {\n    vertical-align: middle;\n  }\n\n  .text {\n    width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    word-break: break-all;\n  }\n\n  .textContent {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    word-break: break-all;\n    max-width: calc(100% - 28px);\n    margin-right: 8px;\n  }\n  .textContent:empty {\n    display: none;\n  }\n\n  .text > span {\n    display: inline-block;\n    color: var(--entity-designer-table-disabled-color);\n    vertical-align: middle;\n  }\n\n  .validator {\n    width: 100%;\n  }\n\n  .btnnav {\n    border-bottom: 1px solid var(--entity-designer-border-color);\n    border-top: 1px solid var(--entity-designer-border-color);\n    padding: 5px 24px;\n  }\n\n  div.btnnav[direction='horizontal'][gap='small'] > :not(:last-child) {\n    margin-right: 8px;\n  }\n\n  .btnnav1 {\n    border-top: none;\n    background-color: var(--entity-designer-btnnav-background);\n  }\n\n  .bodywrap {\n    padding: 16px 24px 0;\n    overflow-x: auto;\n    overflow-y: hidden;\n    margin-bottom: 24px;\n  }\n\n  div.bodywrap [class^='u-grid-layout_column__'] {\n    padding-bottom: 0;\n  }\n\n  .bodywrap1 {\n    padding: 16px 24px;\n    background-color: var(--entity-designer-body-background);\n  }\n\n  .advancedWrap {\n    padding: 10px 24px 25px 24px;\n    background-color: var(--entity-designer-body-background);\n  }\n\n  .entityfrom [class^='u-form_item_label__'] {\n    width: 36px !important;\n  }\n\n  div.input {\n    width: 100%;\n    margin-right: 12px;\n  }\n\n  .iconBase {\n    display: inline-block;\n    width: 20px;\n    height: 38px;\n    line-height: 38px;\n    text-align: center;\n    font-size: var(--font-size-large);\n    font-size: 14px;\n  }\n\n  .iconKey {\n    color: var(--designer-table-edit-icon-key-color);\n  }\n\n  .iconLink {\n    color: var(--designer-table-edit-icon-link-color);\n  }\n\n  .iconEdit {\n    color: var(--color-base);\n    opacity: 0;\n  }\n\n  .iconLink2 {\n    display: inline-block;\n    width: 16px;\n    height: 16px;\n    line-height: 16px;\n    font-size: var(--font-size-huge);\n    color: var(--brand-primary);\n    cursor: pointer;\n    position: relative;\n    top: 2px;\n    left: 4px;\n  }\n\n  .edit:hover .iconEdit {\n    opacity: 0.6;\n    cursor: pointer;\n  }\n\n  .edit:hover .iconEdit:hover {\n    opacity: 1;\n  }\n\n  .icon {\n    width: 14px;\n    height: 14px;\n    display: inline-block;\n    vertical-align: middle;\n    background-repeat: no-repeat;\n  }\n\n  div.normalfrom [class^='u-form_item_label__'] {\n    width: 60px !important;\n  }\n\n  div.normalfrom > div {\n    margin-bottom: 16px;\n  }\n\n  div.normalfrom [class^='u-input__'],\n  div.normalfrom [class^='u-select__'],\n  div.normalfrom [class^='u-form_item_field__'],\n  div.normalfrom [class^='u-form_item_wrap__'] {\n    width: 240px;\n    max-width: 240px;\n  }\n\n  div.normalfrom [class^='u-input__'] {\n    height: 32px;\n    line-height: 30px;\n  }\n\n  div.reffrom [class^='u-form_item_label__'] {\n    width: 94px !important;\n  }\n\n  div.reffrom [class^='u-input__'],\n  div.reffrom [class^='u-tree-select__'],\n  div.reffrom [class^='u-select__'],\n  div.reffrom [class^='u-form_item_field__'],\n  div.reffrom [class^='u-form_item_wrap__'] {\n    width: 240px;\n    max-width: 240px;\n  }\n\n  div.reffrom [class^='u-input__'] {\n    height: 32px;\n    line-height: 30px;\n  }\n\n  div.reffrom .text {\n    opacity: 0.3;\n  }\n\n  div.reffrom [class^='u-form_item_extra__'] {\n    width: 12px;\n  }\n\n  .flexgrid {\n    display: flex;\n  }\n\n  .gridcolumn {\n    width: auto;\n  }\n\n  .gridcolumn:not(:last-child) {\n    margin-right: 24px;\n  }\n\n  div.fixedwidthinput,\n  div.textarea {\n    width: 240px;\n    max-width: 240px;\n  }\n\n  .icondivider {\n    color: var(--entity-designer-border-color);\n  }\n\n  .advanced {\n    padding-top: 10px;\n  }\n\n  .scaleErrorMsg {\n    position: absolute;\n    color: rgb(242, 73, 87);\n  }\n  .typeError {\n    border-radius: 4px;\n    border: 1px solid var(--input-border-color-error);\n  }\n  .checkbox [class='el-checkbox__label'] {\n    line-height: 23px;\n    font-size: 12px;\n    text-overflow: ellipsis;\n    text-align: left;\n    font-weight: 600;\n    color: var(--el-table-header-text-color);\n  }\n  .checkbolabel [class='el-checkbox__label'] {\n    line-height: 23px !important;\n    font-size: 12px !important;\n    text-overflow: ellipsis !important;\n    text-align: left !important;\n    font-weight: 600 !important;\n    color: var(--el-table-header-text-color) !important;\n  }\n  .checkbox {\n    height: 23px;\n    line-height: 23px;\n  }\n</style>\n<style module=\"$contextmenu\">\n  .menu {\n    margin-top: 0 !important;\n  }\n\n  .menu .group [class^='el-menu-item-group__title'] {\n    --el-menu-text-color: var(--el-menu-top-title-text-color);\n    height: 32px;\n    font-weight: bold;\n    border-bottom: 1px solid var(--line-color-regular);\n    background: var(--fill-color-thead);\n    color: var(--el-menu-text-color);\n    cursor: auto;\n  }\n</style>\n\n<style scoped>\n  .tableCell :deep(.cell) {\n    padding: 0;\n    line-height: 20px;\n    padding-left: 6px;\n  }\n  .theadLable {\n    overflow: visible;\n    width: 100%;\n    padding-left: 6px;\n    border-right: 1px solid var(--entity-designer-property-dragger-border-color);\n  }\n  .topIconGroup {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 8px;\n    background-color: var(--entity-designer-icon-group-background-color);\n    padding: 5px 24px;\n    border-bottom: 1px solid var(--entity-designer-icon-group-border-color);\n    position: sticky;\n    z-index: 9;\n    top: 64px;\n  }\n\n  .icon {\n    margin-right: 8px;\n  }\n\n  .extraForm :deep(.el-form-item__label) {\n    font-size: 12px;\n  }\n\n  :deep(.row-style) {\n    border: 1px solid #4d87fe;\n  }\n\n  :deep(.cell-style) {\n    border-bottom: 1px solid #409eff;\n  }\n\n  .elFormFlex {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n</style>\n\n<style scoped>\n  .reflowPopover {\n    width: 340px;\n    padding: 8px;\n  }\n\n  .reflowPopoverEmpty {\n    padding: 20px 0 30px;\n  }\n\n  .reflowPopoverItem {\n    height: 48px;\n    line-height: 48px;\n    padding: 0 12px;\n    border-radius: 4px;\n    cursor: pointer;\n    &:hover {\n      background-color: #edf2f9;\n    }\n  }\n\n  .warningIcon {\n    margin-right: 4px;\n  }\n\n  .reflowDialogFooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  /* 居中对齐flex布局 */\n  .centerFlex {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  /* 单行文本溢出省略号 */\n  .sle,\n  [sle] {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  /* tooltip触发器样式 */\n  .tooltip-trigger {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n</style>\n","// 导出一个封装函数，把传入的函数封装成防抖函数\nexport function debounce(func, wait = 150) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n}\n","\n      import API from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=0&id=4dd96507&module=%24propertyDesigner&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=0&id=4dd96507&module=%24propertyDesigner&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=1&id=4dd96507&module=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=1&id=4dd96507&module=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=2&id=4dd96507&module=%24contextmenu&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=2&id=4dd96507&module=%24contextmenu&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=3&id=4dd96507&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=3&id=4dd96507&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=4&id=4dd96507&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./EntityPropertyDesigner.vue?vue&type=style&index=4&id=4dd96507&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./EntityPropertyDesigner.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EntityPropertyDesigner.vue?vue&type=script&setup=true&lang=js\"\n\nconst cssModules = {}\nimport style0 from \"./EntityPropertyDesigner.vue?vue&type=style&index=0&id=4dd96507&module=%24propertyDesigner&lang=css\"\ncssModules[\"$propertyDesigner\"] = style0\nimport style1 from \"./EntityPropertyDesigner.vue?vue&type=style&index=1&id=4dd96507&module=true&lang=css\"\ncssModules[\"$style\"] = style1\nimport style2 from \"./EntityPropertyDesigner.vue?vue&type=style&index=2&id=4dd96507&module=%24contextmenu&lang=css\"\ncssModules[\"$contextmenu\"] = style2\nimport \"./EntityPropertyDesigner.vue?vue&type=style&index=3&id=4dd96507&scoped=true&lang=css\"\nimport \"./EntityPropertyDesigner.vue?vue&type=style&index=4&id=4dd96507&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__cssModules',cssModules],['__scopeId',\"data-v-4dd96507\"]])\n\nexport default __exports__","<template>\n  <!-- 实体属性编辑器 -->\n  <skeleton-portal name=\"views/data/entity-property-designer/render\" method=\"insert\">\n    <template v-slot=\"props\">\n      <EntityPropertyDesigner v-bind=\"props\" />\n    </template>\n  </skeleton-portal>\n</template>\n\n<script setup>\n  import EntityPropertyDesigner from '../EntityPropertyDesigner.vue'\n  import { useAttrs } from 'vue'\n\n  const attrs = useAttrs()\n</script>\n\n<style module>\n  .button {\n    margin: 5px;\n  }\n</style>\n","\n      import API from \"!../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.90.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!../../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./index.vue?vue&type=style&index=0&id=6bf5b895&module=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/.pnpm/css-loader@6.10.0_webpack@5.90.0/node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!../../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/index.js??ruleSet[1].rules[7].use[0]!./index.vue?vue&type=style&index=0&id=6bf5b895&module=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst cssModules = {}\nimport style0 from \"./index.vue?vue&type=style&index=0&id=6bf5b895&module=true&lang=css\"\ncssModules[\"$style\"] = style0\n\nimport exportComponent from \"../../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.20_webpack@5.90.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__cssModules',cssModules]])\n\nexport default __exports__","import { createPlugin } from 'opp-tools';\n\nimport Render from '@/components/render';\n\nconst plugin = {\n  name: 'cust_aux_data_model_plugin',\n  /**\n   * Skeleton 节点的操作方式\n   * \n   * hide - 隐藏当前节点\n   * show - 显示当前节点\n   * remove - 移除当前节点\n   * replace - 替换同名节点\n   * append - 将当前节点插入父级节点尾部\n   * unshift - 将当前节点插入父级节点头部\n   * insert - 若当前节点存在则替换，否则插入至父级节点头部\n   */\n  method: 'insert',\n  /**\n   * 对应 Skeleton 节点名称\n   * \n   * 低代码编辑器控制台输入 $plugin.showSkeleton()，\n   * 查看编辑器内部已有 Skeleton 节点。\n   */\n  container: 'left-side-nav/main/test2',\n  dependencies: ['store-ide', 'store-app', 'skeleton'],\n};\n\nexport default createPlugin(Render)(plugin);\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","locals","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","sfc","props","__vccOpts","key","val","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","nc","bind","fn","thisArg","arguments","getPrototypeOf","iterator","kindOf","cache","create","thing","str","slice","toLowerCase","kindOfTest","type","typeOfTest","isArray","Array","isUndefined","isBuffer","constructor","isFunction","isArrayBuffer","isString","isNumber","isObject","isPlainObject","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","forEach","allOwnKeys","l","keys","getOwnPropertyNames","len","findKey","_key","_global","globalThis","self","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","isAsyncFn","_setImmediate","setImmediateSupported","setImmediate","postMessageSupported","postMessage","token","Math","random","callbacks","addEventListener","source","shift","cb","setTimeout","asap","queueMicrotask","process","nextTick","isFormData","kind","FormData","append","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isEmptyObject","isStream","pipe","merge","caseless","assignValue","targetKey","extend","b","trim","replace","stripBOM","charCodeAt","inherits","superConstructor","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","String","lastIndex","indexOf","toArray","arr","forEachEntry","_iterator","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","writable","set","toObjectSet","arrayOrString","delimiter","define","split","toCamelCase","m","p1","p2","toUpperCase","noop","toFiniteNumber","defaultValue","Number","isFinite","isSpecCompliantForm","toJSONObject","stack","visit","reducedValue","isThenable","then","catch","isIterable","AxiosError","message","code","config","request","response","captureStackTrace","status","utils","toJSON","description","number","fileName","lineNumber","columnNumber","from","error","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","predicates","test","formData","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","some","isFlatArray","el","exposedHelpers","build","pop","encode","charMap","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","url","serialize","serializeFn","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","clear","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","_navigator","navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","location","href","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","platform","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parse","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","dest","entry","parser","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","targets","asStrings","getSetCookie","first","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","floor","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","min","bytes","timestamps","firstSampleTS","tail","chunkLength","now","Date","startedAt","bytesCount","passed","round","lastArgs","timer","timestamp","threshold","invoke","args","clearTimeout","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","progressEventDecorator","throttled","asyncDecorator","isMSIE","URL","protocol","host","port","userAgent","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","buildFullPath","baseURL","requestedURL","allowAbsoluteUrls","isRelativeUrl","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","username","password","Boolean","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","Promise","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","err","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","end","pos","trackStream","stream","onProgress","onFinish","async","iterable","asyncIterator","reader","getReader","readStream","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","body","duplex","supportsResponseStream","resolvers","res","_","ERR_NOT_SUPPORT","fetchOptions","composedSignal","toAbortSignal","requestContentLength","getContentLength","size","_request","getBodyLength","resolveBodyLength","contentTypeHeader","flush","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","knownAdapters","http","xhr","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","dummy","boolean","function","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","c","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","toFormData","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","post","apiGetIsReflowField","apiGetFieldList","apiGetReflowFieldList","apiUploadReflowField","requestApi","success","fail","finallyFn","finally","getReflowFieldList","uploadReflowField","handleAddItem","addItem","onSetItemEdit","selectedItem","showReflowBtn","ref","reflowPopoverVisible","fieldList","reflowQuery","abortController","requestId","debounceQueryFieldList","func","wait","debounce","reflowPopoverLoading","currentRequestId","getFieldList","query","activeItem","getFieldName","matchedNames","matchedSet","Set","part","startsWith","getFieldTypeTitle","stringLabel","getStringLabel","columnNameValidatorRef","onMounted","reflowLoading","reflowFieldList","addReflowField","filterList","filterRegex","properties","entity","tempReflowFieldList","nameSet","property","label","includes","typeAnnotation","typeKind","typeName","propertyName","add","required","databaseTypeAnnotation","showMessage","reflowDialogVisible","reflowConfirmBtnDisabled","reflowTableRef","toggleAllSelection","msg","ElMessage","closeAll","isTextOverflow","checkOverflow","scrollWidth","clientWidth","handleSelectReflowField","selection","row","confirmLoading","handleUploadReflowField","getSelectionRows","nameEditor","labelEditor","descriptionEditor","tableviewRef","isViewEntity","getRemoveTooltip","isOfficalEntityProperty","removeItem","renderList","moveUpItem","moveDownItem","tableHeight","setRowClassName","onContextMenuRow","onSelectRowWithDataType","handleDragend","getDisable","onKeyUp","onBlurName","errorScrollIntoView","hasInvalid","tooltipOpened","itemNameValue","onFocusName","onBlurLabel","isAppDeploying","isPublishedComplexType","showDatatype","onDblClickDatatype","getDataTypeList","handleBlur","onChangeDatatype","isOfficalEntity","isComplexType","requireInput","canSetDefaultValue","IsError","inTable","toggleSelectAll","setDisplay","inFilter","inForm","inDetail","popperOptions","menuSelectedItem","popperExistMap","popperVisibleMap","triggerRef","placement","onMenuPopperHide","onMenuClick","onMenuFindUsage","onMenuDelete","scaleErrorMsg","model","scaleOption","decimalDisabled","setScale","entityReference","dataTypeList","isReleationEntityError","onSaveReference","onClearReference","setDeleteRule","changeErrorMsgs","isTableOrExcelOrigin","onBlurDescription","showDatabasetype","sourceSyncErrMsgs","errorMsgs","entityPropertyColumnNameRules","entityPropertyColumnNamePlaceholder","getEntityPropertyRules","entityPropertyPlaceholder","setDataType","inject","class","$style","tooltip","button","disabled","icondivider","loading","bodywrap","naslNode","height","padding","border","width","resizable","$index","iconBase","iconKey","iconLink","text","edit","tabindex","$event","title","textContent","iconEdit","editwrap","rules","valid","slotProps","placeholder","input","blurFn","concept","app","emit","actionMsg","newName","getPropertyUniqueName","updateData","columnName","typeNamespace","minRule","find","rule","validate","handleUseField","inputChange","blur","visible","unionable","lastVersion","emptyable","hasAnonymousStructure","readonly","editable","checkbox","generationRule","node","checkbolabel","display","trigger","$contextmenu","menu","group","flexgrid","bodywrap1","gridcolumn","reffrom","blockFromLayout","inline","direction","color","scale","max","iconLink2","layout","deleteRule","setColumnName","blurChange","advancedWrap","gap","errorMsg","$propertyDesigner","infoicon","gutter","span","footer","scope","cssModules","useAttrs","createPlugin","container","dependencies"],"sourceRoot":""}